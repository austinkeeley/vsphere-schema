// vSphere Schema v5.5
module.exports = function(env) {

    var merge = env.merge;
    var _self = this;

    _self.ActionParameter = {"type":"ActionParameter","enum":{"alarm":"alarm","alarmName":"alarmName","declaringSummary":"declaringSummary","eventDescription":"eventDescription","newStatus":"newStatus","oldStatus":"oldStatus","target":"target","targetName":"targetName","triggeringSummary":"triggeringSummary"}};
    _self.ActionType = {"type":"ActionType","enum":{"HostMaintenanceV1":"HostMaintenanceV1","HostPowerV1":"HostPowerV1","MigrationV1":"MigrationV1","StorageMigrationV1":"StorageMigrationV1","StoragePlacementV1":"StoragePlacementV1","VmPowerV1":"VmPowerV1"}};
    _self.AffinityType = {"type":"AffinityType","enum":{"cpu":"cpu","memory":"memory"}};
    _self.AgentInstallFailedReason = {"type":"AgentInstallFailedReason","enum":{"AgentNotReachable":"AgentNotReachable","AgentNotRunning":"AgentNotRunning","AgentUploadFailed":"AgentUploadFailed","AgentUploadTimedout":"AgentUploadTimedout","InstallTimedout":"InstallTimedout","NotEnoughSpaceOnDevice":"NotEnoughSpaceOnDevice","PrepareToUpgradeFailed":"PrepareToUpgradeFailed","SignatureVerificationFailed":"SignatureVerificationFailed","UnknownInstallerError":"UnknownInstallerError"}};
    _self.ManagedObjectReference = {"type":"ManagedObjectReference","properties":{"type":"xsd:string","value":"xsd:string"}};
    _self.ManagedEntityStatus = {"type":"ManagedEntityStatus","enum":{"gray":"gray","green":"green","red":"red","yellow":"yellow"}};
    _self.ArrayUpdateOperation = {"type":"ArrayUpdateOperation","enum":{"add":"add","edit":"edit","remove":"remove"}};
    _self.AutoStartAction = {"type":"AutoStartAction","enum":{"guestShutdown":"guestShutdown","none":"none","powerOff":"powerOff","powerOn":"powerOn","suspend":"suspend","systemDefault":"systemDefault"}};
    _self.AutoStartWaitHeartbeatSetting = {"type":"AutoStartWaitHeartbeatSetting","enum":{"no":"no","systemDefault":"systemDefault","yes":"yes"}};
    _self.CannotMoveFaultToleranceVmMoveType = {"type":"CannotMoveFaultToleranceVmMoveType","enum":{"cluster":"cluster","resourcePool":"resourcePool"}};
    _self.CannotPowerOffVmInClusterOperation = {"type":"CannotPowerOffVmInClusterOperation","enum":{"guestShutdown":"guestShutdown","guestSuspend":"guestSuspend","powerOff":"powerOff","suspend":"suspend"}};
    _self.CannotUseNetworkReason = {"type":"CannotUseNetworkReason","enum":{"MismatchedDvsVersionOrVendor":"MismatchedDvsVersionOrVendor","MismatchedNetworkPolicies":"MismatchedNetworkPolicies","NetworkReservationNotSupported":"NetworkReservationNotSupported","VMotionToUnsupportedNetworkType":"VMotionToUnsupportedNetworkType"}};
    _self.CheckTestType = {"type":"CheckTestType","enum":{"datastoreTests":"datastoreTests","hostTests":"hostTests","networkTests":"networkTests","resourcePoolTests":"resourcePoolTests","sourceTests":"sourceTests"}};
    _self.ClusterDasAamNodeStateDasState = {"type":"ClusterDasAamNodeStateDasState","enum":{"agentShutdown":"agentShutdown","configuring":"configuring","error":"error","initialized":"initialized","nodeFailed":"nodeFailed","running":"running","unconfiguring":"unconfiguring","uninitialized":"uninitialized"}};
    _self.ClusterDasConfigInfoHBDatastoreCandidate = {"type":"ClusterDasConfigInfoHBDatastoreCandidate","enum":{"allFeasibleDs":"allFeasibleDs","allFeasibleDsWithUserPreference":"allFeasibleDsWithUserPreference","userSelectedDs":"userSelectedDs"}};
    _self.ClusterDasConfigInfoServiceState = {"type":"ClusterDasConfigInfoServiceState","enum":{"disabled":"disabled","enabled":"enabled"}};
    _self.ClusterDasConfigInfoVmMonitoringState = {"type":"ClusterDasConfigInfoVmMonitoringState","enum":{"vmAndAppMonitoring":"vmAndAppMonitoring","vmMonitoringDisabled":"vmMonitoringDisabled","vmMonitoringOnly":"vmMonitoringOnly"}};
    _self.ClusterDasFdmAvailabilityState = {"type":"ClusterDasFdmAvailabilityState","enum":{"connectedToMaster":"connectedToMaster","election":"election","fdmUnreachable":"fdmUnreachable","hostDown":"hostDown","initializationError":"initializationError","master":"master","networkIsolated":"networkIsolated","networkPartitionedFromMaster":"networkPartitionedFromMaster","uninitializationError":"uninitializationError","uninitialized":"uninitialized"}};
    _self.DasVmPriority = {"type":"DasVmPriority","enum":{"disabled":"disabled","high":"high","low":"low","medium":"medium"}};
    _self.ClusterDasVmSettingsIsolationResponse = {"type":"ClusterDasVmSettingsIsolationResponse","enum":{"clusterIsolationResponse":"clusterIsolationResponse","none":"none","powerOff":"powerOff","shutdown":"shutdown"}};
    _self.ClusterDasVmSettingsRestartPriority = {"type":"ClusterDasVmSettingsRestartPriority","enum":{"clusterRestartPriority":"clusterRestartPriority","disabled":"disabled","high":"high","low":"low","medium":"medium"}};
    _self.DpmBehavior = {"type":"DpmBehavior","enum":{"automated":"automated","manual":"manual"}};
    _self.DrsBehavior = {"type":"DrsBehavior","enum":{"fullyAutomated":"fullyAutomated","manual":"manual","partiallyAutomated":"partiallyAutomated"}};
    _self.HostPowerOperationType = {"type":"HostPowerOperationType","enum":{"powerOff":"powerOff","powerOn":"powerOn"}};
    _self.ClusterPowerOnVmOption = {"type":"ClusterPowerOnVmOption","enum":{"OverrideAutomationLevel":"OverrideAutomationLevel","ReserveResources":"ReserveResources"}};
    _self.ClusterProfileServiceType = {"type":"ClusterProfileServiceType","enum":{"DPM":"DPM","DRS":"DRS","FT":"FT","HA":"HA"}};
    _self.ComplianceResultStatus = {"type":"ComplianceResultStatus","enum":{"compliant":"compliant","nonCompliant":"nonCompliant","unknown":"unknown"}};
    _self.ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState = {"type":"ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState","enum":{"licensed":"licensed","unknown":"unknown","unlicensed":"unlicensed"}};
    _self.ConfigSpecOperation = {"type":"ConfigSpecOperation","enum":{"add":"add","edit":"edit","remove":"remove"}};
    _self.CustomizationNetBIOSMode = {"type":"CustomizationNetBIOSMode","enum":{"disableNetBIOS":"disableNetBIOS","enableNetBIOS":"enableNetBIOS","enableNetBIOSViaDhcp":"enableNetBIOSViaDhcp"}};
    _self.CustomizationLicenseDataMode = {"type":"CustomizationLicenseDataMode","enum":{"perSeat":"perSeat","perServer":"perServer"}};
    _self.CustomizationSysprepRebootOption = {"type":"CustomizationSysprepRebootOption","enum":{"noreboot":"noreboot","reboot":"reboot","shutdown":"shutdown"}};
    _self.DasConfigFaultDasConfigFaultReason = {"type":"DasConfigFaultDasConfigFaultReason","enum":{"HostMisconfiguration":"HostMisconfiguration","HostNetworkMisconfiguration":"HostNetworkMisconfiguration","InsufficientPrivileges":"InsufficientPrivileges","NoDatastoresConfigured":"NoDatastoresConfigured","NoPrimaryAgentAvailable":"NoPrimaryAgentAvailable","Other":"Other","VSanNotSupportedOnHost":"VSanNotSupportedOnHost"}};
    _self.DatastoreAccessible = {"type":"DatastoreAccessible","enum":{"False":"False","True":"True"}};
    _self.DatastoreNamespaceManager = {"type":"DatastoreNamespaceManager","methods":{"CreateDirectory":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore","displayName":"xsd:string","policy":"xsd:string"},"returns":"xsd:string"},"DeleteDirectory":{"params":{"_this":"ManagedObjectReference","datacenterP":"ManagedObjectReferencetoaDatacenter","datastorePath":"xsd:string"},"returns":null}}};
    _self.DatastoreSummaryMaintenanceModeState = {"type":"DatastoreSummaryMaintenanceModeState","enum":{"enteringMaintenance":"enteringMaintenance","inMaintenance":"inMaintenance","normal":"normal"}};
    _self.DayOfWeek = {"type":"DayOfWeek","enum":{"friday":"friday","monday":"monday","saturday":"saturday","sunday":"sunday","thursday":"thursday","tuesday":"tuesday","wednesday":"wednesday"}};
    _self.DeviceNotSupportedReason = {"type":"DeviceNotSupportedReason","enum":{"guest":"guest","host":"host"}};
    _self.DiagnosticManager = {"type":"DiagnosticManager","methods":{"BrowseDiagnosticLog":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","key":"xsd:string","start":"xsd:int","lines":"xsd:int"},"returns":"DiagnosticManagerLogHeader"},"GenerateLogBundles_Task":{"params":{"_this":"ManagedObjectReference","includeDefault":"xsd:boolean","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"QueryDescriptions":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"DiagnosticManagerLogDescriptor"}}};
    _self.DiagnosticManagerLogCreator = {"type":"DiagnosticManagerLogCreator","enum":{"hostd":"hostd","install":"install","recordLog":"recordLog","serverd":"serverd","vpxa":"vpxa","vpxClient":"vpxClient","vpxd":"vpxd"}};
    _self.DiagnosticManagerLogFormat = {"type":"DiagnosticManagerLogFormat","enum":{"plain":"plain"}};
    _self.DiagnosticPartitionStorageType = {"type":"DiagnosticPartitionStorageType","enum":{"directAttached":"directAttached","networkAttached":"networkAttached"}};
    _self.DiagnosticPartitionType = {"type":"DiagnosticPartitionType","enum":{"multiHost":"multiHost","singleHost":"singleHost"}};
    _self.DisallowedChangeByServiceDisallowedChange = {"type":"DisallowedChangeByServiceDisallowedChange","enum":{"hotExtendDisk":"hotExtendDisk"}};
    _self.DistributedVirtualPortgroupMetaTagName = {"type":"DistributedVirtualPortgroupMetaTagName","enum":{"dvsName":"dvsName","portgroupName":"portgroupName","portIndex":"portIndex"}};
    _self.DistributedVirtualPortgroupPortgroupType = {"type":"DistributedVirtualPortgroupPortgroupType","enum":{"earlyBinding":"earlyBinding","ephemeral":"ephemeral","lateBinding":"lateBinding"}};
    _self.DistributedVirtualSwitchHostInfrastructureTrafficClass = {"type":"DistributedVirtualSwitchHostInfrastructureTrafficClass","enum":{"faultTolerance":"faultTolerance","hbr":"hbr","iSCSI":"iSCSI","management":"management","nfs":"nfs","virtualMachine":"virtualMachine","vmotion":"vmotion","vsan":"vsan"}};
    _self.DistributedVirtualSwitchHostMemberHostComponentState = {"type":"DistributedVirtualSwitchHostMemberHostComponentState","enum":{"disconnected":"disconnected","down":"down","outOfSync":"outOfSync","pending":"pending","up":"up","warning":"warning"}};
    _self.DistributedVirtualSwitchManager = {"type":"DistributedVirtualSwitchManager","methods":{"DVSManagerExportEntity_Task":{"params":{"_this":"ManagedObjectReference","selectionSet":"SelectionSet"},"returns":"ManagedObjectReference"},"DVSManagerImportEntity_Task":{"params":{"_this":"ManagedObjectReference","entityBackup":"EntityBackupConfig","importType":"xsd:string"},"returns":"ManagedObjectReference"},"DVSManagerLookupDvPortGroup":{"params":{"_this":"ManagedObjectReference","switchUuid":"xsd:string","portgroupKey":"xsd:string"},"returns":"ManagedObjectReference"},"QueryAvailableDvsSpec":{"params":{"_this":"ManagedObjectReference"},"returns":"DistributedVirtualSwitchProductSpec"},"QueryCompatibleHostForExistingDvs":{"params":{"_this":"ManagedObjectReference","container":"ManagedObjectReferencetoaManagedEntity","recursive":"xsd:boolean","dvs":"ManagedObjectReferencetoaDistributedVirtualSwitch"},"returns":"ManagedObjectReference"},"QueryCompatibleHostForNewDvs":{"params":{"_this":"ManagedObjectReference","container":"ManagedObjectReferencetoaManagedEntity","recursive":"xsd:boolean","switchProductSpec":"DistributedVirtualSwitchProductSpec"},"returns":"ManagedObjectReference"},"QueryDvsByUuid":{"params":{"_this":"ManagedObjectReference","uuid":"xsd:string"},"returns":"ManagedObjectReference"},"QueryDvsCheckCompatibility":{"params":{"_this":"ManagedObjectReference","hostContainer":"DistributedVirtualSwitchManagerHostContainer","dvsProductSpec":"DistributedVirtualSwitchManagerDvsProductSpec","hostFilterSpec":"DistributedVirtualSwitchManagerHostDvsFilterSpec"},"returns":"DistributedVirtualSwitchManagerCompatibilityResult"},"QueryDvsCompatibleHostSpec":{"params":{"_this":"ManagedObjectReference","switchProductSpec":"DistributedVirtualSwitchProductSpec"},"returns":"DistributedVirtualSwitchHostProductSpec"},"QueryDvsConfigTarget":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","dvs":"ManagedObjectReferencetoaDistributedVirtualSwitch"},"returns":"DVSManagerDvsConfigTarget"},"QueryDvsFeatureCapability":{"params":{"_this":"ManagedObjectReference","switchProductSpec":"DistributedVirtualSwitchProductSpec"},"returns":"DVSFeatureCapability"},"RectifyDvsOnHost_Task":{"params":{"_this":"ManagedObjectReference","hosts":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"}}};
    _self.DistributedVirtualSwitchNicTeamingPolicyMode = {"type":"DistributedVirtualSwitchNicTeamingPolicyMode","enum":{"failover_explicit":"failover_explicit","loadbalance_ip":"loadbalance_ip","loadbalance_loadbased":"loadbalance_loadbased","loadbalance_srcid":"loadbalance_srcid","loadbalance_srcmac":"loadbalance_srcmac"}};
    _self.DistributedVirtualSwitchPortConnecteeConnecteeType = {"type":"DistributedVirtualSwitchPortConnecteeConnecteeType","enum":{"hostConsoleVnic":"hostConsoleVnic","hostVmkVnic":"hostVmkVnic","pnic":"pnic","vmVnic":"vmVnic"}};
    _self.DistributedVirtualSwitchProductSpecOperationType = {"type":"DistributedVirtualSwitchProductSpecOperationType","enum":{"notifyAvailableUpgrade":"notifyAvailableUpgrade","preInstall":"preInstall","proceedWithUpgrade":"proceedWithUpgrade","updateBundleInfo":"updateBundleInfo","upgrade":"upgrade"}};
    _self.DrsInjectorWorkloadCorrelationState = {"type":"DrsInjectorWorkloadCorrelationState","enum":{"Correlated":"Correlated","Uncorrelated":"Uncorrelated"}};
    _self.DrsRecommendationReasonCode = {"type":"DrsRecommendationReasonCode","enum":{"antiAffin":"antiAffin","fairnessCpuAvg":"fairnessCpuAvg","fairnessMemAvg":"fairnessMemAvg","hostMaint":"hostMaint","jointAffin":"jointAffin"}};
    _self.DVPortStatusVmDirectPathGen2InactiveReasonNetwork = {"type":"DVPortStatusVmDirectPathGen2InactiveReasonNetwork","enum":{"portNptDisabledForPort":"portNptDisabledForPort","portNptIncompatibleDvs":"portNptIncompatibleDvs","portNptNoCompatibleNics":"portNptNoCompatibleNics","portNptNoVirtualFunctionsAvailable":"portNptNoVirtualFunctionsAvailable"}};
    _self.DVPortStatusVmDirectPathGen2InactiveReasonOther = {"type":"DVPortStatusVmDirectPathGen2InactiveReasonOther","enum":{"portNptIncompatibleConnectee":"portNptIncompatibleConnectee","portNptIncompatibleHost":"portNptIncompatibleHost"}};
    _self.DvsFilterOnFailure = {"type":"DvsFilterOnFailure","enum":{"failClosed":"failClosed","failOpen":"failOpen"}};
    _self.DvsNetworkRuleDirectionType = {"type":"DvsNetworkRuleDirectionType","enum":{"both":"both","incomingPackets":"incomingPackets","outgoingPackets":"outgoingPackets"}};
    _self.DynamicArray = {"type":"DynamicArray","properties":{"dynamicType":"xsd:string","val":"xsd:anyType[]"}};
    _self.DynamicProperty = {"type":"DynamicProperty","properties":{"name":"xsd:string","val":"xsd:anyType"}};
    _self.EntityImportType = {"type":"EntityImportType","enum":{"applyToEntitySpecified":"applyToEntitySpecified","createEntityWithNewIdentifier":"createEntityWithNewIdentifier","createEntityWithOriginalIdentifier":"createEntityWithOriginalIdentifier"}};
    _self.EntityType = {"type":"EntityType","enum":{"distributedVirtualPortgroup":"distributedVirtualPortgroup","distributedVirtualSwitch":"distributedVirtualSwitch"}};
    _self.EnvironmentBrowser = {"type":"EnvironmentBrowser","properties":{"datastoreBrowser":_self.ManagedObjectReference},"methods":{"QueryConfigOption":{"params":{"_this":"ManagedObjectReference","key":"xsd:string","host":"ManagedObjectReferencetoaHostSystem"},"returns":"VirtualMachineConfigOption"},"QueryConfigOptionDescriptor":{"params":{"_this":"ManagedObjectReference"},"returns":"VirtualMachineConfigOptionDescriptor"},"QueryConfigTarget":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ConfigTarget"},"QueryTargetCapabilities":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"HostCapability"}}};
    _self.EventAlarmExpressionComparisonOperator = {"type":"EventAlarmExpressionComparisonOperator","enum":{"doesNotEndWith":"doesNotEndWith","doesNotStartWith":"doesNotStartWith","endsWith":"endsWith","equals":"equals","notEqualTo":"notEqualTo","startsWith":"startsWith"}};
    _self.EventCategory = {"type":"EventCategory","enum":{"error":"error","info":"info","user":"user","warning":"warning"}};
    _self.EventEventSeverity = {"type":"EventEventSeverity","enum":{"error":"error","info":"info","user":"user","warning":"warning"}};
    _self.EventFilterSpecRecursionOption = {"type":"EventFilterSpecRecursionOption","enum":{"all":"all","children":"children","self":"self"}};
    _self.FibreChannelPortType = {"type":"FibreChannelPortType","enum":{"fabric":"fabric","loop":"loop","pointToPoint":"pointToPoint","unknown":"unknown"}};
    _self.FileManager = {"type":"FileManager","methods":{"ChangeOwner":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter","owner":"xsd:string"},"returns":null},"CopyDatastoreFile_Task":{"params":{"_this":"ManagedObjectReference","sourceName":"xsd:string","sourceDatacenterP":"ManagedObjectReferencetoaDatacenter","destinationName":"xsd:string","destinationDatacenterP":"ManagedObjectReferencetoaDatacenter","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"DeleteDatastoreFile_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"MakeDirectory":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter","createParentDirectories":"xsd:boolean"},"returns":null},"MoveDatastoreFile_Task":{"params":{"_this":"ManagedObjectReference","sourceName":"xsd:string","sourceDatacenterP":"ManagedObjectReferencetoaDatacenter","destinationName":"xsd:string","destinationDatacenterP":"ManagedObjectReferencetoaDatacenter","force":"xsd:boolean"},"returns":"ManagedObjectReference"}}};
    _self.FileSystemMountInfoVStorageSupportStatus = {"type":"FileSystemMountInfoVStorageSupportStatus","enum":{"vStorageSupported":"vStorageSupported","vStorageUnknown":"vStorageUnknown","vStorageUnsupported":"vStorageUnsupported"}};
    _self.FtIssuesOnHostHostSelectionType = {"type":"FtIssuesOnHostHostSelectionType","enum":{"drs":"drs","user":"user","vc":"vc"}};
    _self.GuestAuthManager = {"type":"GuestAuthManager","methods":{"AcquireCredentialsInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","requestedAuth":"GuestAuthentication","sessionID":"xsd:long"},"returns":"GuestAuthentication"},"ReleaseCredentialsInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication"},"returns":null},"ValidateCredentialsInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication"},"returns":null}}};
    _self.GuestFileManager = {"type":"GuestFileManager","methods":{"ChangeFileAttributesInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","guestFilePath":"xsd:string","fileAttributes":"GuestFileAttributes"},"returns":null},"CreateTemporaryDirectoryInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","prefix":"xsd:string","suffix":"xsd:string","directoryPath":"xsd:string"},"returns":"xsd:string"},"CreateTemporaryFileInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","prefix":"xsd:string","suffix":"xsd:string","directoryPath":"xsd:string"},"returns":"xsd:string"},"DeleteDirectoryInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","directoryPath":"xsd:string","recursive":"xsd:boolean"},"returns":null},"DeleteFileInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","filePath":"xsd:string"},"returns":null},"InitiateFileTransferFromGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","guestFilePath":"xsd:string"},"returns":"FileTransferInformation"},"InitiateFileTransferToGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","guestFilePath":"xsd:string","fileAttributes":"GuestFileAttributes","fileSize":"xsd:long","overwrite":"xsd:boolean"},"returns":"xsd:string"},"ListFilesInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","filePath":"xsd:string","index":"xsd:int","maxResults":"xsd:int","matchPattern":"xsd:string"},"returns":"GuestListFileInfo"},"MakeDirectoryInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","directoryPath":"xsd:string","createParentDirectories":"xsd:boolean"},"returns":null},"MoveDirectoryInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","srcDirectoryPath":"xsd:string","dstDirectoryPath":"xsd:string"},"returns":null},"MoveFileInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","srcFilePath":"xsd:string","dstFilePath":"xsd:string","overwrite":"xsd:boolean"},"returns":null}}};
    _self.GuestFileType = {"type":"GuestFileType","enum":{"directory":"directory","file":"file","symlink":"symlink"}};
    _self.VirtualMachineToolsStatus = {"type":"VirtualMachineToolsStatus","enum":{"toolsNotInstalled":"toolsNotInstalled","toolsNotRunning":"toolsNotRunning","toolsOk":"toolsOk","toolsOld":"toolsOld"}};
    _self.GuestInfoAppStateType = {"type":"GuestInfoAppStateType","enum":{"appStateNeedReset":"appStateNeedReset","appStateOk":"appStateOk","none":"none"}};
    _self.GuestOperationsManager = {"type":"GuestOperationsManager","properties":{"authManager":_self.ManagedObjectReference,"fileManager":_self.ManagedObjectReference,"processManager":_self.ManagedObjectReference},"methods":{}};
    _self.GuestOsDescriptorFirmwareType = {"type":"GuestOsDescriptorFirmwareType","enum":{"bios":"bios","efi":"efi"}};
    _self.GuestOsDescriptorSupportLevel = {"type":"GuestOsDescriptorSupportLevel","enum":{"deprecated":"deprecated","experimental":"experimental","legacy":"legacy","supported":"supported","techPreview":"techPreview","terminated":"terminated","unsupported":"unsupported"}};
    _self.GuestProcessManager = {"type":"GuestProcessManager","methods":{"ListProcessesInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","pids":"xsd:long"},"returns":"GuestProcessInfo"},"ReadEnvironmentVariableInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","names":"xsd:string"},"returns":"xsd:string"},"StartProgramInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","spec":"GuestProgramSpec"},"returns":"xsd:long"},"TerminateProcessInGuest":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","auth":"GuestAuthentication","pid":"xsd:long"},"returns":null}}};
    _self.HistoryCollector = {"type":"HistoryCollector","properties":{"filter":"xsd:anyType"},"methods":{"DestroyCollector":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ResetCollector":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RewindCollector":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SetCollectorPageSize":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":null}}};
    _self.HostActiveDirectoryInfoDomainMembershipStatus = {"type":"HostActiveDirectoryInfoDomainMembershipStatus","enum":{"clientTrustBroken":"clientTrustBroken","inconsistentTrust":"inconsistentTrust","noServers":"noServers","ok":"ok","otherProblem":"otherProblem","serverTrustBroken":"serverTrustBroken","unknown":"unknown"}};
    _self.HostBootDeviceSystem = {"type":"HostBootDeviceSystem","methods":{"QueryBootDevices":{"params":{"_this":"ManagedObjectReference"},"returns":"HostBootDeviceInfo"},"UpdateBootDevice":{"params":{"_this":"ManagedObjectReference","key":"xsd:string"},"returns":null}}};
    _self.HostCapabilityFtUnsupportedReason = {"type":"HostCapabilityFtUnsupportedReason","enum":{"ftNotLicensed":"ftNotLicensed","haAgentIssue":"haAgentIssue","missingFTLoggingNic":"missingFTLoggingNic","missingVMotionNic":"missingVMotionNic","vMotionNotLicensed":"vMotionNotLicensed"}};
    _self.HostCapabilityVmDirectPathGen2UnsupportedReason = {"type":"HostCapabilityVmDirectPathGen2UnsupportedReason","enum":{"hostNptDisabled":"hostNptDisabled","hostNptIncompatibleHardware":"hostNptIncompatibleHardware","hostNptIncompatibleProduct":"hostNptIncompatibleProduct"}};
    _self.HostConfigChangeMode = {"type":"HostConfigChangeMode","enum":{"modify":"modify","replace":"replace"}};
    _self.HostConfigChangeOperation = {"type":"HostConfigChangeOperation","enum":{"add":"add","edit":"edit","remove":"remove"}};
    _self.HostCpuPackageVendor = {"type":"HostCpuPackageVendor","enum":{"amd":"amd","intel":"intel","unknown":"unknown"}};
    _self.HostCpuPowerManagementInfoPolicyType = {"type":"HostCpuPowerManagementInfoPolicyType","enum":{"dynamicPolicy":"dynamicPolicy","off":"off","staticPolicy":"staticPolicy"}};
    _self.HostDasErrorEventHostDasErrorReason = {"type":"HostDasErrorEventHostDasErrorReason","enum":{"agentFailed":"agentFailed","agentShutdown":"agentShutdown","communicationInitFailed":"communicationInitFailed","configFailed":"configFailed","healthCheckScriptFailed":"healthCheckScriptFailed","isolationAddressUnpingable":"isolationAddressUnpingable","other":"other","timeout":"timeout"}};
    _self.HostDigestInfoDigestMethodType = {"type":"HostDigestInfoDigestMethodType","enum":{"MD5":"MD5","SHA1":"SHA1"}};
    _self.HostDisconnectedEventReasonCode = {"type":"HostDisconnectedEventReasonCode","enum":{"agentOutOfDate":"agentOutOfDate","agentUpgrade":"agentUpgrade","insufficientLicenses":"insufficientLicenses","licenseExpired":"licenseExpired","passwordDecryptFailure":"passwordDecryptFailure","sslThumbprintVerifyFailed":"sslThumbprintVerifyFailed","unknown":"unknown","userRequest":"userRequest","vcVRAMCapacityExceeded":"vcVRAMCapacityExceeded"}};
    _self.HostDiskPartitionInfoPartitionFormat = {"type":"HostDiskPartitionInfoPartitionFormat","enum":{"gpt":"gpt","mbr":"mbr","unknown":"unknown"}};
    _self.HostDiskPartitionInfoType = {"type":"HostDiskPartitionInfoType","enum":{"extended":"extended","linuxNative":"linuxNative","linuxSwap":"linuxSwap","none":"none","ntfs":"ntfs","vffs":"vffs","vmfs":"vmfs","vmkDiagnostic":"vmkDiagnostic"}};
    _self.HostFeatureVersionKey = {"type":"HostFeatureVersionKey","enum":{"faultTolerance":"faultTolerance"}};
    _self.HostFirewallRuleDirection = {"type":"HostFirewallRuleDirection","enum":{"inbound":"inbound","outbound":"outbound"}};
    _self.HostFirewallRulePortType = {"type":"HostFirewallRulePortType","enum":{"dst":"dst","src":"src"}};
    _self.HostFirewallRuleProtocol = {"type":"HostFirewallRuleProtocol","enum":{"tcp":"tcp","udp":"udp"}};
    _self.HostFirmwareSystem = {"type":"HostFirmwareSystem","methods":{"BackupFirmwareConfiguration":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"QueryFirmwareConfigUploadURL":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"ResetFirmwareToFactoryDefaults":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RestoreFirmwareConfiguration":{"params":{"_this":"ManagedObjectReference","force":"xsd:boolean"},"returns":null}}};
    _self.HostGraphicsInfoGraphicsType = {"type":"HostGraphicsInfoGraphicsType","enum":{"basic":"basic","direct":"direct","shared":"shared"}};
    _self.HostHardwareElementStatus = {"type":"HostHardwareElementStatus","enum":{"Green":"Green","Red":"Red","Unknown":"Unknown","Yellow":"Yellow"}};
    _self.HostImageAcceptanceLevel = {"type":"HostImageAcceptanceLevel","enum":{"community":"community","partner":"partner","vmware_accepted":"vmware_accepted","vmware_certified":"vmware_certified"}};
    _self.HostImageConfigManager = {"type":"HostImageConfigManager","methods":{"HostImageConfigGetAcceptance":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"HostImageConfigGetProfile":{"params":{"_this":"ManagedObjectReference"},"returns":"HostImageProfileSummary"},"UpdateHostImageAcceptanceLevel":{"params":{"_this":"ManagedObjectReference","newAcceptanceLevel":"xsd:string"},"returns":null}}};
    _self.HostIncompatibleForFaultToleranceReason = {"type":"HostIncompatibleForFaultToleranceReason","enum":{"processor":"processor","product":"product"}};
    _self.HostIncompatibleForRecordReplayReason = {"type":"HostIncompatibleForRecordReplayReason","enum":{"processor":"processor","product":"product"}};
    _self.HostInternetScsiHbaNetworkBindingSupportType = {"type":"HostInternetScsiHbaNetworkBindingSupportType","enum":{"notsupported":"notsupported","optional":"optional","required":"required"}};
    _self.HostInternetScsiHbaChapAuthenticationType = {"type":"HostInternetScsiHbaChapAuthenticationType","enum":{"chapDiscouraged":"chapDiscouraged","chapPreferred":"chapPreferred","chapProhibited":"chapProhibited","chapRequired":"chapRequired"}};
    _self.HostInternetScsiHbaDigestType = {"type":"HostInternetScsiHbaDigestType","enum":{"digestDiscouraged":"digestDiscouraged","digestPreferred":"digestPreferred","digestProhibited":"digestProhibited","digestRequired":"digestRequired"}};
    _self.HostInternetScsiHbaStaticTargetTargetDiscoveryMethod = {"type":"HostInternetScsiHbaStaticTargetTargetDiscoveryMethod","enum":{"isnsMethod":"isnsMethod","sendTargetMethod":"sendTargetMethod","slpMethod":"slpMethod","staticMethod":"staticMethod","unknownMethod":"unknownMethod"}};
    _self.HostIpConfigIpV6AddressConfigType = {"type":"HostIpConfigIpV6AddressConfigType","enum":{"dhcp":"dhcp","linklayer":"linklayer","manual":"manual","other":"other","random":"random"}};
    _self.HostIpConfigIpV6AddressStatus = {"type":"HostIpConfigIpV6AddressStatus","enum":{"deprecated":"deprecated","duplicate":"duplicate","inaccessible":"inaccessible","invalid":"invalid","preferred":"preferred","tentative":"tentative","unknown":"unknown"}};
    _self.HostKernelModuleSystem = {"type":"HostKernelModuleSystem","methods":{"QueryConfiguredModuleOptionString":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"xsd:string"},"QueryModules":{"params":{"_this":"ManagedObjectReference"},"returns":"KernelModuleInfo"},"UpdateModuleOptionString":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","options":"xsd:string"},"returns":null}}};
    _self.HostLicensableResourceKey = {"type":"HostLicensableResourceKey","enum":{"memoryForVms":"memoryForVms","memorySize":"memorySize","numCpuCores":"numCpuCores","numCpuPackages":"numCpuPackages","numVmsStarted":"numVmsStarted","numVmsStarting":"numVmsStarting"}};
    _self.HostLocalAccountManager = {"type":"HostLocalAccountManager","methods":{"AssignUserToGroup":{"params":{"_this":"ManagedObjectReference","user":"xsd:string","group":"xsd:string"},"returns":null},"CreateGroup":{"params":{"_this":"ManagedObjectReference","group":"HostAccountSpec"},"returns":null},"CreateUser":{"params":{"_this":"ManagedObjectReference","user":"HostAccountSpec"},"returns":null},"RemoveGroup":{"params":{"_this":"ManagedObjectReference","groupName":"xsd:string"},"returns":null},"RemoveUser":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string"},"returns":null},"UnassignUserFromGroup":{"params":{"_this":"ManagedObjectReference","user":"xsd:string","group":"xsd:string"},"returns":null},"UpdateUser":{"params":{"_this":"ManagedObjectReference","user":"HostAccountSpec"},"returns":null}}};
    _self.HostLowLevelProvisioningManagerReloadTarget = {"type":"HostLowLevelProvisioningManagerReloadTarget","enum":{"currentConfig":"currentConfig","snapshotConfig":"snapshotConfig"}};
    _self.HostMountInfoInaccessibleReason = {"type":"HostMountInfoInaccessibleReason","enum":{"AllPathsDown_Start":"AllPathsDown_Start","AllPathsDown_Timeout":"AllPathsDown_Timeout","PermanentDeviceLoss":"PermanentDeviceLoss"}};
    _self.HostMountMode = {"type":"HostMountMode","enum":{"readOnly":"readOnly","readWrite":"readWrite"}};
    _self.HostNetStackInstanceCongestionControlAlgorithmType = {"type":"HostNetStackInstanceCongestionControlAlgorithmType","enum":{"cubic":"cubic","newreno":"newreno"}};
    _self.HostNetStackInstanceSystemStackKey = {"type":"HostNetStackInstanceSystemStackKey","enum":{"defaultTcpipStack":"defaultTcpipStack"}};
    _self.HostNumericSensorHealthState = {"type":"HostNumericSensorHealthState","enum":{"green":"green","red":"red","unknown":"unknown","yellow":"yellow"}};
    _self.HostNumericSensorType = {"type":"HostNumericSensorType","enum":{"fan":"fan","other":"other","power":"power","temperature":"temperature","voltage":"voltage"}};
    _self.HostPatchManager = {"type":"HostPatchManager","methods":{"CheckHostPatch_Task":{"params":{"_this":"ManagedObjectReference","metaUrls":"xsd:string","bundleUrls":"xsd:string","spec":"HostPatchManagerPatchManagerOperationSpec"},"returns":"ManagedObjectReference"},"InstallHostPatch_Task":{"params":{"_this":"ManagedObjectReference","repository":"HostPatchManagerLocator","updateID":"xsd:string","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"InstallHostPatchV2_Task":{"params":{"_this":"ManagedObjectReference","metaUrls":"xsd:string","bundleUrls":"xsd:string","vibUrls":"xsd:string","spec":"HostPatchManagerPatchManagerOperationSpec"},"returns":"ManagedObjectReference"},"QueryHostPatch_Task":{"params":{"_this":"ManagedObjectReference","spec":"HostPatchManagerPatchManagerOperationSpec"},"returns":"ManagedObjectReference"},"ScanHostPatch_Task":{"params":{"_this":"ManagedObjectReference","repository":"HostPatchManagerLocator","updateID":"xsd:string"},"returns":"ManagedObjectReference"},"ScanHostPatchV2_Task":{"params":{"_this":"ManagedObjectReference","metaUrls":"xsd:string","bundleUrls":"xsd:string","spec":"HostPatchManagerPatchManagerOperationSpec"},"returns":"ManagedObjectReference"},"StageHostPatch_Task":{"params":{"_this":"ManagedObjectReference","metaUrls":"xsd:string","bundleUrls":"xsd:string","vibUrls":"xsd:string","spec":"HostPatchManagerPatchManagerOperationSpec"},"returns":"ManagedObjectReference"},"UninstallHostPatch_Task":{"params":{"_this":"ManagedObjectReference","bulletinIds":"xsd:string","spec":"HostPatchManagerPatchManagerOperationSpec"},"returns":"ManagedObjectReference"}}};
    _self.HostPatchManagerInstallState = {"type":"HostPatchManagerInstallState","enum":{"hostRestarted":"hostRestarted","imageActive":"imageActive"}};
    _self.HostPatchManagerIntegrityStatus = {"type":"HostPatchManagerIntegrityStatus","enum":{"digestMismatch":"digestMismatch","keyExpired":"keyExpired","keyNotFound":"keyNotFound","keyRevoked":"keyRevoked","notEnoughSignatures":"notEnoughSignatures","validated":"validated","validationError":"validationError"}};
    _self.HostPatchManagerReason = {"type":"HostPatchManagerReason","enum":{"conflictLib":"conflictLib","conflictPatch":"conflictPatch","hasDependentPatch":"hasDependentPatch","missingLib":"missingLib","missingPatch":"missingPatch","obsoleted":"obsoleted"}};
    _self.HostProfileManagerAnswerFileStatus = {"type":"HostProfileManagerAnswerFileStatus","enum":{"invalid":"invalid","unknown":"unknown","valid":"valid"}};
    _self.HostReplayUnsupportedReason = {"type":"HostReplayUnsupportedReason","enum":{"cpuidLimitSet":"cpuidLimitSet","hvDisabled":"hvDisabled","incompatibleCpu":"incompatibleCpu","incompatibleProduct":"incompatibleProduct","oldBIOS":"oldBIOS","unknown":"unknown"}};
    _self.HostSystemConnectionState = {"type":"HostSystemConnectionState","enum":{"connected":"connected","disconnected":"disconnected","notResponding":"notResponding"}};
    _self.HostSystemPowerState = {"type":"HostSystemPowerState","enum":{"poweredOff":"poweredOff","poweredOn":"poweredOn","standBy":"standBy","unknown":"unknown"}};
    _self.HostRuntimeInfoNetStackInstanceRuntimeInfoState = {"type":"HostRuntimeInfoNetStackInstanceRuntimeInfoState","enum":{"activating":"activating","active":"active","deactivating":"deactivating","inactive":"inactive"}};
    _self.HostServicePolicy = {"type":"HostServicePolicy","enum":{"automatic":"automatic","off":"off","on":"on"}};
    _self.HostSnmpAgentCapability = {"type":"HostSnmpAgentCapability","enum":{"COMPLETE":"COMPLETE","CONFIGURATION":"CONFIGURATION","DIAGNOSTICS":"DIAGNOSTICS"}};
    _self.HostStandbyMode = {"type":"HostStandbyMode","enum":{"entering":"entering","exiting":"exiting","in":"in","none":"none"}};
    _self.HostSystemIdentificationInfoIdentifier = {"type":"HostSystemIdentificationInfoIdentifier","enum":{"AssetTag":"AssetTag","OemSpecificString":"OemSpecificString","ServiceTag":"ServiceTag"}};
    _self.HostUnresolvedVmfsExtentUnresolvedReason = {"type":"HostUnresolvedVmfsExtentUnresolvedReason","enum":{"diskIdMismatch":"diskIdMismatch","uuidConflict":"uuidConflict"}};
    _self.HostUnresolvedVmfsResolutionSpecVmfsUuidResolution = {"type":"HostUnresolvedVmfsResolutionSpecVmfsUuidResolution","enum":{"forceMount":"forceMount","resignature":"resignature"}};
    _self.HostVirtualNicManagerNicType = {"type":"HostVirtualNicManagerNicType","enum":{"faultToleranceLogging":"faultToleranceLogging","management":"management","vmotion":"vmotion","vsan":"vsan","vSphereReplication":"vSphereReplication"}};
    _self.HostVmciAccessManagerMode = {"type":"HostVmciAccessManagerMode","enum":{"grant":"grant","replace":"replace","revoke":"revoke"}};
    _self.HostVsanInternalSystem = {"type":"HostVsanInternalSystem","methods":{"QueryCmmds":{"params":{"_this":"ManagedObjectReference","queries":"HostVsanInternalSystemCmmdsQuery"},"returns":"xsd:string"},"QueryObjectsOnPhysicalVsanDisk":{"params":{"_this":"ManagedObjectReference","disks":"xsd:string"},"returns":"xsd:string"},"QueryPhysicalVsanDisks":{"params":{"_this":"ManagedObjectReference","props":"xsd:string"},"returns":"xsd:string"},"QueryVsanObjects":{"params":{"_this":"ManagedObjectReference","uuids":"xsd:string"},"returns":"xsd:string"}}};
    _self.HttpNfcLeaseState = {"type":"HttpNfcLeaseState","enum":{"done":"done","error":"error","initializing":"initializing","ready":"ready"}};
    _self.InternetScsiSnsDiscoveryMethod = {"type":"InternetScsiSnsDiscoveryMethod","enum":{"isnsDhcp":"isnsDhcp","isnsSlp":"isnsSlp","isnsStatic":"isnsStatic"}};
    _self.InvalidDasConfigArgumentEntryForInvalidArgument = {"type":"InvalidDasConfigArgumentEntryForInvalidArgument","enum":{"admissionControl":"admissionControl","userHeartbeatDs":"userHeartbeatDs","vmConfig":"vmConfig"}};
    _self.VirtualDeviceConfigSpecFileOperation = {"type":"VirtualDeviceConfigSpecFileOperation","enum":{"create":"create","destroy":"destroy","replace":"replace"}};
    _self.VirtualDeviceConfigSpecOperation = {"type":"VirtualDeviceConfigSpecOperation","enum":{"add":"add","edit":"edit","remove":"remove"}};
    _self.VirtualMachinePowerState = {"type":"VirtualMachinePowerState","enum":{"poweredOff":"poweredOff","poweredOn":"poweredOn","suspended":"suspended"}};
    _self.InvalidProfileReferenceHostReason = {"type":"InvalidProfileReferenceHostReason","enum":{"incompatibleVersion":"incompatibleVersion","missingReferenceHost":"missingReferenceHost"}};
    _self.IpPoolManager = {"type":"IpPoolManager","methods":{"AllocateIpv4Address":{"params":{"_this":"ManagedObjectReference","dc":"ManagedObjectReferencetoaDatacenter","poolId":"xsd:int","allocationId":"xsd:string"},"returns":"xsd:string"},"AllocateIpv6Address":{"params":{"_this":"ManagedObjectReference","dc":"ManagedObjectReferencetoaDatacenter","poolId":"xsd:int","allocationId":"xsd:string"},"returns":"xsd:string"},"CreateIpPool":{"params":{"_this":"ManagedObjectReference","dcP":"ManagedObjectReferencetoaDatacenter","pool":"IpPool"},"returns":"xsd:int"},"DestroyIpPool":{"params":{"_this":"ManagedObjectReference","dcP":"ManagedObjectReferencetoaDatacenter","id":"xsd:int","force":"xsd:boolean"},"returns":null},"QueryIPAllocations":{"params":{"_this":"ManagedObjectReference","dcP":"ManagedObjectReferencetoaDatacenter","poolId":"xsd:int","extensionKey":"xsd:string"},"returns":"IpPoolManagerIpAllocation"},"QueryIpPools":{"params":{"_this":"ManagedObjectReference","dcP":"ManagedObjectReferencetoaDatacenter"},"returns":"IpPool"},"ReleaseIpAllocation":{"params":{"_this":"ManagedObjectReference","dcP":"ManagedObjectReferencetoaDatacenter","poolId":"xsd:int","allocationId":"xsd:string"},"returns":null},"UpdateIpPool":{"params":{"_this":"ManagedObjectReference","dcP":"ManagedObjectReferencetoaDatacenter","pool":"IpPool"},"returns":null}}};
    _self.IscsiManager = {"type":"IscsiManager","methods":{"BindVnic":{"params":{"_this":"ManagedObjectReference","iScsiHbaName":"xsd:string","vnicDevice":"xsd:string"},"returns":null},"QueryBoundVnics":{"params":{"_this":"ManagedObjectReference","iScsiHbaName":"xsd:string"},"returns":"IscsiPortInfo"},"QueryCandidateNics":{"params":{"_this":"ManagedObjectReference","iScsiHbaName":"xsd:string"},"returns":"IscsiPortInfo"},"QueryMigrationDependencies":{"params":{"_this":"ManagedObjectReference","pnicDevice":"xsd:string"},"returns":"IscsiMigrationDependency"},"QueryPnicStatus":{"params":{"_this":"ManagedObjectReference","pnicDevice":"xsd:string"},"returns":"IscsiStatus"},"QueryVnicStatus":{"params":{"_this":"ManagedObjectReference","vnicDevice":"xsd:string"},"returns":"IscsiStatus"},"UnbindVnic":{"params":{"_this":"ManagedObjectReference","iScsiHbaName":"xsd:string","vnicDevice":"xsd:string","force":"xsd:boolean"},"returns":null}}};
    _self.IscsiPortInfoPathStatus = {"type":"IscsiPortInfoPathStatus","enum":{"active":"active","lastActive":"lastActive","notUsed":"notUsed","standBy":"standBy"}};
    _self.LatencySensitivitySensitivityLevel = {"type":"LatencySensitivitySensitivityLevel","enum":{"custom":"custom","high":"high","low":"low","medium":"medium","normal":"normal"}};
    _self.LicenseAssignmentFailedReason = {"type":"LicenseAssignmentFailedReason","enum":{"downgradeDisallowed":"downgradeDisallowed","hostsUnmanageableByVirtualCenterWithoutLicenseServer":"hostsUnmanageableByVirtualCenterWithoutLicenseServer","inventoryNotManageableByVirtualCenter":"inventoryNotManageableByVirtualCenter","keyEntityMismatch":"keyEntityMismatch"}};
    _self.LicenseAssignmentManager = {"type":"LicenseAssignmentManager","methods":{"QueryAssignedLicenses":{"params":{"_this":"ManagedObjectReference","entityId":"xsd:string"},"returns":"LicenseAssignmentManagerLicenseAssignment"},"RemoveAssignedLicense":{"params":{"_this":"ManagedObjectReference","entityId":"xsd:string"},"returns":null},"UpdateAssignedLicense":{"params":{"_this":"ManagedObjectReference","entity":"xsd:string","licenseKey":"xsd:string","entityDisplayName":"xsd:string"},"returns":"LicenseManagerLicenseInfo"}}};
    _self.LicenseManagerState = {"type":"LicenseManagerState","enum":{"fault":"fault","initializing":"initializing","marginal":"marginal","normal":"normal"}};
    _self.LicenseFeatureInfoState = {"type":"LicenseFeatureInfoState","enum":{"disabled":"disabled","enabled":"enabled","optional":"optional"}};
    _self.LicenseFeatureInfoSourceRestriction = {"type":"LicenseFeatureInfoSourceRestriction","enum":{"file":"file","served":"served","unrestricted":"unrestricted"}};
    _self.LicenseFeatureInfoUnit = {"type":"LicenseFeatureInfoUnit","enum":{"cpuCore":"cpuCore","cpuPackage":"cpuPackage","host":"host","server":"server","vm":"vm"}};
    _self.LicenseManagerLicenseKey = {"type":"LicenseManagerLicenseKey","enum":{"backup":"backup","das":"das","drs":"drs","drsPower":"drsPower","esxExpress":"esxExpress","esxFull":"esxFull","esxHost":"esxHost","esxVmtn":"esxVmtn","gsxHost":"gsxHost","iscsi":"iscsi","nas":"nas","san":"san","serverHost":"serverHost","vc":"vc","vcExpress":"vcExpress","vmotion":"vmotion","vsmp":"vsmp"}};
    _self.LicenseReservationInfoState = {"type":"LicenseReservationInfoState","enum":{"licensed":"licensed","noLicense":"noLicense","notUsed":"notUsed","unlicensedUse":"unlicensedUse"}};
    _self.LinkDiscoveryProtocolConfigOperationType = {"type":"LinkDiscoveryProtocolConfigOperationType","enum":{"advertise":"advertise","both":"both","listen":"listen","none":"none"}};
    _self.LinkDiscoveryProtocolConfigProtocolType = {"type":"LinkDiscoveryProtocolConfigProtocolType","enum":{"cdp":"cdp","lldp":"lldp"}};
    _self.MetricAlarmOperator = {"type":"MetricAlarmOperator","enum":{"isAbove":"isAbove","isBelow":"isBelow"}};
    _self.WeekOfMonth = {"type":"WeekOfMonth","enum":{"first":"first","fourth":"fourth","last":"last","second":"second","third":"third"}};
    _self.MultipathState = {"type":"MultipathState","enum":{"active":"active","dead":"dead","disabled":"disabled","standby":"standby","unknown":"unknown"}};
    _self.NetBIOSConfigInfoMode = {"type":"NetBIOSConfigInfoMode","enum":{"disabled":"disabled","enabled":"enabled","enabledViaDHCP":"enabledViaDHCP","unknown":"unknown"}};
    _self.NetIpConfigInfoIpAddressOrigin = {"type":"NetIpConfigInfoIpAddressOrigin","enum":{"dhcp":"dhcp","linklayer":"linklayer","manual":"manual","other":"other","random":"random"}};
    _self.NetIpConfigInfoIpAddressStatus = {"type":"NetIpConfigInfoIpAddressStatus","enum":{"deprecated":"deprecated","duplicate":"duplicate","inaccessible":"inaccessible","invalid":"invalid","preferred":"preferred","tentative":"tentative","unknown":"unknown"}};
    _self.NetIpStackInfoEntryType = {"type":"NetIpStackInfoEntryType","enum":{"dynamic":"dynamic","invalid":"invalid","manual":"manual","other":"other"}};
    _self.NetIpStackInfoPreference = {"type":"NetIpStackInfoPreference","enum":{"high":"high","low":"low","medium":"medium","reserved":"reserved"}};
    _self.NotSupportedDeviceForFTDeviceType = {"type":"NotSupportedDeviceForFTDeviceType","enum":{"paraVirtualSCSIController":"paraVirtualSCSIController","virtualVmxnet3":"virtualVmxnet3"}};
    _self.NumVirtualCpusIncompatibleReason = {"type":"NumVirtualCpusIncompatibleReason","enum":{"faultTolerance":"faultTolerance","recordReplay":"recordReplay"}};
    _self.ObjectUpdateKind = {"type":"ObjectUpdateKind","enum":{"enter":"enter","leave":"leave","modify":"modify"}};
    _self.OvfConsumerOstNodeType = {"type":"OvfConsumerOstNodeType","enum":{"envelope":"envelope","virtualSystem":"virtualSystem","virtualSystemCollection":"virtualSystemCollection"}};
    _self.OvfCreateImportSpecParamsDiskProvisioningType = {"type":"OvfCreateImportSpecParamsDiskProvisioningType","enum":{"eagerZeroedThick":"eagerZeroedThick","flat":"flat","monolithicFlat":"monolithicFlat","monolithicSparse":"monolithicSparse","seSparse":"seSparse","sparse":"sparse","thick":"thick","thin":"thin","twoGbMaxExtentFlat":"twoGbMaxExtentFlat","twoGbMaxExtentSparse":"twoGbMaxExtentSparse"}};
    _self.PerfSummaryType = {"type":"PerfSummaryType","enum":{"average":"average","latest":"latest","maximum":"maximum","minimum":"minimum","none":"none","summation":"summation"}};
    _self.PerfStatsType = {"type":"PerfStatsType","enum":{"absolute":"absolute","delta":"delta","rate":"rate"}};
    _self.PerfFormat = {"type":"PerfFormat","enum":{"csv":"csv","normal":"normal"}};
    _self.PerformanceManagerUnit = {"type":"PerformanceManagerUnit","enum":{"joule":"joule","kiloBytes":"kiloBytes","kiloBytesPerSecond":"kiloBytesPerSecond","megaBytes":"megaBytes","megaBytesPerSecond":"megaBytesPerSecond","megaHertz":"megaHertz","microsecond":"microsecond","millisecond":"millisecond","number":"number","percent":"percent","second":"second","watt":"watt"}};
    _self.PhysicalNicResourcePoolSchedulerDisallowedReason = {"type":"PhysicalNicResourcePoolSchedulerDisallowedReason","enum":{"hardwareUnsupported":"hardwareUnsupported","userOptOut":"userOptOut"}};
    _self.PhysicalNicVmDirectPathGen2SupportedMode = {"type":"PhysicalNicVmDirectPathGen2SupportedMode","enum":{"upt":"upt"}};
    _self.PortGroupConnecteeType = {"type":"PortGroupConnecteeType","enum":{"host":"host","systemManagement":"systemManagement","unknown":"unknown","virtualMachine":"virtualMachine"}};
    _self.ProfileComplianceManager = {"type":"ProfileComplianceManager","methods":{"CheckCompliance_Task":{"params":{"_this":"ManagedObjectReference","profile":"ManagedObjectReferencetoaProfile","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"ClearComplianceStatus":{"params":{"_this":"ManagedObjectReference","profile":"ManagedObjectReferencetoaProfile","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":null},"QueryComplianceStatus":{"params":{"_this":"ManagedObjectReference","profile":"ManagedObjectReferencetoaProfile","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":"ComplianceResult"},"QueryExpressionMetadata":{"params":{"_this":"ManagedObjectReference","expressionName":"xsd:string","profile":"ManagedObjectReferencetoaProfile"},"returns":"ProfileExpressionMetadata"}}};
    _self.ProfileExecuteResultStatus = {"type":"ProfileExecuteResultStatus","enum":{"error":"error","needInput":"needInput","success":"success"}};
    _self.ProfileManager = {"type":"ProfileManager","properties":{"profile":_self.ManagedObjectReference},"methods":{"CreateProfile":{"params":{"_this":"ManagedObjectReference","createSpec":"ProfileCreateSpec"},"returns":"ManagedObjectReference"},"FindAssociatedProfile":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"QueryPolicyMetadata":{"params":{"_this":"ManagedObjectReference","policyName":"xsd:string","profile":"ManagedObjectReferencetoaProfile"},"returns":"ProfilePolicyMetadata"}}};
    _self.ProfileNumericComparator = {"type":"ProfileNumericComparator","enum":{"equal":"equal","greaterThan":"greaterThan","greaterThanEqual":"greaterThanEqual","lessThan":"lessThan","lessThanEqual":"lessThanEqual","notEqual":"notEqual"}};
    _self.PropertyChangeOp = {"type":"PropertyChangeOp","enum":{"add":"add","assign":"assign","indirectRemove":"indirectRemove","remove":"remove"}};
    _self.PropertyCollector = {"type":"PropertyCollector","properties":{"filter":_self.ManagedObjectReference},"methods":{"CancelRetrievePropertiesEx":{"params":{"_this":"ManagedObjectReference","token":"xsd:string"},"returns":null},"CancelWaitForUpdates":{"params":{"_this":"ManagedObjectReference"},"returns":null},"CheckForUpdates":{"params":{"_this":"ManagedObjectReference","version":"xsd:string"},"returns":"UpdateSet"},"ContinueRetrievePropertiesEx":{"params":{"_this":"ManagedObjectReference","token":"xsd:string"},"returns":"RetrieveResult"},"CreateFilter":{"params":{"_this":"ManagedObjectReference","spec":"PropertyFilterSpec","partialUpdates":"xsd:boolean"},"returns":"ManagedObjectReference"},"CreatePropertyCollector":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"DestroyPropertyCollector":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RetrieveProperties":{"params":{"_this":"ManagedObjectReference","specSet":"PropertyFilterSpec"},"returns":"ObjectContent"},"RetrievePropertiesEx":{"params":{"_this":"ManagedObjectReference","specSet":"PropertyFilterSpec","options":"RetrieveOptions"},"returns":"RetrieveResult"},"WaitForUpdates":{"params":{"_this":"ManagedObjectReference","version":"xsd:string"},"returns":"UpdateSet"},"WaitForUpdatesEx":{"params":{"_this":"ManagedObjectReference","version":"xsd:string","options":"WaitOptions"},"returns":"UpdateSet"}}};
    _self.RecommendationReasonCode = {"type":"RecommendationReasonCode","enum":{"antiAffin":"antiAffin","balanceDatastoreIOLoad":"balanceDatastoreIOLoad","balanceDatastoreSpaceUsage":"balanceDatastoreSpaceUsage","checkResource":"checkResource","datastoreMaint":"datastoreMaint","datastoreSpaceOutage":"datastoreSpaceOutage","enterStandby":"enterStandby","fairnessCpuAvg":"fairnessCpuAvg","fairnessMemAvg":"fairnessMemAvg","hostMaint":"hostMaint","increaseCapacity":"increaseCapacity","iolbDisabledInternal":"iolbDisabledInternal","jointAffin":"jointAffin","powerOnVm":"powerOnVm","powerSaving":"powerSaving","reservationCpu":"reservationCpu","reservationMem":"reservationMem","storagePlacement":"storagePlacement","unreservedCapacity":"unreservedCapacity","virtualDiskAntiAffin":"virtualDiskAntiAffin","virtualDiskJointAffin":"virtualDiskJointAffin","vmHostHardAffinity":"vmHostHardAffinity","vmHostSoftAffinity":"vmHostSoftAffinity"}};
    _self.RecommendationType = {"type":"RecommendationType","enum":{"V1":"V1"}};
    _self.ReplicationDiskConfigFaultReasonForFault = {"type":"ReplicationDiskConfigFaultReasonForFault","enum":{"diskNotFound":"diskNotFound","diskTypeNotSupported":"diskTypeNotSupported","duplicateDiskReplicationId":"duplicateDiskReplicationId","invalidDiskKey":"invalidDiskKey","invalidDiskReplicationId":"invalidDiskReplicationId","invalidPersistentFilePath":"invalidPersistentFilePath","reconfigureDiskReplicationIdNotAllowed":"reconfigureDiskReplicationIdNotAllowed"}};
    _self.ReplicationVmConfigFaultReasonForFault = {"type":"ReplicationVmConfigFaultReasonForFault","enum":{"cannotRetrieveVmReplicationConfiguration":"cannotRetrieveVmReplicationConfiguration","incompatibleHwVersion":"incompatibleHwVersion","invalidDestinationIpAddress":"invalidDestinationIpAddress","invalidDestinationPort":"invalidDestinationPort","invalidExtraVmOptions":"invalidExtraVmOptions","invalidGenerationNumber":"invalidGenerationNumber","invalidPriorConfiguration":"invalidPriorConfiguration","invalidVmReplicationId":"invalidVmReplicationId","outOfBoundsRpoValue":"outOfBoundsRpoValue","reconfigureVmReplicationIdNotAllowed":"reconfigureVmReplicationIdNotAllowed","replicationAlreadyEnabled":"replicationAlreadyEnabled","replicationConfigurationFailed":"replicationConfigurationFailed","replicationNotEnabled":"replicationNotEnabled","staleGenerationNumber":"staleGenerationNumber"}};
    _self.ReplicationVmFaultReasonForFault = {"type":"ReplicationVmFaultReasonForFault","enum":{"invalidInstanceId":"invalidInstanceId","invalidState":"invalidState","notConfigured":"notConfigured","offlineReplicating":"offlineReplicating","poweredOff":"poweredOff","poweredOn":"poweredOn","suspended":"suspended"}};
    _self.ReplicationVmState = {"type":"ReplicationVmState","enum":{"active":"active","error":"error","idle":"idle","none":"none","paused":"paused","syncing":"syncing"}};
    _self.ResourcePlanningManager = {"type":"ResourcePlanningManager","methods":{"EstimateDatabaseSize":{"params":{"_this":"ManagedObjectReference","dbSizeParam":"DatabaseSizeParam"},"returns":"DatabaseSizeEstimate"}}};
    _self.ScheduledHardwareUpgradeInfoHardwareUpgradePolicy = {"type":"ScheduledHardwareUpgradeInfoHardwareUpgradePolicy","enum":{"always":"always","never":"never","onSoftPowerOff":"onSoftPowerOff"}};
    _self.ScheduledHardwareUpgradeInfoHardwareUpgradeStatus = {"type":"ScheduledHardwareUpgradeInfoHardwareUpgradeStatus","enum":{"failed":"failed","none":"none","pending":"pending","success":"success"}};
    _self.TaskInfoState = {"type":"TaskInfoState","enum":{"error":"error","queued":"queued","running":"running","success":"success"}};
    _self.ScsiLunDescriptorQuality = {"type":"ScsiLunDescriptorQuality","enum":{"highQuality":"highQuality","lowQuality":"lowQuality","mediumQuality":"mediumQuality","unknownQuality":"unknownQuality"}};
    _self.ScsiLunState = {"type":"ScsiLunState","enum":{"degraded":"degraded","error":"error","lostCommunication":"lostCommunication","off":"off","ok":"ok","quiesced":"quiesced","timeout":"timeout","unknownState":"unknownState"}};
    _self.ScsiLunType = {"type":"ScsiLunType","enum":{"cdrom":"cdrom","communications":"communications","disk":"disk","enclosure":"enclosure","mediaChanger":"mediaChanger","opticalDevice":"opticalDevice","printer":"printer","processor":"processor","scanner":"scanner","storageArrayController":"storageArrayController","tape":"tape","unknown":"unknown","worm":"worm"}};
    _self.ScsiLunVStorageSupportStatus = {"type":"ScsiLunVStorageSupportStatus","enum":{"vStorageSupported":"vStorageSupported","vStorageUnknown":"vStorageUnknown","vStorageUnsupported":"vStorageUnsupported"}};
    _self.SearchIndex = {"type":"SearchIndex","methods":{"FindAllByDnsName":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","dnsName":"xsd:string","vmSearch":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindAllByIp":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","ip":"xsd:string","vmSearch":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindAllByUuid":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","uuid":"xsd:string","vmSearch":"xsd:boolean","instanceUuid":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindByDatastorePath":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","path":"xsd:string"},"returns":"ManagedObjectReference"},"FindByDnsName":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","dnsName":"xsd:string","vmSearch":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindByInventoryPath":{"params":{"_this":"ManagedObjectReference","inventoryPath":"xsd:string"},"returns":"ManagedObjectReference"},"FindByIp":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","ip":"xsd:string","vmSearch":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindByUuid":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","uuid":"xsd:string","vmSearch":"xsd:boolean","instanceUuid":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindChild":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity","name":"xsd:string"},"returns":"ManagedObjectReference"}}};
    _self.SessionManagerHttpServiceRequestSpecMethod = {"type":"SessionManagerHttpServiceRequestSpecMethod","enum":{"httpConnect":"httpConnect","httpDelete":"httpDelete","httpGet":"httpGet","httpHead":"httpHead","httpOptions":"httpOptions","httpPost":"httpPost","httpPut":"httpPut","httpTrace":"httpTrace"}};
    _self.SharesLevel = {"type":"SharesLevel","enum":{"custom":"custom","high":"high","low":"low","normal":"normal"}};
    _self.SimpleCommandEncoding = {"type":"SimpleCommandEncoding","enum":{"CSV":"CSV","HEX":"HEX","STRING":"STRING"}};
    _self.SlpDiscoveryMethod = {"type":"SlpDiscoveryMethod","enum":{"slpAutoMulticast":"slpAutoMulticast","slpAutoUnicast":"slpAutoUnicast","slpDhcp":"slpDhcp","slpManual":"slpManual"}};
    _self.StateAlarmOperator = {"type":"StateAlarmOperator","enum":{"isEqual":"isEqual","isUnequal":"isUnequal"}};
    _self.StorageDrsPodConfigInfoBehavior = {"type":"StorageDrsPodConfigInfoBehavior","enum":{"automated":"automated","manual":"manual"}};
    _self.StorageIORMThresholdMode = {"type":"StorageIORMThresholdMode","enum":{"automatic":"automatic","manual":"manual"}};
    _self.VirtualMachineMovePriority = {"type":"VirtualMachineMovePriority","enum":{"defaultPriority":"defaultPriority","highPriority":"highPriority","lowPriority":"lowPriority"}};
    _self.StoragePlacementSpecPlacementType = {"type":"StoragePlacementSpecPlacementType","enum":{"clone":"clone","create":"create","reconfigure":"reconfigure","relocate":"relocate"}};
    _self.StorageResourceManager = {"type":"StorageResourceManager","methods":{"ApplyStorageDrsRecommendation_Task":{"params":{"_this":"ManagedObjectReference","key":"xsd:string"},"returns":"ManagedObjectReference"},"ApplyStorageDrsRecommendationToPod_Task":{"params":{"_this":"ManagedObjectReference","pod":"ManagedObjectReferencetoaStoragePod","key":"xsd:string"},"returns":"ManagedObjectReference"},"CancelStorageDrsRecommendation":{"params":{"_this":"ManagedObjectReference","key":"xsd:string"},"returns":null},"ConfigureDatastoreIORM_Task":{"params":{"_this":"ManagedObjectReference","datastoreP":"ManagedObjectReferencetoaDatastore","spec":"StorageIORMConfigSpec"},"returns":"ManagedObjectReference"},"ConfigureStorageDrsForPod_Task":{"params":{"_this":"ManagedObjectReference","podP":"ManagedObjectReferencetoaStoragePod","spec":"StorageDrsConfigSpec","modify":"xsd:boolean"},"returns":"ManagedObjectReference"},"QueryDatastorePerformanceSummary":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore"},"returns":"StoragePerformanceSummary"},"QueryIORMConfigOption":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"StorageIORMConfigOption"},"RecommendDatastores":{"params":{"_this":"ManagedObjectReference","storageSpec":"StoragePlacementSpec"},"returns":"StoragePlacementResult"},"RefreshStorageDrsRecommendation":{"params":{"_this":"ManagedObjectReference","pod":"ManagedObjectReferencetoaStoragePod"},"returns":null}}};
    _self.TaskFilterSpecRecursionOption = {"type":"TaskFilterSpecRecursionOption","enum":{"all":"all","children":"children","self":"self"}};
    _self.TaskFilterSpecTimeOption = {"type":"TaskFilterSpecTimeOption","enum":{"completedTime":"completedTime","queuedTime":"queuedTime","startedTime":"startedTime"}};
    _self.ThirdPartyLicenseAssignmentFailedReason = {"type":"ThirdPartyLicenseAssignmentFailedReason","enum":{"licenseAssignmentFailed":"licenseAssignmentFailed","moduleNotInstalled":"moduleNotInstalled"}};
    _self.UpgradePolicy = {"type":"UpgradePolicy","enum":{"manual":"manual","upgradeAtPowerCycle":"upgradeAtPowerCycle"}};
    _self.UserDirectory = {"type":"UserDirectory","properties":{"domainList":"xsd:string[]"},"methods":{"RetrieveUserGroups":{"params":{"_this":"ManagedObjectReference","domain":"xsd:string","searchStr":"xsd:string","belongsToGroup":"xsd:string","belongsToUser":"xsd:string","exactMatch":"xsd:boolean","findUsers":"xsd:boolean","findGroups":"xsd:boolean"},"returns":"UserSearchResult"}}};
    _self.ValidateMigrationTestType = {"type":"ValidateMigrationTestType","enum":{"compatibilityTests":"compatibilityTests","diskAccessibilityTests":"diskAccessibilityTests","resourceTests":"resourceTests","sourceTests":"sourceTests"}};
    _self.VAppAutoStartAction = {"type":"VAppAutoStartAction","enum":{"guestShutdown":"guestShutdown","none":"none","powerOff":"powerOff","powerOn":"powerOn","suspend":"suspend"}};
    _self.VAppCloneSpecProvisioningType = {"type":"VAppCloneSpecProvisioningType","enum":{"sameAsSource":"sameAsSource","thick":"thick","thin":"thin"}};
    _self.VAppIPAssignmentInfoAllocationSchemes = {"type":"VAppIPAssignmentInfoAllocationSchemes","enum":{"dhcp":"dhcp","ovfenv":"ovfenv"}};
    _self.VAppIPAssignmentInfoIpAllocationPolicy = {"type":"VAppIPAssignmentInfoIpAllocationPolicy","enum":{"dhcpPolicy":"dhcpPolicy","fixedAllocatedPolicy":"fixedAllocatedPolicy","fixedPolicy":"fixedPolicy","transientPolicy":"transientPolicy"}};
    _self.VAppIPAssignmentInfoProtocols = {"type":"VAppIPAssignmentInfoProtocols","enum":{"IPv4":"IPv4","IPv6":"IPv6"}};
    _self.VFlashModuleNotSupportedReason = {"type":"VFlashModuleNotSupportedReason","enum":{"CacheBlockSizeNotSupported":"CacheBlockSizeNotSupported","CacheConsistencyTypeNotSupported":"CacheConsistencyTypeNotSupported","CacheModeNotSupported":"CacheModeNotSupported","CacheReservationNotSupported":"CacheReservationNotSupported","DiskSizeNotSupported":"DiskSizeNotSupported"}};
    _self.View = {"type":"View","methods":{"DestroyView":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.ViewManager = {"type":"ViewManager","properties":{"viewList":_self.ManagedObjectReference},"methods":{"CreateContainerView":{"params":{"_this":"ManagedObjectReference","containerP":"ManagedObjectReferencetoaManagedEntity","type":"xsd:string","recursive":"xsd:boolean"},"returns":"ManagedObjectReference"},"CreateInventoryView":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"CreateListView":{"params":{"_this":"ManagedObjectReference","objP":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"CreateListViewFromView":{"params":{"_this":"ManagedObjectReference","view":"ManagedObjectReferencetoaView"},"returns":"ManagedObjectReference"}}};
    _self.VirtualAppVAppState = {"type":"VirtualAppVAppState","enum":{"started":"started","starting":"starting","stopped":"stopped","stopping":"stopping"}};
    _self.VirtualDeviceConnectInfoStatus = {"type":"VirtualDeviceConnectInfoStatus","enum":{"ok":"ok","recoverableError":"recoverableError","unrecoverableError":"unrecoverableError","untried":"untried"}};
    _self.VirtualDeviceFileExtension = {"type":"VirtualDeviceFileExtension","enum":{"dsk":"dsk","flp":"flp","iso":"iso","rdm":"rdm","vmdk":"vmdk"}};
    _self.VirtualDeviceURIBackingOptionDirection = {"type":"VirtualDeviceURIBackingOptionDirection","enum":{"client":"client","server":"server"}};
    _self.VirtualDiskAdapterType = {"type":"VirtualDiskAdapterType","enum":{"busLogic":"busLogic","ide":"ide","lsiLogic":"lsiLogic"}};
    _self.VirtualDiskCompatibilityMode = {"type":"VirtualDiskCompatibilityMode","enum":{"physicalMode":"physicalMode","virtualMode":"virtualMode"}};
    _self.VirtualDiskDeltaDiskFormat = {"type":"VirtualDiskDeltaDiskFormat","enum":{"nativeFormat":"nativeFormat","redoLogFormat":"redoLogFormat","seSparseFormat":"seSparseFormat"}};
    _self.VirtualDiskManager = {"type":"VirtualDiskManager","methods":{"CopyVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","sourceName":"xsd:string","sourceDatacenter":"ManagedObjectReferencetoaDatacenter","destName":"xsd:string","destDatacenter":"ManagedObjectReferencetoaDatacenter","destSpec":"VirtualDiskSpec","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"CreateVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter","spec":"VirtualDiskSpec"},"returns":"ManagedObjectReference"},"DefragmentVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"DeleteVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"EagerZeroVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"ExtendVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter","newCapacityKb":"xsd:long","eagerZero":"xsd:boolean"},"returns":"ManagedObjectReference"},"InflateVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"MoveVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","sourceName":"xsd:string","sourceDatacenter":"ManagedObjectReferencetoaDatacenter","destName":"xsd:string","destDatacenter":"ManagedObjectReferencetoaDatacenter","force":"xsd:boolean","profile":"VirtualMachineProfileSpec"},"returns":"ManagedObjectReference"},"QueryVirtualDiskFragmentation":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter"},"returns":"xsd:int"},"QueryVirtualDiskGeometry":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter"},"returns":"HostDiskDimensionsChs"},"QueryVirtualDiskUuid":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter"},"returns":"xsd:string"},"SetVirtualDiskUuid":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter","uuid":"xsd:string"},"returns":null},"ShrinkVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter","copy":"xsd:boolean"},"returns":"ManagedObjectReference"},"ZeroFillVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenter":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"}}};
    _self.VirtualDiskMode = {"type":"VirtualDiskMode","enum":{"append":"append","independent_nonpersistent":"independent_nonpersistent","independent_persistent":"independent_persistent","nonpersistent":"nonpersistent","persistent":"persistent","undoable":"undoable"}};
    _self.VirtualDiskType = {"type":"VirtualDiskType","enum":{"delta":"delta","eagerZeroedThick":"eagerZeroedThick","flatMonolithic":"flatMonolithic","preallocated":"preallocated","raw":"raw","rdm":"rdm","rdmp":"rdmp","seSparse":"seSparse","sparse2Gb":"sparse2Gb","sparseMonolithic":"sparseMonolithic","thick":"thick","thick2Gb":"thick2Gb","thin":"thin"}};
    _self.VirtualDiskVFlashCacheConfigInfoCacheConsistencyType = {"type":"VirtualDiskVFlashCacheConfigInfoCacheConsistencyType","enum":{"strong":"strong","weak":"weak"}};
    _self.VirtualDiskVFlashCacheConfigInfoCacheMode = {"type":"VirtualDiskVFlashCacheConfigInfoCacheMode","enum":{"write_back":"write_back","write_thru":"write_thru"}};
    _self.VirtualEthernetCardLegacyNetworkDeviceName = {"type":"VirtualEthernetCardLegacyNetworkDeviceName","enum":{"bridged":"bridged","hostonly":"hostonly","nat":"nat"}};
    _self.VirtualEthernetCardMacType = {"type":"VirtualEthernetCardMacType","enum":{"assigned":"assigned","generated":"generated","manual":"manual"}};
    _self.VirtualizationManager = {"type":"VirtualizationManager","methods":{}};
    _self.VirtualMachineAppHeartbeatStatusType = {"type":"VirtualMachineAppHeartbeatStatusType","enum":{"appStatusGray":"appStatusGray","appStatusGreen":"appStatusGreen","appStatusRed":"appStatusRed"}};
    _self.VirtualMachineCompatibilityChecker = {"type":"VirtualMachineCompatibilityChecker","methods":{"CheckCompatibility_Task":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","host":"ManagedObjectReferencetoaHostSystem","pool":"ManagedObjectReferencetoaResourcePool","testType":"xsd:string"},"returns":"ManagedObjectReference"}}};
    _self.VirtualMachineConfigInfoNpivWwnType = {"type":"VirtualMachineConfigInfoNpivWwnType","enum":{"external":"external","host":"host","vc":"vc"}};
    _self.VirtualMachineConfigInfoSwapPlacementType = {"type":"VirtualMachineConfigInfoSwapPlacementType","enum":{"hostLocal":"hostLocal","inherit":"inherit","vmDirectory":"vmDirectory"}};
    _self.VirtualMachineConfigSpecNpivWwnOp = {"type":"VirtualMachineConfigSpecNpivWwnOp","enum":{"extend":"extend","generate":"generate","remove":"remove","set":"set"}};
    _self.VirtualMachineConnectionState = {"type":"VirtualMachineConnectionState","enum":{"connected":"connected","disconnected":"disconnected","inaccessible":"inaccessible","invalid":"invalid","orphaned":"orphaned"}};
    _self.VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther = {"type":"VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther","enum":{"vmNptIncompatibleHost":"vmNptIncompatibleHost","vmNptIncompatibleNetwork":"vmNptIncompatibleNetwork"}};
    _self.VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm = {"type":"VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm","enum":{"vmNptConflictingIOChainConfigured":"vmNptConflictingIOChainConfigured","vmNptConflictingOperationInProgress":"vmNptConflictingOperationInProgress","vmNptDisabledOrDisconnectedAdapter":"vmNptDisabledOrDisconnectedAdapter","vmNptFaultToleranceOrRecordReplayConfigured":"vmNptFaultToleranceOrRecordReplayConfigured","vmNptIncompatibleAdapterFeatures":"vmNptIncompatibleAdapterFeatures","vmNptIncompatibleAdapterType":"vmNptIncompatibleAdapterType","vmNptIncompatibleBackingType":"vmNptIncompatibleBackingType","vmNptIncompatibleGuest":"vmNptIncompatibleGuest","vmNptIncompatibleGuestDriver":"vmNptIncompatibleGuestDriver","vmNptInsufficientMemoryReservation":"vmNptInsufficientMemoryReservation","vmNptMonitorBlocks":"vmNptMonitorBlocks","vmNptOutOfIntrVector":"vmNptOutOfIntrVector","vmNptRuntimeError":"vmNptRuntimeError","vmNptVMCIActive":"vmNptVMCIActive"}};
    _self.VirtualMachineFaultToleranceState = {"type":"VirtualMachineFaultToleranceState","enum":{"disabled":"disabled","enabled":"enabled","needSecondary":"needSecondary","notConfigured":"notConfigured","running":"running","starting":"starting"}};
    _self.VirtualMachineFileLayoutExFileType = {"type":"VirtualMachineFileLayoutExFileType","enum":{"config":"config","core":"core","digestDescriptor":"digestDescriptor","digestExtent":"digestExtent","diskDescriptor":"diskDescriptor","diskExtent":"diskExtent","diskReplicationState":"diskReplicationState","extendedConfig":"extendedConfig","log":"log","namespaceData":"namespaceData","nvram":"nvram","screenshot":"screenshot","snapshotData":"snapshotData","snapshotList":"snapshotList","snapshotManifestList":"snapshotManifestList","stat":"stat","suspend":"suspend","swap":"swap","uwswap":"uwswap"}};
    _self.VirtualMachineFlagInfoMonitorType = {"type":"VirtualMachineFlagInfoMonitorType","enum":{"debug":"debug","release":"release","stats":"stats"}};
    _self.VirtualMachineFlagInfoVirtualExecUsage = {"type":"VirtualMachineFlagInfoVirtualExecUsage","enum":{"hvAuto":"hvAuto","hvOff":"hvOff","hvOn":"hvOn"}};
    _self.VirtualMachineFlagInfoVirtualMmuUsage = {"type":"VirtualMachineFlagInfoVirtualMmuUsage","enum":{"automatic":"automatic","off":"off","on":"on"}};
    _self.VirtualMachineGuestOsFamily = {"type":"VirtualMachineGuestOsFamily","enum":{"darwinGuestFamily":"darwinGuestFamily","linuxGuest":"linuxGuest","netwareGuest":"netwareGuest","otherGuestFamily":"otherGuestFamily","solarisGuest":"solarisGuest","windowsGuest":"windowsGuest"}};
    _self.VirtualMachineGuestOsIdentifier = {"type":"VirtualMachineGuestOsIdentifier","enum":{"asianux3_64Guest":"asianux3_64Guest","asianux3Guest":"asianux3Guest","asianux4_64Guest":"asianux4_64Guest","asianux4Guest":"asianux4Guest","centos64Guest":"centos64Guest","centosGuest":"centosGuest","darwin10_64Guest":"darwin10_64Guest","darwin10Guest":"darwin10Guest","darwin11_64Guest":"darwin11_64Guest","darwin11Guest":"darwin11Guest","darwin12_64Guest":"darwin12_64Guest","darwin13_64Guest":"darwin13_64Guest","darwin64Guest":"darwin64Guest","darwinGuest":"darwinGuest","debian4_64Guest":"debian4_64Guest","debian4Guest":"debian4Guest","debian5_64Guest":"debian5_64Guest","debian5Guest":"debian5Guest","debian6_64Guest":"debian6_64Guest","debian6Guest":"debian6Guest","debian7_64Guest":"debian7_64Guest","debian7Guest":"debian7Guest","dosGuest":"dosGuest","eComStation2Guest":"eComStation2Guest","eComStationGuest":"eComStationGuest","fedora64Guest":"fedora64Guest","fedoraGuest":"fedoraGuest","freebsd64Guest":"freebsd64Guest","freebsdGuest":"freebsdGuest","genericLinuxGuest":"genericLinuxGuest","mandrakeGuest":"mandrakeGuest","mandriva64Guest":"mandriva64Guest","mandrivaGuest":"mandrivaGuest","netware4Guest":"netware4Guest","netware5Guest":"netware5Guest","netware6Guest":"netware6Guest","nld9Guest":"nld9Guest","oesGuest":"oesGuest","openServer5Guest":"openServer5Guest","openServer6Guest":"openServer6Guest","opensuse64Guest":"opensuse64Guest","opensuseGuest":"opensuseGuest","oracleLinux64Guest":"oracleLinux64Guest","oracleLinuxGuest":"oracleLinuxGuest","os2Guest":"os2Guest","other24xLinux64Guest":"other24xLinux64Guest","other24xLinuxGuest":"other24xLinuxGuest","other26xLinux64Guest":"other26xLinux64Guest","other26xLinuxGuest":"other26xLinuxGuest","other3xLinux64Guest":"other3xLinux64Guest","other3xLinuxGuest":"other3xLinuxGuest","otherGuest":"otherGuest","otherGuest64":"otherGuest64","otherLinux64Guest":"otherLinux64Guest","otherLinuxGuest":"otherLinuxGuest","redhatGuest":"redhatGuest","rhel2Guest":"rhel2Guest","rhel3_64Guest":"rhel3_64Guest","rhel3Guest":"rhel3Guest","rhel4_64Guest":"rhel4_64Guest","rhel4Guest":"rhel4Guest","rhel5_64Guest":"rhel5_64Guest","rhel5Guest":"rhel5Guest","rhel6_64Guest":"rhel6_64Guest","rhel6Guest":"rhel6Guest","rhel7_64Guest":"rhel7_64Guest","rhel7Guest":"rhel7Guest","sjdsGuest":"sjdsGuest","sles10_64Guest":"sles10_64Guest","sles10Guest":"sles10Guest","sles11_64Guest":"sles11_64Guest","sles11Guest":"sles11Guest","sles12_64Guest":"sles12_64Guest","sles12Guest":"sles12Guest","sles64Guest":"sles64Guest","slesGuest":"slesGuest","solaris10_64Guest":"solaris10_64Guest","solaris10Guest":"solaris10Guest","solaris11_64Guest":"solaris11_64Guest","solaris6Guest":"solaris6Guest","solaris7Guest":"solaris7Guest","solaris8Guest":"solaris8Guest","solaris9Guest":"solaris9Guest","suse64Guest":"suse64Guest","suseGuest":"suseGuest","turboLinux64Guest":"turboLinux64Guest","turboLinuxGuest":"turboLinuxGuest","ubuntu64Guest":"ubuntu64Guest","ubuntuGuest":"ubuntuGuest","unixWare7Guest":"unixWare7Guest","vmkernel5Guest":"vmkernel5Guest","vmkernelGuest":"vmkernelGuest","win2000AdvServGuest":"win2000AdvServGuest","win2000ProGuest":"win2000ProGuest","win2000ServGuest":"win2000ServGuest","win31Guest":"win31Guest","win95Guest":"win95Guest","win98Guest":"win98Guest","windows7_64Guest":"windows7_64Guest","windows7Guest":"windows7Guest","windows7Server64Guest":"windows7Server64Guest","windows8_64Guest":"windows8_64Guest","windows8Guest":"windows8Guest","windows8Server64Guest":"windows8Server64Guest","windowsHyperVGuest":"windowsHyperVGuest","winLonghorn64Guest":"winLonghorn64Guest","winLonghornGuest":"winLonghornGuest","winMeGuest":"winMeGuest","winNetBusinessGuest":"winNetBusinessGuest","winNetDatacenter64Guest":"winNetDatacenter64Guest","winNetDatacenterGuest":"winNetDatacenterGuest","winNetEnterprise64Guest":"winNetEnterprise64Guest","winNetEnterpriseGuest":"winNetEnterpriseGuest","winNetStandard64Guest":"winNetStandard64Guest","winNetStandardGuest":"winNetStandardGuest","winNetWebGuest":"winNetWebGuest","winNTGuest":"winNTGuest","winVista64Guest":"winVista64Guest","winVistaGuest":"winVistaGuest","winXPHomeGuest":"winXPHomeGuest","winXPPro64Guest":"winXPPro64Guest","winXPProGuest":"winXPProGuest"}};
    _self.VirtualMachineGuestState = {"type":"VirtualMachineGuestState","enum":{"notRunning":"notRunning","resetting":"resetting","running":"running","shuttingDown":"shuttingDown","standby":"standby","unknown":"unknown"}};
    _self.VirtualMachineHtSharing = {"type":"VirtualMachineHtSharing","enum":{"any":"any","internal":"internal","none":"none"}};
    _self.VirtualMachineMemoryAllocationPolicy = {"type":"VirtualMachineMemoryAllocationPolicy","enum":{"swapMost":"swapMost","swapNone":"swapNone","swapSome":"swapSome"}};
    _self.VirtualMachineMetadataManagerVmMetadataOp = {"type":"VirtualMachineMetadataManagerVmMetadataOp","enum":{"Remove":"Remove","Update":"Update"}};
    _self.VirtualMachineMetadataManagerVmMetadataOwnerOwner = {"type":"VirtualMachineMetadataManagerVmMetadataOwnerOwner","enum":{"ComVmwareVsphereHA":"ComVmwareVsphereHA"}};
    _self.VirtualMachineNeedSecondaryReason = {"type":"VirtualMachineNeedSecondaryReason","enum":{"divergence":"divergence","initializing":"initializing","lostConnection":"lostConnection","other":"other","partialHardwareFailure":"partialHardwareFailure","userAction":"userAction"}};
    _self.VirtualMachinePowerOffBehavior = {"type":"VirtualMachinePowerOffBehavior","enum":{"powerOff":"powerOff","prompt":"prompt","revert":"revert"}};
    _self.VirtualMachinePowerOpType = {"type":"VirtualMachinePowerOpType","enum":{"hard":"hard","preset":"preset","soft":"soft"}};
    _self.VirtualMachineProvisioningChecker = {"type":"VirtualMachineProvisioningChecker","methods":{"CheckMigrate_Task":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","host":"ManagedObjectReferencetoaHostSystem","pool":"ManagedObjectReferencetoaResourcePool","state":"VirtualMachinePowerState","testType":"xsd:string"},"returns":"ManagedObjectReference"},"CheckRelocate_Task":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","spec":"VirtualMachineRelocateSpec","testType":"xsd:string"},"returns":"ManagedObjectReference"},"QueryVMotionCompatibilityEx_Task":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"}}};
    _self.VirtualMachineRecordReplayState = {"type":"VirtualMachineRecordReplayState","enum":{"inactive":"inactive","recording":"recording","replaying":"replaying"}};
    _self.VirtualMachineRelocateDiskMoveOptions = {"type":"VirtualMachineRelocateDiskMoveOptions","enum":{"createNewChildDiskBacking":"createNewChildDiskBacking","moveAllDiskBackingsAndAllowSharing":"moveAllDiskBackingsAndAllowSharing","moveAllDiskBackingsAndConsolidate":"moveAllDiskBackingsAndConsolidate","moveAllDiskBackingsAndDisallowSharing":"moveAllDiskBackingsAndDisallowSharing","moveChildMostDiskBacking":"moveChildMostDiskBacking"}};
    _self.VirtualMachineRelocateTransformation = {"type":"VirtualMachineRelocateTransformation","enum":{"flat":"flat","sparse":"sparse"}};
    _self.VirtualMachineScsiPassthroughType = {"type":"VirtualMachineScsiPassthroughType","enum":{"cdrom":"cdrom","com":"com","disk":"disk","media":"media","optical":"optical","printer":"printer","processor":"processor","raid":"raid","scanner":"scanner","tape":"tape","unknown":"unknown","worm":"worm"}};
    _self.VirtualMachineStandbyActionType = {"type":"VirtualMachineStandbyActionType","enum":{"checkpoint":"checkpoint","powerOnSuspend":"powerOnSuspend"}};
    _self.VirtualMachineTargetInfoConfigurationTag = {"type":"VirtualMachineTargetInfoConfigurationTag","enum":{"clusterWide":"clusterWide","compliant":"compliant"}};
    _self.VirtualMachineTicketType = {"type":"VirtualMachineTicketType","enum":{"device":"device","guestControl":"guestControl","mks":"mks"}};
    _self.VirtualMachineToolsRunningStatus = {"type":"VirtualMachineToolsRunningStatus","enum":{"guestToolsExecutingScripts":"guestToolsExecutingScripts","guestToolsNotRunning":"guestToolsNotRunning","guestToolsRunning":"guestToolsRunning"}};
    _self.VirtualMachineToolsVersionStatus = {"type":"VirtualMachineToolsVersionStatus","enum":{"guestToolsBlacklisted":"guestToolsBlacklisted","guestToolsCurrent":"guestToolsCurrent","guestToolsNeedUpgrade":"guestToolsNeedUpgrade","guestToolsNotInstalled":"guestToolsNotInstalled","guestToolsSupportedNew":"guestToolsSupportedNew","guestToolsSupportedOld":"guestToolsSupportedOld","guestToolsTooNew":"guestToolsTooNew","guestToolsTooOld":"guestToolsTooOld","guestToolsUnmanaged":"guestToolsUnmanaged"}};
    _self.VirtualMachineUsbInfoFamily = {"type":"VirtualMachineUsbInfoFamily","enum":{"audio":"audio","bluetooth":"bluetooth","communication":"communication","hid":"hid","hid_bootable":"hid_bootable","hub":"hub","imaging":"imaging","other":"other","pda":"pda","physical":"physical","printer":"printer","security":"security","smart_card":"smart_card","storage":"storage","unknownFamily":"unknownFamily","vendor_specific":"vendor_specific","video":"video","wireless":"wireless","wusb":"wusb"}};
    _self.VirtualMachineUsbInfoSpeed = {"type":"VirtualMachineUsbInfoSpeed","enum":{"full":"full","high":"high","low":"low","superSpeed":"superSpeed","unknownSpeed":"unknownSpeed"}};
    _self.VirtualMachineVideoCardUse3dRenderer = {"type":"VirtualMachineVideoCardUse3dRenderer","enum":{"automatic":"automatic","hardware":"hardware","software":"software"}};
    _self.VirtualPointingDeviceHostChoice = {"type":"VirtualPointingDeviceHostChoice","enum":{"autodetect":"autodetect","intellimouseExplorer":"intellimouseExplorer","intellimousePs2":"intellimousePs2","logitechMouseman":"logitechMouseman","microsoft_serial":"microsoft_serial","mousemanSerial":"mousemanSerial","mouseSystems":"mouseSystems","ps2":"ps2"}};
    _self.VirtualSCSISharing = {"type":"VirtualSCSISharing","enum":{"noSharing":"noSharing","physicalSharing":"physicalSharing","virtualSharing":"virtualSharing"}};
    _self.VirtualSerialPortEndPoint = {"type":"VirtualSerialPortEndPoint","enum":{"client":"client","server":"server"}};
    _self.VmDasBeingResetEventReasonCode = {"type":"VmDasBeingResetEventReasonCode","enum":{"appHeartbeatFailure":"appHeartbeatFailure","appImmediateResetRequest":"appImmediateResetRequest","vmtoolsHeartbeatFailure":"vmtoolsHeartbeatFailure"}};
    _self.VmFailedStartingSecondaryEventFailureReason = {"type":"VmFailedStartingSecondaryEventFailureReason","enum":{"incompatibleHost":"incompatibleHost","loginFailed":"loginFailed","migrateFailed":"migrateFailed","registerVmFailed":"registerVmFailed"}};
    _self.VmFaultToleranceConfigIssueReasonForIssue = {"type":"VmFaultToleranceConfigIssueReasonForIssue","enum":{"esxAgentVm":"esxAgentVm","ftSecondaryVm":"ftSecondaryVm","ftUnsupportedHardware":"ftUnsupportedHardware","ftUnsupportedProduct":"ftUnsupportedProduct","haNotEnabled":"haNotEnabled","hasLocalDisk":"hasLocalDisk","hasNestedHVConfiguration":"hasNestedHVConfiguration","hasSnapshots":"hasSnapshots","hasUnsupportedDisk":"hasUnsupportedDisk","hasVFlashConfiguration":"hasVFlashConfiguration","hostInactive":"hostInactive","missingFTLoggingNic":"missingFTLoggingNic","missingVMotionNic":"missingVMotionNic","moreThanOneSecondary":"moreThanOneSecondary","multipleVCPU":"multipleVCPU","noConfig":"noConfig","recordReplayNotSupported":"recordReplayNotSupported","replayNotSupported":"replayNotSupported","templateVm":"templateVm","thinDisk":"thinDisk","verifySSLCertificateFlagNotSet":"verifySSLCertificateFlagNotSet","video3dEnabled":"video3dEnabled"}};
    _self.VmFaultToleranceInvalidFileBackingDeviceType = {"type":"VmFaultToleranceInvalidFileBackingDeviceType","enum":{"virtualCdrom":"virtualCdrom","virtualDisk":"virtualDisk","virtualFloppy":"virtualFloppy","virtualParallelPort":"virtualParallelPort","virtualSerialPort":"virtualSerialPort"}};
    _self.VMotionCompatibilityType = {"type":"VMotionCompatibilityType","enum":{"cpu":"cpu","software":"software"}};
    _self.VmShutdownOnIsolationEventOperation = {"type":"VmShutdownOnIsolationEventOperation","enum":{"poweredOff":"poweredOff","shutdown":"shutdown"}};
    _self.VmwareDistributedVirtualSwitchPvlanPortType = {"type":"VmwareDistributedVirtualSwitchPvlanPortType","enum":{"community":"community","isolated":"isolated","promiscuous":"promiscuous"}};
    _self.VMwareDvsLacpApiVersion = {"type":"VMwareDvsLacpApiVersion","enum":{"multipleLag":"multipleLag","singleLag":"singleLag"}};
    _self.VMwareDvsLacpLoadBalanceAlgorithm = {"type":"VMwareDvsLacpLoadBalanceAlgorithm","enum":{"destIp":"destIp","destIpTcpUdpPort":"destIpTcpUdpPort","destIpTcpUdpPortVlan":"destIpTcpUdpPortVlan","destIpVlan":"destIpVlan","destMac":"destMac","destTcpUdpPort":"destTcpUdpPort","srcDestIp":"srcDestIp","srcDestIpTcpUdpPort":"srcDestIpTcpUdpPort","srcDestIpTcpUdpPortVlan":"srcDestIpTcpUdpPortVlan","srcDestIpVlan":"srcDestIpVlan","srcDestMac":"srcDestMac","srcDestTcpUdpPort":"srcDestTcpUdpPort","srcIp":"srcIp","srcIpTcpUdpPort":"srcIpTcpUdpPort","srcIpTcpUdpPortVlan":"srcIpTcpUdpPortVlan","srcIpVlan":"srcIpVlan","srcMac":"srcMac","srcPortId":"srcPortId","srcTcpUdpPort":"srcTcpUdpPort","vlan":"vlan"}};
    _self.VMwareDVSTeamingMatchStatus = {"type":"VMwareDVSTeamingMatchStatus","enum":{"iphashMatch":"iphashMatch","iphashMismatch":"iphashMismatch","nonIphashMatch":"nonIphashMatch","nonIphashMismatch":"nonIphashMismatch"}};
    _self.VMwareDVSVspanSessionType = {"type":"VMwareDVSVspanSessionType","enum":{"dvPortMirror":"dvPortMirror","encapsulatedRemoteMirrorSource":"encapsulatedRemoteMirrorSource","mixedDestMirror":"mixedDestMirror","remoteMirrorDest":"remoteMirrorDest","remoteMirrorSource":"remoteMirrorSource"}};
    _self.VMwareUplinkLacpMode = {"type":"VMwareUplinkLacpMode","enum":{"active":"active","passive":"passive"}};
    _self.VsanDiskIssueType = {"type":"VsanDiskIssueType","enum":{"nonExist":"nonExist","stampMismatch":"stampMismatch","unknown":"unknown"}};
    _self.VsanHostDecommissionModeObjectAction = {"type":"VsanHostDecommissionModeObjectAction","enum":{"ensureObjectAccessibility":"ensureObjectAccessibility","evacuateAllData":"evacuateAllData","noAction":"noAction"}};
    _self.VsanHostDiskResultState = {"type":"VsanHostDiskResultState","enum":{"eligible":"eligible","ineligible":"ineligible","inUse":"inUse"}};
    _self.VsanHostHealthState = {"type":"VsanHostHealthState","enum":{"healthy":"healthy","unhealthy":"unhealthy","unknown":"unknown"}};
    _self.VsanHostNodeState = {"type":"VsanHostNodeState","enum":{"agent":"agent","backup":"backup","decommissioning":"decommissioning","disabled":"disabled","enteringMaintenanceMode":"enteringMaintenanceMode","error":"error","exitingMaintenanceMode":"exitingMaintenanceMode","master":"master","starting":"starting","stopping":"stopping"}};
    _self.WillLoseHAProtectionResolution = {"type":"WillLoseHAProtectionResolution","enum":{"relocate":"relocate","svmotion":"svmotion"}};
    _self.ClusterProfileManager = merge({"type":"ClusterProfileManager","methods":{}}, _self.ProfileManager);
    _self.DynamicData = {"type":"DynamicData","properties":{"dynamicProperty":_self.DynamicProperty,"dynamicType":"xsd:string"}};
    _self.EntityBackup = merge({"type":"EntityBackup"}, _self.DynamicData);
    _self.EntityBackupConfig = merge({"type":"EntityBackupConfig","properties":{"configBlob":"xsd:base64Binary","configVersion":"xsd:string","container":_self.ManagedObjectReference,"entityType":"xsd:string","key":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.PrivilegeAvailability = merge({"type":"PrivilegeAvailability","properties":{"isGranted":"xsd:boolean","privId":"xsd:string"}}, _self.DynamicData);
    _self.HostFeatureCapability = merge({"type":"HostFeatureCapability","properties":{"featureName":"xsd:string","key":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.HostFeatureMask = merge({"type":"HostFeatureMask","properties":{"featureName":"xsd:string","key":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineFeatureRequirement = merge({"type":"VirtualMachineFeatureRequirement","properties":{"featureName":"xsd:string","key":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.HostCpuIdInfo = merge({"type":"HostCpuIdInfo","properties":{"eax":"xsd:string","ebx":"xsd:string","ecx":"xsd:string","edx":"xsd:string","level":"xsd:int","vendor":"xsd:string"}}, _self.DynamicData);
    _self.EventAlarmExpressionComparison = merge({"type":"EventAlarmExpressionComparison","properties":{"attributeName":"xsd:string","operator":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.EventArgument = merge({"type":"EventArgument"}, _self.DynamicData);
    _self.EventDescriptionEventDetail = merge({"type":"EventDescriptionEventDetail","properties":{"category":"xsd:string","description":"xsd:string","formatOnComputeResource":"xsd:string","formatOnDatacenter":"xsd:string","formatOnHost":"xsd:string","formatOnVm":"xsd:string","fullFormat":"xsd:string","key":"xsd:string","longDescription":"xsd:string"}}, _self.DynamicData);
    _self.KeyAnyValue = merge({"type":"KeyAnyValue","properties":{"key":"xsd:string","value":"xsd:anyType"}}, _self.DynamicData);
    _self.EventFilterSpecByEntity = merge({"type":"EventFilterSpecByEntity","properties":{"entity":_self.ManagedObjectReference,"recursion":_self.EventFilterSpecRecursionOption}}, _self.DynamicData);
    _self.EventFilterSpecByTime = merge({"type":"EventFilterSpecByTime","properties":{"beginTime":"xsd:dateTime","endTime":"xsd:dateTime"}}, _self.DynamicData);
    _self.EventFilterSpecByUsername = merge({"type":"EventFilterSpecByUsername","properties":{"systemUser":"xsd:boolean","userList":"xsd:string[]"}}, _self.DynamicData);
    _self.ExtendedEventPair = merge({"type":"ExtendedEventPair","properties":{"key":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.KeyValue = merge({"type":"KeyValue","properties":{"key":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionEventTypeInfo = merge({"type":"ExtensionEventTypeInfo","properties":{"eventID":"xsd:string","eventTypeSchema":"xsd:string"}}, _self.DynamicData);
    _self.ExtExtendedProductInfo = merge({"type":"ExtExtendedProductInfo","properties":{"companyUrl":"xsd:string","managementUrl":"xsd:string","productUrl":"xsd:string","self":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ExtensionFaultTypeInfo = merge({"type":"ExtensionFaultTypeInfo","properties":{"faultID":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionHealthInfo = merge({"type":"ExtensionHealthInfo","properties":{"url":"xsd:string"}}, _self.DynamicData);
    _self.ExtManagedEntityInfo = merge({"type":"ExtManagedEntityInfo","properties":{"description":"xsd:string","iconUrl":"xsd:string","smallIconUrl":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionOvfConsumerInfo = merge({"type":"ExtensionOvfConsumerInfo","properties":{"callbackUrl":"xsd:string","sectionType":"xsd:string[]"}}, _self.DynamicData);
    _self.ExtensionPrivilegeInfo = merge({"type":"ExtensionPrivilegeInfo","properties":{"privGroupName":"xsd:string","privID":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionResourceInfo = merge({"type":"ExtensionResourceInfo","properties":{"data":_self.KeyValue,"locale":"xsd:string","module":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionTaskTypeInfo = merge({"type":"ExtensionTaskTypeInfo","properties":{"taskID":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionManagerIpAllocationUsage = merge({"type":"ExtensionManagerIpAllocationUsage","properties":{"extensionKey":"xsd:string","numAddresses":"xsd:int"}}, _self.DynamicData);
    _self.ExtSolutionManagerInfoTabInfo = merge({"type":"ExtSolutionManagerInfoTabInfo","properties":{"label":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.FaultToleranceConfigInfo = merge({"type":"FaultToleranceConfigInfo","properties":{"configPaths":"xsd:string[]","instanceUuids":"xsd:string[]","role":"xsd:int"}}, _self.DynamicData);
    _self.FaultTolerancePrimaryConfigInfo = merge({"type":"FaultTolerancePrimaryConfigInfo","properties":{"secondaries":_self.ManagedObjectReference}}, _self.FaultToleranceConfigInfo);
    _self.FaultToleranceSecondaryConfigInfo = merge({"type":"FaultToleranceSecondaryConfigInfo","properties":{"primaryVM":_self.ManagedObjectReference}}, _self.FaultToleranceConfigInfo);
    _self.FcoeConfigFcoeCapabilities = merge({"type":"FcoeConfigFcoeCapabilities","properties":{"priorityClass":"xsd:boolean","sourceMacAddress":"xsd:boolean","vlanRange":"xsd:boolean"}}, _self.DynamicData);
    _self.FcoeConfigVlanRange = merge({"type":"FcoeConfigVlanRange","properties":{"vlanHigh":"xsd:int","vlanLow":"xsd:int"}}, _self.DynamicData);
    _self.FcoeConfigFcoeSpecification = merge({"type":"FcoeConfigFcoeSpecification","properties":{"priorityClass":"xsd:int","sourceMac":"xsd:string","underlyingPnic":"xsd:string","vlanRange":_self.FcoeConfigVlanRange}}, _self.DynamicData);
    _self.VirtualMachineProfileSpec = merge({"type":"VirtualMachineProfileSpec"}, _self.DynamicData);
    _self.FileInfo = merge({"type":"FileInfo","properties":{"fileSize":"xsd:long","modification":"xsd:dateTime","owner":"xsd:string","path":"xsd:string"}}, _self.DynamicData);
    _self.FileQuery = merge({"type":"FileQuery"}, _self.DynamicData);
    _self.FileQueryFlags = merge({"type":"FileQueryFlags","properties":{"fileOwner":"xsd:boolean","fileSize":"xsd:boolean","fileType":"xsd:boolean","modification":"xsd:boolean"}}, _self.DynamicData);
    _self.GuestFileAttributes = merge({"type":"GuestFileAttributes","properties":{"accessTime":"xsd:dateTime","modificationTime":"xsd:dateTime","symlinkTarget":"xsd:string"}}, _self.DynamicData);
    _self.FloppyImageFileInfo = merge({"type":"FloppyImageFileInfo"}, _self.FileInfo);
    _self.FloppyImageFileQuery = merge({"type":"FloppyImageFileQuery"}, _self.FileQuery);
    _self.FolderFileInfo = merge({"type":"FolderFileInfo"}, _self.FileInfo);
    _self.FolderFileQuery = merge({"type":"FolderFileQuery"}, _self.FileQuery);
    _self.GuestAuthentication = merge({"type":"GuestAuthentication","properties":{"interactiveSession":"xsd:boolean"}}, _self.DynamicData);
    _self.GuestDiskInfo = merge({"type":"GuestDiskInfo","properties":{"capacity":"xsd:long","diskPath":"xsd:string","freeSpace":"xsd:long"}}, _self.DynamicData);
    _self.GuestFileInfo = merge({"type":"GuestFileInfo","properties":{"attributes":_self.GuestFileAttributes,"path":"xsd:string","size":"xsd:long","type":"xsd:string"}}, _self.DynamicData);
    _self.GuestInfoNamespaceGenerationInfo = merge({"type":"GuestInfoNamespaceGenerationInfo","properties":{"generationNo":"xsd:int","key":"xsd:string"}}, _self.DynamicData);
    _self.GuestScreenInfo = merge({"type":"GuestScreenInfo","properties":{"height":"xsd:int","width":"xsd:int"}}, _self.DynamicData);
    _self.GuestListFileInfo = merge({"type":"GuestListFileInfo","properties":{"files":_self.GuestFileInfo,"remaining":"xsd:int"}}, _self.DynamicData);
    _self.NetDnsConfigInfo = merge({"type":"NetDnsConfigInfo","properties":{"dhcp":"xsd:boolean","domainName":"xsd:string","hostName":"xsd:string","ipAddress":"xsd:string[]","searchDomain":"xsd:string[]"}}, _self.DynamicData);
    _self.NetBIOSConfigInfo = merge({"type":"NetBIOSConfigInfo","properties":{"mode":"xsd:string"}}, _self.DynamicData);
    _self.GuestPosixFileAttributes = merge({"type":"GuestPosixFileAttributes","properties":{"groupId":"xsd:int","ownerId":"xsd:int","permissions":"xsd:long"}}, _self.GuestFileAttributes);
    _self.GuestProcessInfo = merge({"type":"GuestProcessInfo","properties":{"cmdLine":"xsd:string","endTime":"xsd:dateTime","exitCode":"xsd:int","name":"xsd:string","owner":"xsd:string","pid":"xsd:long","startTime":"xsd:dateTime"}}, _self.DynamicData);
    _self.GuestProgramSpec = merge({"type":"GuestProgramSpec","properties":{"arguments":"xsd:string","envVariables":"xsd:string[]","programPath":"xsd:string","workingDirectory":"xsd:string"}}, _self.DynamicData);
    _self.GuestWindowsFileAttributes = merge({"type":"GuestWindowsFileAttributes","properties":{"createTime":"xsd:dateTime","hidden":"xsd:boolean","readOnly":"xsd:boolean"}}, _self.GuestFileAttributes);
    _self.GuestWindowsProgramSpec = merge({"type":"GuestWindowsProgramSpec","properties":{"startMinimized":"xsd:boolean"}}, _self.GuestProgramSpec);
    _self.ReplicationVmProgressInfo = merge({"type":"ReplicationVmProgressInfo","properties":{"bytesToTransfer":"xsd:long","bytesTransferred":"xsd:long","checksumComparedBytes":"xsd:long","checksumTotalBytes":"xsd:long","progress":"xsd:int"}}, _self.DynamicData);
    _self.HostActiveDirectorySpec = merge({"type":"HostActiveDirectorySpec","properties":{"camServer":"xsd:string","domainName":"xsd:string","password":"xsd:string","thumbprint":"xsd:string","userName":"xsd:string"}}, _self.DynamicData);
    _self.HostAuthenticationStoreInfo = merge({"type":"HostAuthenticationStoreInfo","properties":{"enabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostAuthenticationStore = {"type":"HostAuthenticationStore","properties":{"info":_self.HostAuthenticationStoreInfo},"methods":{}};
    _self.HostBIOSInfo = merge({"type":"HostBIOSInfo","properties":{"biosVersion":"xsd:string","releaseDate":"xsd:dateTime"}}, _self.DynamicData);
    _self.HostBootDevice = merge({"type":"HostBootDevice","properties":{"description":"xsd:string","key":"xsd:string"}}, _self.DynamicData);
    _self.HostBootDeviceInfo = merge({"type":"HostBootDeviceInfo","properties":{"bootDevices":_self.HostBootDevice,"currentBootDeviceKey":"xsd:string"}}, _self.DynamicData);
    _self.HostCacheConfigurationInfo = merge({"type":"HostCacheConfigurationInfo","properties":{"key":_self.ManagedObjectReference,"swapSize":"xsd:long"}}, _self.DynamicData);
    _self.HostCacheConfigurationManager = {"type":"HostCacheConfigurationManager","properties":{"cacheConfigurationInfo":_self.HostCacheConfigurationInfo},"methods":{"ConfigureHostCache_Task":{"params":{"_this":"ManagedObjectReference","spec":"HostCacheConfigurationSpec"},"returns":"ManagedObjectReference"}}};
    _self.HostCacheConfigurationSpec = merge({"type":"HostCacheConfigurationSpec","properties":{"datastore":_self.ManagedObjectReference,"swapSize":"xsd:long"}}, _self.DynamicData);
    _self.HostCapability = merge({"type":"HostCapability","properties":{"accel3dSupported":"xsd:boolean","backgroundSnapshotsSupported":"xsd:boolean","cloneFromSnapshotSupported":"xsd:boolean","cpuMemoryResourceConfigurationSupported":"xsd:boolean","datastorePrincipalSupported":"xsd:boolean","deltaDiskBackingsSupported":"xsd:boolean","eightPlusHostVmfsSharedAccessSupported":"xsd:boolean","featureCapabilitiesSupported":"xsd:boolean","firewallIpRulesSupported":"xsd:boolean","ftCompatibilityIssues":"xsd:string[]","ftSupported":"xsd:boolean","hbrNicSelectionSupported":"xsd:boolean","highGuestMemSupported":"xsd:boolean","interVMCommunicationThroughVMCISupported":"xsd:boolean","ipmiSupported":"xsd:boolean","iscsiSupported":"xsd:boolean","latencySensitivitySupported":"xsd:boolean","localSwapDatastoreSupported":"xsd:boolean","loginBySSLThumbprintSupported":"xsd:boolean","maintenanceModeSupported":"xsd:boolean","maxHostRunningVms":"xsd:int","maxHostSupportedVcpus":"xsd:int","maxRegisteredVMs":"xsd:int","maxRunningVMs":"xsd:int","maxSupportedVcpus":"xsd:int","maxSupportedVMs":"xsd:int","multipleNetworkStackInstanceSupported":"xsd:boolean","nestedHVSupported":"xsd:boolean","nfsSupported":"xsd:boolean","nicTeamingSupported":"xsd:boolean","perVMNetworkTrafficShapingSupported":"xsd:boolean","perVmSwapFiles":"xsd:boolean","preAssignedPCIUnitNumbersSupported":"xsd:boolean","rebootSupported":"xsd:boolean","recordReplaySupported":"xsd:boolean","recursiveResourcePoolsSupported":"xsd:boolean","reliableMemoryAware":"xsd:boolean","replayCompatibilityIssues":"xsd:string[]","replayUnsupportedReason":"xsd:string","restrictedSnapshotRelocateSupported":"xsd:boolean","sanSupported":"xsd:boolean","scaledScreenshotSupported":"xsd:boolean","scheduledHardwareUpgradeSupported":"xsd:boolean","screenshotSupported":"xsd:boolean","servicePackageInfoSupported":"xsd:boolean","shutdownSupported":"xsd:boolean","snapshotRelayoutSupported":"xsd:boolean","standbySupported":"xsd:boolean","storageIORMSupported":"xsd:boolean","storagePolicySupported":"xsd:boolean","storageVMotionSupported":"xsd:boolean","supportedCpuFeature":_self.HostCpuIdInfo,"supportedVmfsMajorVersion":"xsd:int[]","suspendedRelocateSupported":"xsd:boolean","tpmSupported":"xsd:boolean","unsharedSwapVMotionSupported":"xsd:boolean","vFlashSupported":"xsd:boolean","virtualExecUsageSupported":"xsd:boolean","vlanTaggingSupported":"xsd:boolean","vmDirectPathGen2Supported":"xsd:boolean","vmDirectPathGen2UnsupportedReason":"xsd:string[]","vmDirectPathGen2UnsupportedReasonExtended":"xsd:string","vmfsDatastoreMountCapable":"xsd:boolean","vmotionAcrossNetworkSupported":"xsd:boolean","vmotionSupported":"xsd:boolean","vmotionWithStorageVMotionSupported":"xsd:boolean","vPMCSupported":"xsd:boolean","vsanSupported":"xsd:boolean","vStorageCapable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostConfigChange = merge({"type":"HostConfigChange"}, _self.DynamicData);
    _self.HostNetCapabilities = merge({"type":"HostNetCapabilities","properties":{"canSetPhysicalNicLinkSpeed":"xsd:boolean","dhcpOnVnicSupported":"xsd:boolean","dnsConfigSupported":"xsd:boolean","ipRouteConfigSupported":"xsd:boolean","ipV6Supported":"xsd:boolean","maxPortGroupsPerVswitch":"xsd:int","nicTeamingPolicy":"xsd:string[]","supportsNetworkHints":"xsd:boolean","supportsNicTeaming":"xsd:boolean","supportsVlan":"xsd:boolean","usesServiceConsoleNic":"xsd:boolean","vnicConfigSupported":"xsd:boolean","vswitchConfigSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.ServiceConsoleReservationInfo = merge({"type":"ServiceConsoleReservationInfo","properties":{"serviceConsoleReserved":"xsd:long","serviceConsoleReservedCfg":"xsd:long","unreserved":"xsd:long"}}, _self.DynamicData);
    _self.HostDatastoreSystemCapabilities = merge({"type":"HostDatastoreSystemCapabilities","properties":{"localDatastoreSupported":"xsd:boolean","nfsMountCreationRequired":"xsd:boolean","nfsMountCreationSupported":"xsd:boolean","vmfsExtentExpansionSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.HostFeatureVersionInfo = merge({"type":"HostFeatureVersionInfo","properties":{"key":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.HostFlagInfo = merge({"type":"HostFlagInfo","properties":{"backgroundSnapshotsEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostGraphicsInfo = merge({"type":"HostGraphicsInfo","properties":{"deviceName":"xsd:string","graphicsType":"xsd:string","memorySizeInKB":"xsd:long","pciId":"xsd:string","vendorName":"xsd:string","vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostHyperThreadScheduleInfo = merge({"type":"HostHyperThreadScheduleInfo","properties":{"active":"xsd:boolean","available":"xsd:boolean","config":"xsd:boolean"}}, _self.DynamicData);
    _self.HostIpmiInfo = merge({"type":"HostIpmiInfo","properties":{"bmcIpAddress":"xsd:string","bmcMacAddress":"xsd:string","login":"xsd:string","password":"xsd:string"}}, _self.DynamicData);
    _self.HostNetOffloadCapabilities = merge({"type":"HostNetOffloadCapabilities","properties":{"csumOffload":"xsd:boolean","tcpSegmentation":"xsd:boolean","zeroCopyXmit":"xsd:boolean"}}, _self.DynamicData);
    _self.HostPciPassthruInfo = merge({"type":"HostPciPassthruInfo","properties":{"dependentDevice":"xsd:string","id":"xsd:string","passthruActive":"xsd:boolean","passthruCapable":"xsd:boolean","passthruEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostSslThumbprintInfo = merge({"type":"HostSslThumbprintInfo","properties":{"ownerTag":"xsd:string","principal":"xsd:string","sslThumbprints":"xsd:string[]"}}, _self.DynamicData);
    _self.VirtualMachineMemoryReservationInfo = merge({"type":"VirtualMachineMemoryReservationInfo","properties":{"allocationPolicy":"xsd:string","virtualMachineMax":"xsd:long","virtualMachineMin":"xsd:long","virtualMachineReserved":"xsd:long"}}, _self.DynamicData);
    _self.HostConfigManager = merge({"type":"HostConfigManager","properties":{"advancedOption":_self.ManagedObjectReference,"authenticationManager":_self.ManagedObjectReference,"autoStartManager":_self.ManagedObjectReference,"bootDeviceSystem":_self.ManagedObjectReference,"cacheConfigurationManager":_self.ManagedObjectReference,"cpuScheduler":_self.ManagedObjectReference,"datastoreSystem":_self.ManagedObjectReference,"dateTimeSystem":_self.ManagedObjectReference,"diagnosticSystem":_self.ManagedObjectReference,"esxAgentHostManager":_self.ManagedObjectReference,"firewallSystem":_self.ManagedObjectReference,"firmwareSystem":_self.ManagedObjectReference,"graphicsManager":_self.ManagedObjectReference,"healthStatusSystem":_self.ManagedObjectReference,"imageConfigManager":_self.ManagedObjectReference,"iscsiManager":_self.ManagedObjectReference,"kernelModuleSystem":_self.ManagedObjectReference,"licenseManager":_self.ManagedObjectReference,"memoryManager":_self.ManagedObjectReference,"networkSystem":_self.ManagedObjectReference,"patchManager":_self.ManagedObjectReference,"pciPassthruSystem":_self.ManagedObjectReference,"powerSystem":_self.ManagedObjectReference,"serviceSystem":_self.ManagedObjectReference,"snmpSystem":_self.ManagedObjectReference,"storageSystem":_self.ManagedObjectReference,"vFlashManager":_self.ManagedObjectReference,"virtualNicManager":_self.ManagedObjectReference,"vmotionSystem":_self.ManagedObjectReference,"vsanInternalSystem":_self.ManagedObjectReference,"vsanSystem":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostMemorySpec = merge({"type":"HostMemorySpec","properties":{"serviceConsoleReservation":"xsd:long"}}, _self.DynamicData);
    _self.HostServiceConfig = merge({"type":"HostServiceConfig","properties":{"serviceId":"xsd:string","startupPolicy":"xsd:string"}}, _self.DynamicData);
    _self.NetworkSummary = merge({"type":"NetworkSummary","properties":{"accessible":"xsd:boolean","ipPoolId":"xsd:int","ipPoolName":"xsd:string","name":"xsd:string","network":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostConnectSpec = merge({"type":"HostConnectSpec","properties":{"force":"xsd:boolean","hostName":"xsd:string","managementIp":"xsd:string","password":"xsd:string","port":"xsd:int","sslThumbprint":"xsd:string","userName":"xsd:string","vimAccountName":"xsd:string","vimAccountPassword":"xsd:string","vmFolder":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostCpuInfo = merge({"type":"HostCpuInfo","properties":{"hz":"xsd:long","numCpuCores":"xsd:short","numCpuPackages":"xsd:short","numCpuThreads":"xsd:short"}}, _self.DynamicData);
    _self.HostCpuPackage = merge({"type":"HostCpuPackage","properties":{"busHz":"xsd:long","cpuFeature":_self.HostCpuIdInfo,"description":"xsd:string","hz":"xsd:long","index":"xsd:short","threadId":"xsd:short[]","vendor":"xsd:string"}}, _self.DynamicData);
    _self.HostCpuPowerManagementInfo = merge({"type":"HostCpuPowerManagementInfo","properties":{"currentPolicy":"xsd:string","hardwareSupport":"xsd:string"}}, _self.DynamicData);
    _self.HostDatastoreBrowser = {"type":"HostDatastoreBrowser","properties":{"datastore":_self.ManagedObjectReference,"supportedType":_self.FileQuery},"methods":{"DeleteFile":{"params":{"_this":"ManagedObjectReference","datastorePath":"xsd:string"},"returns":null},"SearchDatastore_Task":{"params":{"_this":"ManagedObjectReference","datastorePath":"xsd:string","searchSpec":"HostDatastoreBrowserSearchSpec"},"returns":"ManagedObjectReference"},"SearchDatastoreSubFolders_Task":{"params":{"_this":"ManagedObjectReference","datastorePath":"xsd:string","searchSpec":"HostDatastoreBrowserSearchSpec"},"returns":"ManagedObjectReference"}}};
    _self.HostDatastoreBrowserSearchResults = merge({"type":"HostDatastoreBrowserSearchResults","properties":{"datastore":_self.ManagedObjectReference,"file":_self.FileInfo,"folderPath":"xsd:string"}}, _self.DynamicData);
    _self.HostDatastoreBrowserSearchSpec = merge({"type":"HostDatastoreBrowserSearchSpec","properties":{"details":_self.FileQueryFlags,"matchPattern":"xsd:string[]","query":_self.FileQuery,"searchCaseInsensitive":"xsd:boolean","sortFoldersFirst":"xsd:boolean"}}, _self.DynamicData);
    _self.HostDatastoreSystem = {"type":"HostDatastoreSystem","properties":{"capabilities":_self.HostDatastoreSystemCapabilities,"datastore":_self.ManagedObjectReference},"methods":{"ConfigureDatastorePrincipal":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string","password":"xsd:string"},"returns":null},"CreateLocalDatastore":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","path":"xsd:string"},"returns":"ManagedObjectReference"},"CreateNasDatastore":{"params":{"_this":"ManagedObjectReference","spec":"HostNasVolumeSpec"},"returns":"ManagedObjectReference"},"CreateVmfsDatastore":{"params":{"_this":"ManagedObjectReference","spec":"VmfsDatastoreCreateSpec"},"returns":"ManagedObjectReference"},"ExpandVmfsDatastore":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore","spec":"VmfsDatastoreExpandSpec"},"returns":"ManagedObjectReference"},"ExtendVmfsDatastore":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore","spec":"VmfsDatastoreExtendSpec"},"returns":"ManagedObjectReference"},"QueryAvailableDisksForVmfs":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore"},"returns":"HostScsiDisk"},"QueryUnresolvedVmfsVolumes":{"params":{"_this":"ManagedObjectReference"},"returns":"HostUnresolvedVmfsVolume"},"QueryVmfsDatastoreCreateOptions":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string","vmfsMajorVersion":"xsd:int"},"returns":"VmfsDatastoreOption"},"QueryVmfsDatastoreExpandOptions":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore"},"returns":"VmfsDatastoreOption"},"QueryVmfsDatastoreExtendOptions":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore","devicePath":"xsd:string","suppressExpandCandidates":"xsd:boolean"},"returns":"VmfsDatastoreOption"},"RemoveDatastore":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore"},"returns":null},"ResignatureUnresolvedVmfsVolume_Task":{"params":{"_this":"ManagedObjectReference","resolutionSpec":"HostUnresolvedVmfsResignatureSpec"},"returns":"ManagedObjectReference"},"UpdateLocalSwapDatastore":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore"},"returns":null}}};
    _self.HostNtpConfig = merge({"type":"HostNtpConfig","properties":{"server":"xsd:string[]"}}, _self.DynamicData);
    _self.HostDateTimeSystemTimeZone = merge({"type":"HostDateTimeSystemTimeZone","properties":{"description":"xsd:string","gmtOffset":"xsd:int","key":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.HostDevice = merge({"type":"HostDevice","properties":{"deviceName":"xsd:string","deviceType":"xsd:string"}}, _self.DynamicData);
    _self.HostDhcpServiceSpec = merge({"type":"HostDhcpServiceSpec","properties":{"defaultLeaseDuration":"xsd:int","ipSubnetAddr":"xsd:string","ipSubnetMask":"xsd:string","leaseBeginIp":"xsd:string","leaseEndIp":"xsd:string","maxLeaseDuration":"xsd:int","unlimitedLease":"xsd:boolean","virtualSwitch":"xsd:string"}}, _self.DynamicData);
    _self.HostDhcpServiceConfig = merge({"type":"HostDhcpServiceConfig","properties":{"changeOperation":"xsd:string","key":"xsd:string","spec":_self.HostDhcpServiceSpec}}, _self.DynamicData);
    _self.HostScsiDiskPartition = merge({"type":"HostScsiDiskPartition","properties":{"diskName":"xsd:string","partition":"xsd:int"}}, _self.DynamicData);
    _self.HostDigestInfo = merge({"type":"HostDigestInfo","properties":{"digestMethod":"xsd:string","digestValue":"xsd:byte[]","objectName":"xsd:string"}}, _self.DynamicData);
    _self.HostDirectoryStore = merge({"type":"HostDirectoryStore","methods":{}}, _self.HostAuthenticationStore);
    _self.HostDirectoryStoreInfo = merge({"type":"HostDirectoryStoreInfo"}, _self.HostAuthenticationStoreInfo);
    _self.HostDiskDimensions = merge({"type":"HostDiskDimensions"}, _self.DynamicData);
    _self.HostDiskDimensionsChs = merge({"type":"HostDiskDimensionsChs","properties":{"cylinder":"xsd:long","head":"xsd:int","sector":"xsd:int"}}, _self.DynamicData);
    _self.HostDiskDimensionsLba = merge({"type":"HostDiskDimensionsLba","properties":{"block":"xsd:long","blockSize":"xsd:int"}}, _self.DynamicData);
    _self.HostDiskMappingPartitionInfo = merge({"type":"HostDiskMappingPartitionInfo","properties":{"capacityInKb":"xsd:long","fileSystem":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.HostDiskMappingPartitionOption = merge({"type":"HostDiskMappingPartitionOption","properties":{"capacityInKb":"xsd:long","fileSystem":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.HostDiskPartitionAttributes = merge({"type":"HostDiskPartitionAttributes","properties":{"attributes":"xsd:byte","endSector":"xsd:long","guid":"xsd:string","logical":"xsd:boolean","partition":"xsd:int","partitionAlignment":"xsd:long","startSector":"xsd:long","type":"xsd:string"}}, _self.DynamicData);
    _self.HostDiskPartitionBlockRange = merge({"type":"HostDiskPartitionBlockRange","properties":{"end":_self.HostDiskDimensionsLba,"partition":"xsd:int","start":_self.HostDiskDimensionsLba,"type":"xsd:string"}}, _self.DynamicData);
    _self.HostDnsConfig = merge({"type":"HostDnsConfig","properties":{"address":"xsd:string[]","dhcp":"xsd:boolean","domainName":"xsd:string","hostName":"xsd:string","searchDomain":"xsd:string[]","virtualNicDevice":"xsd:string"}}, _self.DynamicData);
    _self.Permission = merge({"type":"Permission","properties":{"entity":_self.ManagedObjectReference,"group":"xsd:boolean","principal":"xsd:string","propagate":"xsd:boolean","roleId":"xsd:int"}}, _self.DynamicData);
    _self.HostEsxAgentHostManagerConfigInfo = merge({"type":"HostEsxAgentHostManagerConfigInfo","properties":{"agentVmDatastore":_self.ManagedObjectReference,"agentVmNetwork":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostFibreChannelOverEthernetHbaLinkInfo = merge({"type":"HostFibreChannelOverEthernetHbaLinkInfo","properties":{"fcfMac":"xsd:string","vlanId":"xsd:int","vnportMac":"xsd:string"}}, _self.DynamicData);
    _self.HostFileAccess = merge({"type":"HostFileAccess","properties":{"what":"xsd:string","who":"xsd:string"}}, _self.DynamicData);
    _self.HostFileSystemVolume = merge({"type":"HostFileSystemVolume","properties":{"capacity":"xsd:long","name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.HostFirewallDefaultPolicy = merge({"type":"HostFirewallDefaultPolicy","properties":{"incomingBlocked":"xsd:boolean","outgoingBlocked":"xsd:boolean"}}, _self.DynamicData);
    _self.HostFirewallRule = merge({"type":"HostFirewallRule","properties":{"direction":_self.HostFirewallRuleDirection,"endPort":"xsd:int","port":"xsd:int","portType":_self.HostFirewallRulePortType,"protocol":"xsd:string"}}, _self.DynamicData);
    _self.HostFirewallRulesetIpNetwork = merge({"type":"HostFirewallRulesetIpNetwork","properties":{"network":"xsd:string","prefixLength":"xsd:int"}}, _self.DynamicData);
    _self.HostForceMountedInfo = merge({"type":"HostForceMountedInfo","properties":{"mounted":"xsd:boolean","persist":"xsd:boolean"}}, _self.DynamicData);
    _self.HostPciDevice = merge({"type":"HostPciDevice","properties":{"bus":"xsd:byte","classId":"xsd:short","deviceId":"xsd:short","deviceName":"xsd:string","function":"xsd:byte","id":"xsd:string","parentBridge":"xsd:string","slot":"xsd:byte","subDeviceId":"xsd:short","subVendorId":"xsd:short","vendorId":"xsd:short","vendorName":"xsd:string"}}, _self.DynamicData);
    _self.HostReliableMemoryInfo = merge({"type":"HostReliableMemoryInfo","properties":{"memorySize":"xsd:long"}}, _self.DynamicData);
    _self.HostHostBusAdapter = merge({"type":"HostHostBusAdapter","properties":{"bus":"xsd:int","device":"xsd:string","driver":"xsd:string","key":"xsd:string","model":"xsd:string","pci":"xsd:string","status":"xsd:string"}}, _self.DynamicData);
    _self.HostImageProfileSummary = merge({"type":"HostImageProfileSummary","properties":{"name":"xsd:string","vendor":"xsd:string"}}, _self.DynamicData);
    _self.HostInternetScsiHbaAuthenticationCapabilities = merge({"type":"HostInternetScsiHbaAuthenticationCapabilities","properties":{"chapAuthSettable":"xsd:boolean","krb5AuthSettable":"xsd:boolean","mutualChapSettable":"xsd:boolean","spkmAuthSettable":"xsd:boolean","srpAuthSettable":"xsd:boolean","targetChapSettable":"xsd:boolean","targetMutualChapSettable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaAuthenticationProperties = merge({"type":"HostInternetScsiHbaAuthenticationProperties","properties":{"chapAuthEnabled":"xsd:boolean","chapAuthenticationType":"xsd:string","chapInherited":"xsd:boolean","chapName":"xsd:string","chapSecret":"xsd:string","mutualChapAuthenticationType":"xsd:string","mutualChapInherited":"xsd:boolean","mutualChapName":"xsd:string","mutualChapSecret":"xsd:string"}}, _self.DynamicData);
    _self.HostInternetScsiHbaDigestCapabilities = merge({"type":"HostInternetScsiHbaDigestCapabilities","properties":{"dataDigestSettable":"xsd:boolean","headerDigestSettable":"xsd:boolean","targetDataDigestSettable":"xsd:boolean","targetHeaderDigestSettable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaDigestProperties = merge({"type":"HostInternetScsiHbaDigestProperties","properties":{"dataDigestInherited":"xsd:boolean","dataDigestType":"xsd:string","headerDigestInherited":"xsd:boolean","headerDigestType":"xsd:string"}}, _self.DynamicData);
    _self.HostInternetScsiHbaDiscoveryCapabilities = merge({"type":"HostInternetScsiHbaDiscoveryCapabilities","properties":{"iSnsDiscoverySettable":"xsd:boolean","sendTargetsDiscoverySettable":"xsd:boolean","slpDiscoverySettable":"xsd:boolean","staticTargetDiscoverySettable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaDiscoveryProperties = merge({"type":"HostInternetScsiHbaDiscoveryProperties","properties":{"iSnsDiscoveryEnabled":"xsd:boolean","iSnsDiscoveryMethod":"xsd:string","iSnsHost":"xsd:string","sendTargetsDiscoveryEnabled":"xsd:boolean","slpDiscoveryEnabled":"xsd:boolean","slpDiscoveryMethod":"xsd:string","slpHost":"xsd:string","staticTargetDiscoveryEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaIPCapabilities = merge({"type":"HostInternetScsiHbaIPCapabilities","properties":{"addressSettable":"xsd:boolean","alternateDnsServerAddressSettable":"xsd:boolean","arpRedirectSettable":"xsd:boolean","defaultGatewaySettable":"xsd:boolean","hostNameAsTargetAddress":"xsd:boolean","ipConfigurationMethodSettable":"xsd:boolean","ipv6Supported":"xsd:boolean","mtuSettable":"xsd:boolean","nameAliasSettable":"xsd:boolean","primaryDnsServerAddressSettable":"xsd:boolean","subnetMaskSettable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaIPProperties = merge({"type":"HostInternetScsiHbaIPProperties","properties":{"address":"xsd:string","alternateDnsServerAddress":"xsd:string","arpRedirectEnabled":"xsd:boolean","defaultGateway":"xsd:string","dhcpConfigurationEnabled":"xsd:boolean","ipv6Address":"xsd:string","ipv6DefaultGateway":"xsd:string","ipv6SubnetMask":"xsd:string","jumboFramesEnabled":"xsd:boolean","mac":"xsd:string","mtu":"xsd:int","primaryDnsServerAddress":"xsd:string","subnetMask":"xsd:string"}}, _self.DynamicData);
    _self.HostIpConfigIpV6Address = merge({"type":"HostIpConfigIpV6Address","properties":{"dadState":"xsd:string","ipAddress":"xsd:string","lifetime":"xsd:dateTime","operation":"xsd:string","origin":"xsd:string","prefixLength":"xsd:int"}}, _self.DynamicData);
    _self.HostIpRouteConfig = merge({"type":"HostIpRouteConfig","properties":{"defaultGateway":"xsd:string","gatewayDevice":"xsd:string","ipV6DefaultGateway":"xsd:string","ipV6GatewayDevice":"xsd:string"}}, _self.DynamicData);
    _self.HostIpRouteEntry = merge({"type":"HostIpRouteEntry","properties":{"deviceName":"xsd:string","gateway":"xsd:string","network":"xsd:string","prefixLength":"xsd:int"}}, _self.DynamicData);
    _self.HostIpRouteOp = merge({"type":"HostIpRouteOp","properties":{"changeOperation":"xsd:string","route":_self.HostIpRouteEntry}}, _self.DynamicData);
    _self.HostIpRouteTableConfig = merge({"type":"HostIpRouteTableConfig","properties":{"ipRoute":_self.HostIpRouteOp,"ipv6Route":_self.HostIpRouteOp}}, _self.DynamicData);
    _self.HostIpRouteTableInfo = merge({"type":"HostIpRouteTableInfo","properties":{"ipRoute":_self.HostIpRouteEntry,"ipv6Route":_self.HostIpRouteEntry}}, _self.DynamicData);
    _self.HostLicensableResourceInfo = merge({"type":"HostLicensableResourceInfo","properties":{"resource":_self.KeyAnyValue}}, _self.DynamicData);
    _self.LicenseManagerEvaluationInfo = merge({"type":"LicenseManagerEvaluationInfo","properties":{"properties":_self.KeyAnyValue}}, _self.DynamicData);
    _self.LicenseManagerLicenseInfo = merge({"type":"LicenseManagerLicenseInfo","properties":{"costUnit":"xsd:string","editionKey":"xsd:string","labels":_self.KeyValue,"licenseKey":"xsd:string","name":"xsd:string","properties":_self.KeyAnyValue,"total":"xsd:int","used":"xsd:int"}}, _self.DynamicData);
    _self.LicenseSource = merge({"type":"LicenseSource"}, _self.DynamicData);
    _self.HostListSummaryQuickStats = merge({"type":"HostListSummaryQuickStats","properties":{"distributedCpuFairness":"xsd:int","distributedMemoryFairness":"xsd:int","overallCpuUsage":"xsd:int","overallMemoryUsage":"xsd:int","uptime":"xsd:int"}}, _self.DynamicData);
    _self.HostLocalAuthentication = merge({"type":"HostLocalAuthentication","methods":{}}, _self.HostAuthenticationStore);
    _self.HostLocalAuthenticationInfo = merge({"type":"HostLocalAuthenticationInfo"}, _self.HostAuthenticationStoreInfo);
    _self.HostLocalFileSystemVolume = merge({"type":"HostLocalFileSystemVolume","properties":{"device":"xsd:string"}}, _self.HostFileSystemVolume);
    _self.HostLocalFileSystemVolumeSpec = merge({"type":"HostLocalFileSystemVolumeSpec","properties":{"device":"xsd:string","localPath":"xsd:string"}}, _self.DynamicData);
    _self.HostLowLevelProvisioningManagerDiskLayoutSpec = merge({"type":"HostLowLevelProvisioningManagerDiskLayoutSpec","properties":{"busNumber":"xsd:int","controllerType":"xsd:string","dstFilename":"xsd:string","srcFilename":"xsd:string","unitNumber":"xsd:int"}}, _self.DynamicData);
    _self.HostLowLevelProvisioningManagerSnapshotLayoutSpec = merge({"type":"HostLowLevelProvisioningManagerSnapshotLayoutSpec","properties":{"disk":_self.HostLowLevelProvisioningManagerDiskLayoutSpec,"dstFilename":"xsd:string","id":"xsd:int","srcFilename":"xsd:string"}}, _self.DynamicData);
    _self.HostLowLevelProvisioningManagerVmMigrationStatus = merge({"type":"HostLowLevelProvisioningManagerVmMigrationStatus","properties":{"consideredSuccessful":"xsd:boolean","migrationId":"xsd:long","source":"xsd:boolean","type":"xsd:string"}}, _self.DynamicData);
    _self.HostLowLevelProvisioningManagerVmRecoveryInfo = merge({"type":"HostLowLevelProvisioningManagerVmRecoveryInfo","properties":{"biosUUID":"xsd:string","ftInfo":_self.FaultToleranceConfigInfo,"instanceUUID":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.VsanHostDecommissionMode = merge({"type":"VsanHostDecommissionMode","properties":{"objectAction":"xsd:string"}}, _self.DynamicData);
    _self.HostMultipathInfoLogicalUnitPolicy = merge({"type":"HostMultipathInfoLogicalUnitPolicy","properties":{"policy":"xsd:string"}}, _self.DynamicData);
    _self.HostMultipathInfoLogicalUnitStorageArrayTypePolicy = merge({"type":"HostMultipathInfoLogicalUnitStorageArrayTypePolicy","properties":{"policy":"xsd:string"}}, _self.DynamicData);
    _self.HostTargetTransport = merge({"type":"HostTargetTransport"}, _self.DynamicData);
    _self.HostMultipathStateInfoPath = merge({"type":"HostMultipathStateInfoPath","properties":{"name":"xsd:string","pathState":"xsd:string"}}, _self.DynamicData);
    _self.HostNasVolume = merge({"type":"HostNasVolume","properties":{"remoteHost":"xsd:string","remotePath":"xsd:string","userName":"xsd:string"}}, _self.HostFileSystemVolume);
    _self.HostNasVolumeSpec = merge({"type":"HostNasVolumeSpec","properties":{"accessMode":"xsd:string","localPath":"xsd:string","password":"xsd:string","remoteHost":"xsd:string","remotePath":"xsd:string","type":"xsd:string","userName":"xsd:string"}}, _self.DynamicData);
    _self.HostNatServiceNameServiceSpec = merge({"type":"HostNatServiceNameServiceSpec","properties":{"dnsAutoDetect":"xsd:boolean","dnsNameServer":"xsd:string[]","dnsPolicy":"xsd:string","dnsRetries":"xsd:int","dnsTimeout":"xsd:int","nbdsTimeout":"xsd:int","nbnsRetries":"xsd:int","nbnsTimeout":"xsd:int"}}, _self.DynamicData);
    _self.HostNatServicePortForwardSpec = merge({"type":"HostNatServicePortForwardSpec","properties":{"guestIpAddress":"xsd:string","guestPort":"xsd:int","hostPort":"xsd:int","name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.HostNetStackInstance = merge({"type":"HostNetStackInstance","properties":{"congestionControlAlgorithm":"xsd:string","dnsConfig":_self.HostDnsConfig,"ipRouteConfig":_self.HostIpRouteConfig,"ipV6Enabled":"xsd:boolean","key":"xsd:string","name":"xsd:string","requestedMaxNumberOfConnections":"xsd:int","routeTableConfig":_self.HostIpRouteTableConfig}}, _self.DynamicData);
    _self.HostNetworkConfigNetStackSpec = merge({"type":"HostNetworkConfigNetStackSpec","properties":{"netStackInstance":_self.HostNetStackInstance,"operation":"xsd:string"}}, _self.DynamicData);
    _self.HostNetworkConfigResult = merge({"type":"HostNetworkConfigResult","properties":{"consoleVnicDevice":"xsd:string[]","vnicDevice":"xsd:string[]"}}, _self.DynamicData);
    _self.HostOpaqueNetworkInfo = merge({"type":"HostOpaqueNetworkInfo","properties":{"opaqueNetworkId":"xsd:string","opaqueNetworkName":"xsd:string","opaqueNetworkType":"xsd:string"}}, _self.DynamicData);
    _self.HostOpaqueSwitch = merge({"type":"HostOpaqueSwitch","properties":{"key":"xsd:string","name":"xsd:string","pnic":"xsd:string[]"}}, _self.DynamicData);
    _self.HostNetworkSecurityPolicy = merge({"type":"HostNetworkSecurityPolicy","properties":{"allowPromiscuous":"xsd:boolean","forgedTransmits":"xsd:boolean","macChanges":"xsd:boolean"}}, _self.DynamicData);
    _self.HostNetworkTrafficShapingPolicy = merge({"type":"HostNetworkTrafficShapingPolicy","properties":{"averageBandwidth":"xsd:long","burstSize":"xsd:long","enabled":"xsd:boolean","peakBandwidth":"xsd:long"}}, _self.DynamicData);
    _self.HostNicFailureCriteria = merge({"type":"HostNicFailureCriteria","properties":{"checkBeacon":"xsd:boolean","checkDuplex":"xsd:boolean","checkErrorPercent":"xsd:boolean","checkSpeed":"xsd:string","fullDuplex":"xsd:boolean","percentage":"xsd:int","speed":"xsd:int"}}, _self.DynamicData);
    _self.HostNicOrderPolicy = merge({"type":"HostNicOrderPolicy","properties":{"activeNic":"xsd:string[]","standbyNic":"xsd:string[]"}}, _self.DynamicData);
    _self.HostNumaNode = merge({"type":"HostNumaNode","properties":{"cpuID":"xsd:short[]","memoryRangeBegin":"xsd:long","memoryRangeLength":"xsd:long","typeId":"xsd:byte"}}, _self.DynamicData);
    _self.HostParallelScsiHba = merge({"type":"HostParallelScsiHba"}, _self.HostHostBusAdapter);
    _self.HostParallelScsiTargetTransport = merge({"type":"HostParallelScsiTargetTransport"}, _self.HostTargetTransport);
    _self.HostPatchManagerLocator = merge({"type":"HostPatchManagerLocator","properties":{"proxy":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.HostPatchManagerPatchManagerOperationSpec = merge({"type":"HostPatchManagerPatchManagerOperationSpec","properties":{"cmdOption":"xsd:string","password":"xsd:string","port":"xsd:int","proxy":"xsd:string","userName":"xsd:string"}}, _self.DynamicData);
    _self.HostPatchManagerStatusPrerequisitePatch = merge({"type":"HostPatchManagerStatusPrerequisitePatch","properties":{"id":"xsd:string","installState":"xsd:string[]"}}, _self.DynamicData);
    _self.HostPciPassthruConfig = merge({"type":"HostPciPassthruConfig","properties":{"id":"xsd:string","passthruEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostPlugStoreTopologyAdapter = merge({"type":"HostPlugStoreTopologyAdapter","properties":{"adapter":"xsd:string","key":"xsd:string","path":"xsd:string[]"}}, _self.DynamicData);
    _self.HostPlugStoreTopologyDevice = merge({"type":"HostPlugStoreTopologyDevice","properties":{"key":"xsd:string","lun":"xsd:string","path":"xsd:string[]"}}, _self.DynamicData);
    _self.HostPlugStoreTopologyPath = merge({"type":"HostPlugStoreTopologyPath","properties":{"adapter":"xsd:string","channelNumber":"xsd:int","device":"xsd:string","key":"xsd:string","lunNumber":"xsd:int","name":"xsd:string","target":"xsd:string","targetNumber":"xsd:int"}}, _self.DynamicData);
    _self.HostPlugStoreTopologyPlugin = merge({"type":"HostPlugStoreTopologyPlugin","properties":{"claimedPath":"xsd:string[]","device":"xsd:string[]","key":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.HostPlugStoreTopologyTarget = merge({"type":"HostPlugStoreTopologyTarget","properties":{"key":"xsd:string","transport":_self.HostTargetTransport}}, _self.DynamicData);
    _self.HostPortGroupPort = merge({"type":"HostPortGroupPort","properties":{"key":"xsd:string","mac":"xsd:string[]","type":"xsd:string"}}, _self.DynamicData);
    _self.HostPowerPolicy = merge({"type":"HostPowerPolicy","properties":{"description":"xsd:string","key":"xsd:int","name":"xsd:string","shortName":"xsd:string"}}, _self.DynamicData);
    _self.HostProfileManager = merge({"type":"HostProfileManager","methods":{"ApplyHostConfig_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","configSpec":"HostConfigSpec","userInput":"ProfileDeferredPolicyOptionParameter"},"returns":"ManagedObjectReference"},"CheckAnswerFileStatus_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"CreateDefaultProfile":{"params":{"_this":"ManagedObjectReference","profileType":"xsd:string","profileTypeName":"xsd:string","profile":"ManagedObjectReferencetoaProfile"},"returns":"ApplyProfile"},"ExportAnswerFile_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"GenerateConfigTaskList":{"params":{"_this":"ManagedObjectReference","configSpec":"HostConfigSpec","host":"ManagedObjectReferencetoaHostSystem"},"returns":"HostProfileManagerConfigTaskList"},"GenerateHostProfileTaskList_Task":{"params":{"_this":"ManagedObjectReference","configSpec":"HostConfigSpec","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"QueryAnswerFileStatus":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"AnswerFileStatusResult"},"QueryHostProfileMetadata":{"params":{"_this":"ManagedObjectReference","profileName":"xsd:string","profile":"ManagedObjectReferencetoaProfile"},"returns":"ProfileMetadata"},"QueryProfileStructure":{"params":{"_this":"ManagedObjectReference","profile":"ManagedObjectReferencetoaProfile"},"returns":"ProfileProfileStructure"},"RetrieveAnswerFile":{"params":{"_this":"ManagedObjectReference","hostP":"ManagedObjectReferencetoaHostSystem"},"returns":"AnswerFile"},"RetrieveAnswerFileForProfile":{"params":{"_this":"ManagedObjectReference","hostP":"ManagedObjectReferencetoaHostSystem","applyProfile":"HostApplyProfile"},"returns":"AnswerFile"},"UpdateAnswerFile_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","configSpec":"AnswerFileCreateSpec"},"returns":"ManagedObjectReference"}}}, _self.ProfileManager);
    _self.HostProxySwitchHostLagConfig = merge({"type":"HostProxySwitchHostLagConfig","properties":{"lagKey":"xsd:string","lagName":"xsd:string","uplinkPort":_self.KeyValue}}, _self.DynamicData);
    _self.HostTpmDigestInfo = merge({"type":"HostTpmDigestInfo","properties":{"pcrNumber":"xsd:int"}}, _self.HostDigestInfo);
    _self.HostVFlashManagerVFlashResourceRunTimeInfo = merge({"type":"HostVFlashManagerVFlashResourceRunTimeInfo","properties":{"accessible":"xsd:boolean","capacity":"xsd:long","capacityForVmCache":"xsd:long","freeForVmCache":"xsd:long","usage":"xsd:long"}}, _self.DynamicData);
    _self.HostRuntimeInfoNetStackInstanceRuntimeInfo = merge({"type":"HostRuntimeInfoNetStackInstanceRuntimeInfo","properties":{"currentIpV6Enabled":"xsd:boolean","maxNumberOfConnections":"xsd:int","netStackInstanceKey":"xsd:string","state":"xsd:string","vmknicKeys":"xsd:string[]"}}, _self.DynamicData);
    _self.HostScsiTopologyLun = merge({"type":"HostScsiTopologyLun","properties":{"key":"xsd:string","lun":"xsd:int","scsiLun":"xsd:string"}}, _self.DynamicData);
    _self.HostServiceSourcePackage = merge({"type":"HostServiceSourcePackage","properties":{"description":"xsd:string","sourcePackageName":"xsd:string"}}, _self.DynamicData);
    _self.HostServiceTicket = merge({"type":"HostServiceTicket","properties":{"host":"xsd:string","port":"xsd:int","service":"xsd:string","serviceVersion":"xsd:string","sessionId":"xsd:string","sslThumbprint":"xsd:string"}}, _self.DynamicData);
    _self.HostSnmpDestination = merge({"type":"HostSnmpDestination","properties":{"community":"xsd:string","hostName":"xsd:string","port":"xsd:int"}}, _self.DynamicData);
    _self.HostSnmpSystemAgentLimits = merge({"type":"HostSnmpSystemAgentLimits","properties":{"capability":_self.HostSnmpAgentCapability,"maxBufferSize":"xsd:int","maxCommunityLength":"xsd:int","maxReadOnlyCommunities":"xsd:int","maxTrapDestinations":"xsd:int"}}, _self.DynamicData);
    _self.HostSriovConfig = merge({"type":"HostSriovConfig","properties":{"numVirtualFunction":"xsd:int","sriovEnabled":"xsd:boolean"}}, _self.HostPciPassthruConfig);
    _self.HostSriovInfo = merge({"type":"HostSriovInfo","properties":{"maxVirtualFunctionSupported":"xsd:int","numVirtualFunction":"xsd:int","numVirtualFunctionRequested":"xsd:int","sriovActive":"xsd:boolean","sriovCapable":"xsd:boolean","sriovEnabled":"xsd:boolean"}}, _self.HostPciPassthruInfo);
    _self.HostStorageOperationalInfo = merge({"type":"HostStorageOperationalInfo","properties":{"property":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.HostSystemReconnectSpec = merge({"type":"HostSystemReconnectSpec","properties":{"syncState":"xsd:boolean"}}, _self.DynamicData);
    _self.HostSystemSwapConfigurationSystemSwapOption = merge({"type":"HostSystemSwapConfigurationSystemSwapOption","properties":{"key":"xsd:int"}}, _self.DynamicData);
    _self.HostSystemSwapConfigurationDatastoreOption = merge({"type":"HostSystemSwapConfigurationDatastoreOption","properties":{"datastore":"xsd:string"}}, _self.HostSystemSwapConfigurationSystemSwapOption);
    _self.HostSystemSwapConfigurationDisabledOption = merge({"type":"HostSystemSwapConfigurationDisabledOption"}, _self.HostSystemSwapConfigurationSystemSwapOption);
    _self.HostSystemSwapConfigurationHostCacheOption = merge({"type":"HostSystemSwapConfigurationHostCacheOption"}, _self.HostSystemSwapConfigurationSystemSwapOption);
    _self.HostSystemSwapConfigurationHostLocalSwapOption = merge({"type":"HostSystemSwapConfigurationHostLocalSwapOption"}, _self.HostSystemSwapConfigurationSystemSwapOption);
    _self.HostTpmEventDetails = merge({"type":"HostTpmEventDetails","properties":{"dataHash":"xsd:byte[]"}}, _self.DynamicData);
    _self.HostTpmOptionEventDetails = merge({"type":"HostTpmOptionEventDetails","properties":{"bootOptions":"xsd:byte[]","optionsFileName":"xsd:string"}}, _self.HostTpmEventDetails);
    _self.HostTpmSoftwareComponentEventDetails = merge({"type":"HostTpmSoftwareComponentEventDetails","properties":{"componentName":"xsd:string","vibName":"xsd:string","vibVendor":"xsd:string","vibVersion":"xsd:string"}}, _self.HostTpmEventDetails);
    _self.HostUnresolvedVmfsExtent = merge({"type":"HostUnresolvedVmfsExtent","properties":{"device":_self.HostScsiDiskPartition,"devicePath":"xsd:string","endBlock":"xsd:int","isHeadExtent":"xsd:boolean","ordinal":"xsd:int","reason":"xsd:string","startBlock":"xsd:int","vmfsUuid":"xsd:string"}}, _self.DynamicData);
    _self.HostUnresolvedVmfsResignatureSpec = merge({"type":"HostUnresolvedVmfsResignatureSpec","properties":{"extentDevicePath":"xsd:string[]"}}, _self.DynamicData);
    _self.HostUnresolvedVmfsResolutionSpec = merge({"type":"HostUnresolvedVmfsResolutionSpec","properties":{"extentDevicePath":"xsd:string[]","uuidResolution":"xsd:string"}}, _self.DynamicData);
    _self.HostVmfsVolume = merge({"type":"HostVmfsVolume","properties":{"blockSizeMb":"xsd:int","extent":_self.HostScsiDiskPartition,"forceMountedInfo":_self.HostForceMountedInfo,"local":"xsd:boolean","majorVersion":"xsd:int","maxBlocks":"xsd:int","ssd":"xsd:boolean","uuid":"xsd:string","version":"xsd:string","vmfsUpgradable":"xsd:boolean"}}, _self.HostFileSystemVolume);
    _self.HostUnresolvedVmfsVolumeResolveStatus = merge({"type":"HostUnresolvedVmfsVolumeResolveStatus","properties":{"incompleteExtents":"xsd:boolean","multipleCopies":"xsd:boolean","resolvable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostVfatVolume = merge({"type":"HostVfatVolume"}, _self.HostFileSystemVolume);
    _self.HostVffsVolume = merge({"type":"HostVffsVolume","properties":{"extent":_self.HostScsiDiskPartition,"majorVersion":"xsd:int","uuid":"xsd:string","version":"xsd:string"}}, _self.HostFileSystemVolume);
    _self.HostVFlashManagerVFlashCacheConfigSpec = merge({"type":"HostVFlashManagerVFlashCacheConfigSpec","properties":{"defaultVFlashModule":"xsd:string","swapCacheReservationInGB":"xsd:long"}}, _self.DynamicData);
    _self.HostVFlashManagerVFlashResourceConfigInfo = merge({"type":"HostVFlashManagerVFlashResourceConfigInfo","properties":{"capacity":"xsd:long","vffs":_self.HostVffsVolume}}, _self.DynamicData);
    _self.HostVFlashManagerVFlashResourceConfigSpec = merge({"type":"HostVFlashManagerVFlashResourceConfigSpec","properties":{"vffsUuid":"xsd:string"}}, _self.DynamicData);
    _self.HostVirtualSwitchBeaconConfig = merge({"type":"HostVirtualSwitchBeaconConfig","properties":{"interval":"xsd:int"}}, _self.DynamicData);
    _self.LinkDiscoveryProtocolConfig = merge({"type":"LinkDiscoveryProtocolConfig","properties":{"operation":"xsd:string","protocol":"xsd:string"}}, _self.DynamicData);
    _self.HostVirtualSwitchBridge = merge({"type":"HostVirtualSwitchBridge"}, _self.DynamicData);
    _self.HostVirtualSwitchSimpleBridge = merge({"type":"HostVirtualSwitchSimpleBridge","properties":{"nicDevice":"xsd:string"}}, _self.HostVirtualSwitchBridge);
    _self.HostVmciAccessManagerAccessSpec = merge({"type":"HostVmciAccessManagerAccessSpec","properties":{"mode":"xsd:string","services":"xsd:string[]","vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostVmfsSpec = merge({"type":"HostVmfsSpec","properties":{"blockSizeMb":"xsd:int","extent":_self.HostScsiDiskPartition,"majorVersion":"xsd:int","volumeName":"xsd:string"}}, _self.DynamicData);
    _self.HostVMotionCompatibility = merge({"type":"HostVMotionCompatibility","properties":{"compatibility":"xsd:string[]","host":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostVMotionConfig = merge({"type":"HostVMotionConfig","properties":{"enabled":"xsd:boolean","vmotionNicKey":"xsd:string"}}, _self.DynamicData);
    _self.HostVsanInternalSystemCmmdsQuery = merge({"type":"HostVsanInternalSystemCmmdsQuery","properties":{"owner":"xsd:string","type":"xsd:string","uuid":"xsd:string"}}, _self.DynamicData);
    _self.HttpNfcLeaseHostInfo = merge({"type":"HttpNfcLeaseHostInfo","properties":{"sslThumbprint":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.HttpNfcLeaseDeviceUrl = merge({"type":"HttpNfcLeaseDeviceUrl","properties":{"datastoreKey":"xsd:string","disk":"xsd:boolean","fileSize":"xsd:long","importKey":"xsd:string","key":"xsd:string","sslThumbprint":"xsd:string","targetId":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.HttpNfcLeaseManifestEntry = merge({"type":"HttpNfcLeaseManifestEntry","properties":{"capacity":"xsd:long","disk":"xsd:boolean","key":"xsd:string","populatedSize":"xsd:long","sha1":"xsd:string","size":"xsd:long"}}, _self.DynamicData);
    _self.VAppEntityConfigInfo = merge({"type":"VAppEntityConfigInfo","properties":{"destroyWithParent":"xsd:boolean","key":_self.ManagedObjectReference,"startAction":"xsd:string","startDelay":"xsd:int","startOrder":"xsd:int","stopAction":"xsd:string","stopDelay":"xsd:int","tag":"xsd:string","waitingForGuest":"xsd:boolean"}}, _self.DynamicData);
    _self.InheritablePolicy = merge({"type":"InheritablePolicy","properties":{"inherited":"xsd:boolean"}}, _self.DynamicData);
    _self.IpPoolIpPoolConfigInfo = merge({"type":"IpPoolIpPoolConfigInfo","properties":{"dhcpServerAvailable":"xsd:boolean","dns":"xsd:string[]","gateway":"xsd:string","ipPoolEnabled":"xsd:boolean","netmask":"xsd:string","range":"xsd:string","subnetAddress":"xsd:string"}}, _self.DynamicData);
    _self.IpPoolAssociation = merge({"type":"IpPoolAssociation","properties":{"network":_self.ManagedObjectReference,"networkName":"xsd:string"}}, _self.DynamicData);
    _self.IpPoolManagerIpAllocation = merge({"type":"IpPoolManagerIpAllocation","properties":{"allocationId":"xsd:string","ipAddress":"xsd:string"}}, _self.DynamicData);
    _self.IscsiDependencyEntity = merge({"type":"IscsiDependencyEntity","properties":{"pnicDevice":"xsd:string","vmhbaName":"xsd:string","vnicDevice":"xsd:string"}}, _self.DynamicData);
    _self.IsoImageFileInfo = merge({"type":"IsoImageFileInfo"}, _self.FileInfo);
    _self.IsoImageFileQuery = merge({"type":"IsoImageFileQuery"}, _self.FileQuery);
    _self.KernelModuleSectionInfo = merge({"type":"KernelModuleSectionInfo","properties":{"address":"xsd:long","length":"xsd:int"}}, _self.DynamicData);
    _self.LatencySensitivity = merge({"type":"LatencySensitivity","properties":{"level":_self.LatencySensitivitySensitivityLevel,"sensitivity":"xsd:int"}}, _self.DynamicData);
    _self.LicenseAssignmentManagerLicenseAssignment = merge({"type":"LicenseAssignmentManagerLicenseAssignment","properties":{"assignedLicense":_self.LicenseManagerLicenseInfo,"entityDisplayName":"xsd:string","entityId":"xsd:string","properties":_self.KeyAnyValue,"scope":"xsd:string"}}, _self.DynamicData);
    _self.LicenseFeatureInfo = merge({"type":"LicenseFeatureInfo","properties":{"costUnit":"xsd:string","dependentKey":"xsd:string[]","edition":"xsd:boolean","expiresOn":"xsd:dateTime","featureDescription":"xsd:string","featureName":"xsd:string","key":"xsd:string","sourceRestriction":"xsd:string","state":_self.LicenseFeatureInfoState}}, _self.DynamicData);
    _self.LicenseDiagnostics = merge({"type":"LicenseDiagnostics","properties":{"lastStatusUpdate":"xsd:dateTime","licenseFeatureUnknowns":"xsd:string","licenseRequestFailures":"xsd:string","licenseRequests":"xsd:string","opFailureMessage":"xsd:string","opState":_self.LicenseManagerState,"sourceLastChanged":"xsd:dateTime","sourceLatency":"xsd:float","sourceLost":"xsd:string"}}, _self.DynamicData);
    _self.LicenseManager = {"type":"LicenseManager","properties":{"diagnostics":_self.LicenseDiagnostics,"evaluation":_self.LicenseManagerEvaluationInfo,"featureInfo":_self.LicenseFeatureInfo,"licenseAssignmentManager":_self.ManagedObjectReference,"licensedEdition":"xsd:string","licenses":_self.LicenseManagerLicenseInfo,"source":_self.LicenseSource,"sourceAvailable":"xsd:boolean"},"methods":{"AddLicense":{"params":{"_this":"ManagedObjectReference","licenseKey":"xsd:string","labels":"KeyValue"},"returns":"LicenseManagerLicenseInfo"},"CheckLicenseFeature":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","featureKey":"xsd:string"},"returns":"xsd:boolean"},"ConfigureLicenseSource":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","licenseSource":"LicenseSource"},"returns":null},"DecodeLicense":{"params":{"_this":"ManagedObjectReference","licenseKey":"xsd:string"},"returns":"LicenseManagerLicenseInfo"},"DisableFeature":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","featureKey":"xsd:string"},"returns":"xsd:boolean"},"EnableFeature":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","featureKey":"xsd:string"},"returns":"xsd:boolean"},"QueryLicenseSourceAvailability":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"LicenseAvailabilityInfo"},"QueryLicenseUsage":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"LicenseUsageInfo"},"QuerySupportedFeatures":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"LicenseFeatureInfo"},"RemoveLicense":{"params":{"_this":"ManagedObjectReference","licenseKey":"xsd:string"},"returns":null},"RemoveLicenseLabel":{"params":{"_this":"ManagedObjectReference","licenseKey":"xsd:string","labelKey":"xsd:string"},"returns":null},"SetLicenseEdition":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","featureKey":"xsd:string"},"returns":null},"UpdateLicense":{"params":{"_this":"ManagedObjectReference","licenseKey":"xsd:string","labels":"KeyValue"},"returns":"LicenseManagerLicenseInfo"},"UpdateLicenseLabel":{"params":{"_this":"ManagedObjectReference","licenseKey":"xsd:string","labelKey":"xsd:string","labelValue":"xsd:string"},"returns":null}}};
    _self.LicenseReservationInfo = merge({"type":"LicenseReservationInfo","properties":{"key":"xsd:string","required":"xsd:int","state":_self.LicenseReservationInfoState}}, _self.DynamicData);
    _self.LicenseServerSource = merge({"type":"LicenseServerSource","properties":{"licenseServer":"xsd:string"}}, _self.LicenseSource);
    _self.LicenseUsageInfo = merge({"type":"LicenseUsageInfo","properties":{"featureInfo":_self.LicenseFeatureInfo,"reservationInfo":_self.LicenseReservationInfo,"source":_self.LicenseSource,"sourceAvailable":"xsd:boolean"}}, _self.DynamicData);
    _self.LinkLayerDiscoveryProtocolInfo = merge({"type":"LinkLayerDiscoveryProtocolInfo","properties":{"chassisId":"xsd:string","parameter":_self.KeyAnyValue,"portId":"xsd:string","timeToLive":"xsd:int"}}, _self.DynamicData);
    _self.LocalizationManagerMessageCatalog = merge({"type":"LocalizationManagerMessageCatalog","properties":{"catalogName":"xsd:string","catalogUri":"xsd:string","lastModified":"xsd:dateTime","locale":"xsd:string","md5sum":"xsd:string","moduleName":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.LocalLicenseSource = merge({"type":"LocalLicenseSource","properties":{"licenseKeys":"xsd:string"}}, _self.LicenseSource);
    _self.ManagedByInfo = merge({"type":"ManagedByInfo","properties":{"extensionKey":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.Tag = merge({"type":"Tag","properties":{"key":"xsd:string"}}, _self.DynamicData);
    _self.ManagedObjectView = merge({"type":"ManagedObjectView","properties":{"view":_self.ManagedObjectReference},"methods":{}}, _self.View);
    _self.MethodActionArgument = merge({"type":"MethodActionArgument","properties":{"value":"xsd:anyType"}}, _self.DynamicData);
    _self.PerfMetricId = merge({"type":"PerfMetricId","properties":{"counterId":"xsd:int","instance":"xsd:string"}}, _self.DynamicData);
    _self.ModeInfo = merge({"type":"ModeInfo","properties":{"admin":"xsd:string","browse":"xsd:string","full":"xsd:string","modify":"xsd:string","read":"xsd:string","use":"xsd:string"}}, _self.DynamicData);
    _self.MultipleCertificatesVerifyFaultThumbprintData = merge({"type":"MultipleCertificatesVerifyFaultThumbprintData","properties":{"port":"xsd:int","thumbprint":"xsd:string"}}, _self.DynamicData);
    _self.NamePasswordAuthentication = merge({"type":"NamePasswordAuthentication","properties":{"password":"xsd:string","username":"xsd:string"}}, _self.GuestAuthentication);
    _self.NegatableExpression = merge({"type":"NegatableExpression","properties":{"negate":"xsd:boolean"}}, _self.DynamicData);
    _self.NetDhcpConfigInfoDhcpOptions = merge({"type":"NetDhcpConfigInfoDhcpOptions","properties":{"config":_self.KeyValue,"enable":"xsd:boolean"}}, _self.DynamicData);
    _self.NetDhcpConfigSpecDhcpOptionsSpec = merge({"type":"NetDhcpConfigSpecDhcpOptionsSpec","properties":{"config":_self.KeyValue,"enable":"xsd:boolean","operation":"xsd:string"}}, _self.DynamicData);
    _self.NetDnsConfigSpec = merge({"type":"NetDnsConfigSpec","properties":{"dhcp":"xsd:boolean","domainName":"xsd:string","hostName":"xsd:string","ipAddress":"xsd:string[]","searchDomain":"xsd:string[]"}}, _self.DynamicData);
    _self.NetIpConfigInfoIpAddress = merge({"type":"NetIpConfigInfoIpAddress","properties":{"ipAddress":"xsd:string","lifetime":"xsd:dateTime","origin":"xsd:string","prefixLength":"xsd:int","state":"xsd:string"}}, _self.DynamicData);
    _self.NetIpConfigSpecIpAddressSpec = merge({"type":"NetIpConfigSpecIpAddressSpec","properties":{"ipAddress":"xsd:string","operation":"xsd:string","prefixLength":"xsd:int"}}, _self.DynamicData);
    _self.NetIpRouteConfigInfoGateway = merge({"type":"NetIpRouteConfigInfoGateway","properties":{"device":"xsd:string","ipAddress":"xsd:string"}}, _self.DynamicData);
    _self.NetIpRouteConfigSpecGatewaySpec = merge({"type":"NetIpRouteConfigSpecGatewaySpec","properties":{"device":"xsd:string","ipAddress":"xsd:string"}}, _self.DynamicData);
    _self.NetIpStackInfoDefaultRouter = merge({"type":"NetIpStackInfoDefaultRouter","properties":{"device":"xsd:string","ipAddress":"xsd:string","lifetime":"xsd:dateTime","preference":"xsd:string"}}, _self.DynamicData);
    _self.NetIpStackInfoNetToMedia = merge({"type":"NetIpStackInfoNetToMedia","properties":{"device":"xsd:string","ipAddress":"xsd:string","physicalAddress":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.SelectionSpec = merge({"type":"SelectionSpec","properties":{"name":"xsd:string"}}, _self.DynamicData);
    _self.PropertyChange = merge({"type":"PropertyChange","properties":{"name":"xsd:string","op":_self.PropertyChangeOp,"val":"xsd:anyType"}}, _self.DynamicData);
    _self.OpaqueNetworkSummary = merge({"type":"OpaqueNetworkSummary","properties":{"opaqueNetworkId":"xsd:string","opaqueNetworkType":"xsd:string"}}, _self.NetworkSummary);
    _self.OptionType = merge({"type":"OptionType","properties":{"valueIsReadonly":"xsd:boolean"}}, _self.DynamicData);
    _self.OvfConsumerOvfSection = merge({"type":"OvfConsumerOvfSection","properties":{"lineNumber":"xsd:int","xml":"xsd:string"}}, _self.DynamicData);
    _self.OvfFile = merge({"type":"OvfFile","properties":{"capacity":"xsd:long","chunkSize":"xsd:long","compressionMethod":"xsd:string","deviceId":"xsd:string","path":"xsd:string","populatedSize":"xsd:long","size":"xsd:long"}}, _self.DynamicData);
    _self.OvfNetworkMapping = merge({"type":"OvfNetworkMapping","properties":{"name":"xsd:string","network":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.OvfFileItem = merge({"type":"OvfFileItem","properties":{"chunkSize":"xsd:long","cimType":"xsd:int","compressionMethod":"xsd:string","create":"xsd:boolean","deviceId":"xsd:string","path":"xsd:string","size":"xsd:long"}}, _self.DynamicData);
    _self.OvfDeploymentOption = merge({"type":"OvfDeploymentOption","properties":{"description":"xsd:string","key":"xsd:string","label":"xsd:string"}}, _self.DynamicData);
    _self.OvfManagerCommonParams = merge({"type":"OvfManagerCommonParams","properties":{"deploymentOption":"xsd:string","importOption":"xsd:string[]","locale":"xsd:string","msgBundle":_self.KeyValue}}, _self.DynamicData);
    _self.OvfNetworkInfo = merge({"type":"OvfNetworkInfo","properties":{"description":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.OvfParseDescriptorParams = merge({"type":"OvfParseDescriptorParams"}, _self.OvfManagerCommonParams);
    _self.VAppProductInfo = merge({"type":"VAppProductInfo","properties":{"appUrl":"xsd:string","classId":"xsd:string","fullVersion":"xsd:string","instanceId":"xsd:string","key":"xsd:int","name":"xsd:string","productUrl":"xsd:string","vendor":"xsd:string","vendorUrl":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.VAppPropertyInfo = merge({"type":"VAppPropertyInfo","properties":{"category":"xsd:string","classId":"xsd:string","defaultValue":"xsd:string","description":"xsd:string","id":"xsd:string","instanceId":"xsd:string","key":"xsd:int","label":"xsd:string","type":"xsd:string","typeReference":"xsd:string","userConfigurable":"xsd:boolean","value":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDeviceBackingInfo = merge({"type":"VirtualDeviceBackingInfo"}, _self.DynamicData);
    _self.OvfValidateHostParams = merge({"type":"OvfValidateHostParams"}, _self.OvfManagerCommonParams);
    _self.PasswordField = merge({"type":"PasswordField","properties":{"value":"xsd:string"}}, _self.DynamicData);
    _self.PerfEntityMetricBase = merge({"type":"PerfEntityMetricBase","properties":{"entity":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.PerfSampleInfo = merge({"type":"PerfSampleInfo","properties":{"interval":"xsd:int","timestamp":"xsd:dateTime"}}, _self.DynamicData);
    _self.PerfMetricSeries = merge({"type":"PerfMetricSeries","properties":{"id":_self.PerfMetricId}}, _self.DynamicData);
    _self.PerfMetricSeriesCSV = merge({"type":"PerfMetricSeriesCSV","properties":{"value":"xsd:string"}}, _self.PerfMetricSeries);
    _self.PerfInterval = merge({"type":"PerfInterval","properties":{"enabled":"xsd:boolean","key":"xsd:int","length":"xsd:int","level":"xsd:int","name":"xsd:string","samplingPeriod":"xsd:int"}}, _self.DynamicData);
    _self.PerfMetricIntSeries = merge({"type":"PerfMetricIntSeries","properties":{"value":"xsd:long[]"}}, _self.PerfMetricSeries);
    _self.PerformanceManagerCounterLevelMapping = merge({"type":"PerformanceManagerCounterLevelMapping","properties":{"aggregateLevel":"xsd:int","counterId":"xsd:int","perDeviceLevel":"xsd:int"}}, _self.DynamicData);
    _self.PerfProviderSummary = merge({"type":"PerfProviderSummary","properties":{"currentSupported":"xsd:boolean","entity":_self.ManagedObjectReference,"refreshRate":"xsd:int","summarySupported":"xsd:boolean"}}, _self.DynamicData);
    _self.PerfQuerySpec = merge({"type":"PerfQuerySpec","properties":{"endTime":"xsd:dateTime","entity":_self.ManagedObjectReference,"format":"xsd:string","intervalId":"xsd:int","maxSample":"xsd:int","metricId":_self.PerfMetricId,"startTime":"xsd:dateTime"}}, _self.DynamicData);
    _self.RoleEventArgument = merge({"type":"RoleEventArgument","properties":{"name":"xsd:string","roleId":"xsd:int"}}, _self.EventArgument);
    _self.PhysicalNicLinkInfo = merge({"type":"PhysicalNicLinkInfo","properties":{"duplex":"xsd:boolean","speedMb":"xsd:int"}}, _self.DynamicData);
    _self.PhysicalNicCdpDeviceCapability = merge({"type":"PhysicalNicCdpDeviceCapability","properties":{"host":"xsd:boolean","igmpEnabled":"xsd:boolean","networkSwitch":"xsd:boolean","repeater":"xsd:boolean","router":"xsd:boolean","sourceRouteBridge":"xsd:boolean","transparentBridge":"xsd:boolean"}}, _self.DynamicData);
    _self.PhysicalNicCdpInfo = merge({"type":"PhysicalNicCdpInfo","properties":{"address":"xsd:string","cdpVersion":"xsd:int","deviceCapability":_self.PhysicalNicCdpDeviceCapability,"devId":"xsd:string","fullDuplex":"xsd:boolean","hardwarePlatform":"xsd:string","ipPrefix":"xsd:string","ipPrefixLen":"xsd:int","location":"xsd:string","mgmtAddr":"xsd:string","mtu":"xsd:int","portId":"xsd:string","samples":"xsd:int","softwareVersion":"xsd:string","systemName":"xsd:string","systemOID":"xsd:string","timeout":"xsd:int","ttl":"xsd:int","vlan":"xsd:int"}}, _self.DynamicData);
    _self.PhysicalNicHint = merge({"type":"PhysicalNicHint","properties":{"vlanId":"xsd:int"}}, _self.DynamicData);
    _self.PhysicalNicNameHint = merge({"type":"PhysicalNicNameHint","properties":{"network":"xsd:string"}}, _self.PhysicalNicHint);
    _self.PhysicalNicIpHint = merge({"type":"PhysicalNicIpHint","properties":{"ipSubnet":"xsd:string"}}, _self.PhysicalNicHint);
    _self.PodDiskLocator = merge({"type":"PodDiskLocator","properties":{"diskBackingInfo":_self.VirtualDeviceBackingInfo,"diskId":"xsd:int","diskMoveType":"xsd:string","profile":_self.VirtualMachineProfileSpec}}, _self.DynamicData);
    _self.ProductComponentInfo = merge({"type":"ProductComponentInfo","properties":{"id":"xsd:string","name":"xsd:string","release":"xsd:int","version":"xsd:string"}}, _self.DynamicData);
    _self.ProfileConfigInfo = merge({"type":"ProfileConfigInfo","properties":{"annotation":"xsd:string","enabled":"xsd:boolean","name":"xsd:string"}}, _self.DynamicData);
    _self.ProfileCreateSpec = merge({"type":"ProfileCreateSpec","properties":{"annotation":"xsd:string","enabled":"xsd:boolean","name":"xsd:string"}}, _self.DynamicData);
    _self.ProfileMetadataProfileSortSpec = merge({"type":"ProfileMetadataProfileSortSpec","properties":{"parameter":"xsd:string","policyId":"xsd:string"}}, _self.DynamicData);
    _self.ProfileSerializedCreateSpec = merge({"type":"ProfileSerializedCreateSpec","properties":{"profileConfigString":"xsd:string"}}, _self.ProfileCreateSpec);
    _self.PropertySpec = merge({"type":"PropertySpec","properties":{"all":"xsd:boolean","pathSet":"xsd:string[]","type":"xsd:string"}}, _self.DynamicData);
    _self.ReplicationInfoDiskSettings = merge({"type":"ReplicationInfoDiskSettings","properties":{"diskReplicationId":"xsd:string","key":"xsd:int"}}, _self.DynamicData);
    _self.ResourcePoolQuickStats = merge({"type":"ResourcePoolQuickStats","properties":{"balloonedMemory":"xsd:long","compressedMemory":"xsd:long","consumedOverheadMemory":"xsd:long","distributedCpuEntitlement":"xsd:long","distributedMemoryEntitlement":"xsd:long","guestMemoryUsage":"xsd:long","hostMemoryUsage":"xsd:long","overallCpuDemand":"xsd:long","overallCpuUsage":"xsd:long","overheadMemory":"xsd:long","privateMemory":"xsd:long","sharedMemory":"xsd:long","staticCpuEntitlement":"xsd:int","staticMemoryEntitlement":"xsd:int","swappedMemory":"xsd:long"}}, _self.DynamicData);
    _self.ResourcePoolResourceUsage = merge({"type":"ResourcePoolResourceUsage","properties":{"maxUsage":"xsd:long","overallUsage":"xsd:long","reservationUsed":"xsd:long","reservationUsedForVm":"xsd:long","unreservedForPool":"xsd:long","unreservedForVm":"xsd:long"}}, _self.DynamicData);
    _self.RetrieveOptions = merge({"type":"RetrieveOptions","properties":{"maxObjects":"xsd:int"}}, _self.DynamicData);
    _self.TaskScheduler = merge({"type":"TaskScheduler","properties":{"activeTime":"xsd:dateTime","expireTime":"xsd:dateTime"}}, _self.DynamicData);
    _self.ScsiLunDurableName = merge({"type":"ScsiLunDurableName","properties":{"data":"xsd:byte[]","namespace":"xsd:string","namespaceId":"xsd:byte"}}, _self.DynamicData);
    _self.ScsiLunCapabilities = merge({"type":"ScsiLunCapabilities","properties":{"updateDisplayNameSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.ScsiLunDescriptor = merge({"type":"ScsiLunDescriptor","properties":{"id":"xsd:string","quality":"xsd:string"}}, _self.DynamicData);
    _self.SelectionSet = merge({"type":"SelectionSet"}, _self.DynamicData);
    _self.ServiceManagerServiceInfo = merge({"type":"ServiceManagerServiceInfo","properties":{"description":"xsd:string","location":"xsd:string[]","service":_self.ManagedObjectReference,"serviceName":"xsd:string"}}, _self.DynamicData);
    _self.UserSession = merge({"type":"UserSession","properties":{"callCount":"xsd:long","extensionSession":"xsd:boolean","fullName":"xsd:string","ipAddress":"xsd:string","key":"xsd:string","lastActiveTime":"xsd:dateTime","locale":"xsd:string","loginTime":"xsd:dateTime","messageLocale":"xsd:string","userAgent":"xsd:string","userName":"xsd:string"}}, _self.DynamicData);
    _self.SessionManagerGenericServiceTicket = merge({"type":"SessionManagerGenericServiceTicket","properties":{"hostName":"xsd:string","id":"xsd:string","sslThumbprint":"xsd:string"}}, _self.DynamicData);
    _self.SessionManagerLocalTicket = merge({"type":"SessionManagerLocalTicket","properties":{"passwordFilePath":"xsd:string","userName":"xsd:string"}}, _self.DynamicData);
    _self.SessionManagerServiceRequestSpec = merge({"type":"SessionManagerServiceRequestSpec"}, _self.DynamicData);
    _self.SessionManagerVmomiServiceRequestSpec = merge({"type":"SessionManagerVmomiServiceRequestSpec","properties":{"method":"xsd:string"}}, _self.SessionManagerServiceRequestSpec);
    _self.SimpleCommand = {"type":"SimpleCommand","properties":{"encodingType":_self.SimpleCommandEncoding,"entity":_self.ServiceManagerServiceInfo},"methods":{"ExecuteSimpleCommand":{"params":{"_this":"ManagedObjectReference","arguments":"xsd:string"},"returns":"xsd:string"}}};
    _self.SSPIAuthentication = merge({"type":"SSPIAuthentication","properties":{"sspiToken":"xsd:string"}}, _self.GuestAuthentication);
    _self.StorageDrsIoLoadBalanceConfig = merge({"type":"StorageDrsIoLoadBalanceConfig","properties":{"ioLatencyThreshold":"xsd:int","ioLoadImbalanceThreshold":"xsd:int"}}, _self.DynamicData);
    _self.StorageDrsSpaceLoadBalanceConfig = merge({"type":"StorageDrsSpaceLoadBalanceConfig","properties":{"minSpaceUtilizationDifference":"xsd:int","spaceUtilizationThreshold":"xsd:int"}}, _self.DynamicData);
    _self.StorageIORMConfigSpec = merge({"type":"StorageIORMConfigSpec","properties":{"congestionThreshold":"xsd:int","congestionThresholdMode":"xsd:string","enabled":"xsd:boolean","percentOfPeakThroughput":"xsd:int","statsAggregationDisabled":"xsd:boolean","statsCollectionEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.StoragePerformanceSummary = merge({"type":"StoragePerformanceSummary","properties":{"datastoreReadIops":"xsd:double[]","datastoreReadLatency":"xsd:double[]","datastoreVmLatency":"xsd:double[]","datastoreWriteIops":"xsd:double[]","datastoreWriteLatency":"xsd:double[]","interval":"xsd:int","percentile":"xsd:int[]","siocActivityDuration":"xsd:int"}}, _self.DynamicData);
    _self.StoragePodSummary = merge({"type":"StoragePodSummary","properties":{"capacity":"xsd:long","freeSpace":"xsd:long","name":"xsd:string"}}, _self.DynamicData);
    _self.StorageRequirement = merge({"type":"StorageRequirement","properties":{"datastore":_self.ManagedObjectReference,"freeSpaceRequiredInKb":"xsd:long"}}, _self.DynamicData);
    _self.StringOption = merge({"type":"StringOption","properties":{"defaultValue":"xsd:string","validCharacters":"xsd:string"}}, _self.OptionType);
    _self.TaskFilterSpecByEntity = merge({"type":"TaskFilterSpecByEntity","properties":{"entity":_self.ManagedObjectReference,"recursion":_self.TaskFilterSpecRecursionOption}}, _self.DynamicData);
    _self.TaskFilterSpecByTime = merge({"type":"TaskFilterSpecByTime","properties":{"beginTime":"xsd:dateTime","endTime":"xsd:dateTime","timeType":_self.TaskFilterSpecTimeOption}}, _self.DynamicData);
    _self.TaskFilterSpecByUsername = merge({"type":"TaskFilterSpecByUsername","properties":{"systemUser":"xsd:boolean","userList":"xsd:string[]"}}, _self.DynamicData);
    _self.TaskReason = merge({"type":"TaskReason"}, _self.DynamicData);
    _self.TaskReasonAlarm = merge({"type":"TaskReasonAlarm","properties":{"alarm":_self.ManagedObjectReference,"alarmName":"xsd:string","entity":_self.ManagedObjectReference,"entityName":"xsd:string"}}, _self.TaskReason);
    _self.TaskReasonSchedule = merge({"type":"TaskReasonSchedule","properties":{"name":"xsd:string","scheduledTask":_self.ManagedObjectReference}}, _self.TaskReason);
    _self.TaskReasonSystem = merge({"type":"TaskReasonSystem"}, _self.TaskReason);
    _self.TaskReasonUser = merge({"type":"TaskReasonUser","properties":{"userName":"xsd:string"}}, _self.TaskReason);
    _self.TicketedSessionAuthentication = merge({"type":"TicketedSessionAuthentication","properties":{"ticket":"xsd:string"}}, _self.GuestAuthentication);
    _self.TraversalSpec = merge({"type":"TraversalSpec","properties":{"path":"xsd:string","selectSet":_self.SelectionSpec,"skip":"xsd:boolean","type":"xsd:string"}}, _self.SelectionSpec);
    _self.UserSearchResult = merge({"type":"UserSearchResult","properties":{"fullName":"xsd:string","group":"xsd:boolean","principal":"xsd:string"}}, _self.DynamicData);
    _self.VAppCloneSpecNetworkMappingPair = merge({"type":"VAppCloneSpecNetworkMappingPair","properties":{"destination":_self.ManagedObjectReference,"source":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.VAppIPAssignmentInfo = merge({"type":"VAppIPAssignmentInfo","properties":{"ipAllocationPolicy":"xsd:string","ipProtocol":"xsd:string","supportedAllocationScheme":"xsd:string[]","supportedIpProtocol":"xsd:string[]"}}, _self.DynamicData);
    _self.VAppOvfSectionInfo = merge({"type":"VAppOvfSectionInfo","properties":{"atEnvelopeLevel":"xsd:boolean","contents":"xsd:string","key":"xsd:int","namespace":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.VirtualAppLinkInfo = merge({"type":"VirtualAppLinkInfo","properties":{"destroyWithParent":"xsd:boolean","key":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.VirtualDeviceConnectInfo = merge({"type":"VirtualDeviceConnectInfo","properties":{"allowGuestControl":"xsd:boolean","connected":"xsd:boolean","startConnected":"xsd:boolean","status":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDeviceBusSlotInfo = merge({"type":"VirtualDeviceBusSlotInfo"}, _self.DynamicData);
    _self.VirtualDeviceBackingOption = merge({"type":"VirtualDeviceBackingOption","properties":{"type":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDeviceBusSlotOption = merge({"type":"VirtualDeviceBusSlotOption","properties":{"type":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDeviceDeviceBackingInfo = merge({"type":"VirtualDeviceDeviceBackingInfo","properties":{"deviceName":"xsd:string","useAutoDetect":"xsd:boolean"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDeviceFileBackingInfo = merge({"type":"VirtualDeviceFileBackingInfo","properties":{"backingObjectId":"xsd:string","datastore":_self.ManagedObjectReference,"fileName":"xsd:string"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDevicePciBusSlotInfo = merge({"type":"VirtualDevicePciBusSlotInfo","properties":{"pciSlotNumber":"xsd:int"}}, _self.VirtualDeviceBusSlotInfo);
    _self.VirtualDevicePipeBackingInfo = merge({"type":"VirtualDevicePipeBackingInfo","properties":{"pipeName":"xsd:string"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDevicePipeBackingOption = merge({"type":"VirtualDevicePipeBackingOption"}, _self.VirtualDeviceBackingOption);
    _self.VirtualDeviceRemoteDeviceBackingInfo = merge({"type":"VirtualDeviceRemoteDeviceBackingInfo","properties":{"deviceName":"xsd:string","useAutoDetect":"xsd:boolean"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDeviceURIBackingInfo = merge({"type":"VirtualDeviceURIBackingInfo","properties":{"direction":"xsd:string","proxyURI":"xsd:string","serviceURI":"xsd:string"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDiskVFlashCacheConfigInfo = merge({"type":"VirtualDiskVFlashCacheConfigInfo","properties":{"blockSizeInKB":"xsd:long","cacheConsistencyType":"xsd:string","cacheMode":"xsd:string","reservationInMB":"xsd:long","vFlashModule":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDiskRawDiskVer2BackingInfo = merge({"type":"VirtualDiskRawDiskVer2BackingInfo","properties":{"changeId":"xsd:string","descriptorFileName":"xsd:string","uuid":"xsd:string"}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualDiskSpec = merge({"type":"VirtualDiskSpec","properties":{"adapterType":"xsd:string","diskType":"xsd:string"}}, _self.DynamicData);
    _self.VirtualEthernetCardDVPortBackingOption = merge({"type":"VirtualEthernetCardDVPortBackingOption"}, _self.VirtualDeviceBackingOption);
    _self.VirtualEthernetCardLegacyNetworkBackingInfo = merge({"type":"VirtualEthernetCardLegacyNetworkBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualEthernetCardNetworkBackingInfo = merge({"type":"VirtualEthernetCardNetworkBackingInfo","properties":{"inPassthroughMode":"xsd:boolean","network":_self.ManagedObjectReference}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualEthernetCardOpaqueNetworkBackingInfo = merge({"type":"VirtualEthernetCardOpaqueNetworkBackingInfo","properties":{"opaqueNetworkId":"xsd:string","opaqueNetworkType":"xsd:string"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualEthernetCardOpaqueNetworkBackingOption = merge({"type":"VirtualEthernetCardOpaqueNetworkBackingOption"}, _self.VirtualDeviceBackingOption);
    _self.VirtualFloppyDeviceBackingInfo = merge({"type":"VirtualFloppyDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualFloppyImageBackingInfo = merge({"type":"VirtualFloppyImageBackingInfo"}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualFloppyRemoteDeviceBackingInfo = merge({"type":"VirtualFloppyRemoteDeviceBackingInfo"}, _self.VirtualDeviceRemoteDeviceBackingInfo);
    _self.VirtualMachineCapability = merge({"type":"VirtualMachineCapability","properties":{"bootOptionsSupported":"xsd:boolean","bootRetryOptionsSupported":"xsd:boolean","changeTrackingSupported":"xsd:boolean","consolePreferencesSupported":"xsd:boolean","cpuFeatureMaskSupported":"xsd:boolean","disableSnapshotsSupported":"xsd:boolean","diskSharesSupported":"xsd:boolean","featureRequirementSupported":"xsd:boolean","guestAutoLockSupported":"xsd:boolean","hostBasedReplicationSupported":"xsd:boolean","lockSnapshotsSupported":"xsd:boolean","memoryReservationLockSupported":"xsd:boolean","memorySnapshotsSupported":"xsd:boolean","multipleCoresPerSocketSupported":"xsd:boolean","multipleSnapshotsSupported":"xsd:boolean","nestedHVSupported":"xsd:boolean","npivWwnOnNonRdmVmSupported":"xsd:boolean","poweredOffSnapshotsSupported":"xsd:boolean","poweredOnMonitorTypeChangeSupported":"xsd:boolean","quiescedSnapshotsSupported":"xsd:boolean","recordReplaySupported":"xsd:boolean","revertToSnapshotSupported":"xsd:boolean","s1AcpiManagementSupported":"xsd:boolean","seSparseDiskSupported":"xsd:boolean","settingDisplayTopologySupported":"xsd:boolean","settingScreenResolutionSupported":"xsd:boolean","settingVideoRamSizeSupported":"xsd:boolean","snapshotConfigSupported":"xsd:boolean","snapshotOperationsSupported":"xsd:boolean","swapPlacementSupported":"xsd:boolean","toolsAutoUpdateSupported":"xsd:boolean","toolsSyncTimeSupported":"xsd:boolean","virtualMmuUsageSupported":"xsd:boolean","vmNpivWwnDisableSupported":"xsd:boolean","vmNpivWwnSupported":"xsd:boolean","vmNpivWwnUpdateSupported":"xsd:boolean","vPMCSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineAffinityInfo = merge({"type":"VirtualMachineAffinityInfo","properties":{"affinitySet":"xsd:int[]"}}, _self.DynamicData);
    _self.VirtualMachineBootOptionsBootableDevice = merge({"type":"VirtualMachineBootOptionsBootableDevice"}, _self.DynamicData);
    _self.VirtualMachineBootOptionsBootableCdromDevice = merge({"type":"VirtualMachineBootOptionsBootableCdromDevice"}, _self.VirtualMachineBootOptionsBootableDevice);
    _self.VirtualMachineBootOptionsBootableDiskDevice = merge({"type":"VirtualMachineBootOptionsBootableDiskDevice","properties":{"deviceKey":"xsd:int"}}, _self.VirtualMachineBootOptionsBootableDevice);
    _self.VirtualMachineBootOptionsBootableEthernetDevice = merge({"type":"VirtualMachineBootOptionsBootableEthernetDevice","properties":{"deviceKey":"xsd:int"}}, _self.VirtualMachineBootOptionsBootableDevice);
    _self.VirtualMachineBootOptionsBootableFloppyDevice = merge({"type":"VirtualMachineBootOptionsBootableFloppyDevice"}, _self.VirtualMachineBootOptionsBootableDevice);
    _self.VirtualMachineConsolePreferences = merge({"type":"VirtualMachineConsolePreferences","properties":{"closeOnPowerOffOrSuspend":"xsd:boolean","enterFullScreenOnPowerOn":"xsd:boolean","powerOnWhenOpened":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineConfigInfoDatastoreUrlPair = merge({"type":"VirtualMachineConfigInfoDatastoreUrlPair","properties":{"name":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineDefaultPowerOpInfo = merge({"type":"VirtualMachineDefaultPowerOpInfo","properties":{"defaultPowerOffType":"xsd:string","defaultResetType":"xsd:string","defaultSuspendType":"xsd:string","powerOffType":"xsd:string","resetType":"xsd:string","standbyAction":"xsd:string","suspendType":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineFileInfo = merge({"type":"VirtualMachineFileInfo","properties":{"logDirectory":"xsd:string","snapshotDirectory":"xsd:string","suspendDirectory":"xsd:string","vmPathName":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineFlagInfo = merge({"type":"VirtualMachineFlagInfo","properties":{"disableAcceleration":"xsd:boolean","diskUuidEnabled":"xsd:boolean","enableLogging":"xsd:boolean","htSharing":"xsd:string","monitorType":"xsd:string","recordReplayEnabled":"xsd:boolean","runWithDebugInfo":"xsd:boolean","snapshotDisabled":"xsd:boolean","snapshotLocked":"xsd:boolean","snapshotPowerOffBehavior":"xsd:string","useToe":"xsd:boolean","virtualExecUsage":"xsd:string","virtualMmuUsage":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineConfigInfoOverheadInfo = merge({"type":"VirtualMachineConfigInfoOverheadInfo","properties":{"initialMemoryReservation":"xsd:long","initialSwapReservation":"xsd:long"}}, _self.DynamicData);
    _self.VirtualMachineNetworkShaperInfo = merge({"type":"VirtualMachineNetworkShaperInfo","properties":{"averageBps":"xsd:long","burstSize":"xsd:long","enabled":"xsd:boolean","peakBps":"xsd:long"}}, _self.DynamicData);
    _self.VmConfigInfo = merge({"type":"VmConfigInfo","properties":{"eula":"xsd:string[]","installBootRequired":"xsd:boolean","installBootStopDelay":"xsd:int","ipAssignment":_self.VAppIPAssignmentInfo,"ovfEnvironmentTransport":"xsd:string[]","ovfSection":_self.VAppOvfSectionInfo,"product":_self.VAppProductInfo,"property":_self.VAppPropertyInfo}}, _self.DynamicData);
    _self.VirtualMachineConfigOptionDescriptor = merge({"type":"VirtualMachineConfigOptionDescriptor","properties":{"createSupported":"xsd:boolean","defaultConfigOption":"xsd:boolean","description":"xsd:string","host":_self.ManagedObjectReference,"key":"xsd:string","runSupported":"xsd:boolean","upgradeSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineConfigSummary = merge({"type":"VirtualMachineConfigSummary","properties":{"annotation":"xsd:string","cpuReservation":"xsd:int","ftInfo":_self.FaultToleranceConfigInfo,"guestFullName":"xsd:string","guestId":"xsd:string","installBootRequired":"xsd:boolean","instanceUuid":"xsd:string","managedBy":_self.ManagedByInfo,"memoryReservation":"xsd:int","memorySizeMB":"xsd:int","name":"xsd:string","numCpu":"xsd:int","numEthernetCards":"xsd:int","numVirtualDisks":"xsd:int","product":_self.VAppProductInfo,"template":"xsd:boolean","uuid":"xsd:string","vmPathName":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineProfileRawData = merge({"type":"VirtualMachineProfileRawData","properties":{"extensionKey":"xsd:string","objectData":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineDeviceRuntimeInfoDeviceRuntimeState = merge({"type":"VirtualMachineDeviceRuntimeInfoDeviceRuntimeState"}, _self.DynamicData);
    _self.VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState = merge({"type":"VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState","properties":{"reservationStatus":"xsd:string","vmDirectPathGen2Active":"xsd:boolean","vmDirectPathGen2InactiveReasonExtended":"xsd:string","vmDirectPathGen2InactiveReasonOther":"xsd:string[]","vmDirectPathGen2InactiveReasonVm":"xsd:string[]"}}, _self.VirtualMachineDeviceRuntimeInfoDeviceRuntimeState);
    _self.VirtualMachineDisplayTopology = merge({"type":"VirtualMachineDisplayTopology","properties":{"height":"xsd:int","width":"xsd:int","x":"xsd:int","y":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineEmptyProfileSpec = merge({"type":"VirtualMachineEmptyProfileSpec"}, _self.VirtualMachineProfileSpec);
    _self.VirtualMachineFileLayoutDiskLayout = merge({"type":"VirtualMachineFileLayoutDiskLayout","properties":{"diskFile":"xsd:string[]","key":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineFileLayoutSnapshotLayout = merge({"type":"VirtualMachineFileLayoutSnapshotLayout","properties":{"key":_self.ManagedObjectReference,"snapshotFile":"xsd:string[]"}}, _self.DynamicData);
    _self.VirtualMachineFileLayoutExFileInfo = merge({"type":"VirtualMachineFileLayoutExFileInfo","properties":{"key":"xsd:int","name":"xsd:string","size":"xsd:long","type":"xsd:string","uniqueSize":"xsd:long"}}, _self.DynamicData);
    _self.VirtualMachineFileLayoutExDiskUnit = merge({"type":"VirtualMachineFileLayoutExDiskUnit","properties":{"fileKey":"xsd:int[]"}}, _self.DynamicData);
    _self.VirtualMachineGuestSummary = merge({"type":"VirtualMachineGuestSummary","properties":{"guestFullName":"xsd:string","guestId":"xsd:string","hostName":"xsd:string","ipAddress":"xsd:string","toolsRunningStatus":"xsd:string","toolsStatus":_self.VirtualMachineToolsStatus,"toolsVersionStatus":"xsd:string","toolsVersionStatus2":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineIdeDiskDevicePartitionInfo = merge({"type":"VirtualMachineIdeDiskDevicePartitionInfo","properties":{"capacity":"xsd:int","id":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineMemoryReservationSpec = merge({"type":"VirtualMachineMemoryReservationSpec","properties":{"allocationPolicy":"xsd:string","virtualMachineReserved":"xsd:long"}}, _self.DynamicData);
    _self.VirtualMachineMessage = merge({"type":"VirtualMachineMessage","properties":{"argument":"xsd:anyType[]","id":"xsd:string","text":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineMetadataManagerVmMetadata = merge({"type":"VirtualMachineMetadataManagerVmMetadata","properties":{"metadata":"xsd:string","vmId":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineMetadataManagerVmMetadataInput = merge({"type":"VirtualMachineMetadataManagerVmMetadataInput","properties":{"operation":"xsd:string","vmMetadata":_self.VirtualMachineMetadataManagerVmMetadata}}, _self.DynamicData);
    _self.VirtualMachineMetadataManagerVmMetadataOwner = merge({"type":"VirtualMachineMetadataManagerVmMetadataOwner","properties":{"name":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineMksTicket = merge({"type":"VirtualMachineMksTicket","properties":{"cfgFile":"xsd:string","host":"xsd:string","port":"xsd:int","sslThumbprint":"xsd:string","ticket":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineQuickStats = merge({"type":"VirtualMachineQuickStats","properties":{"balloonedMemory":"xsd:int","compressedMemory":"xsd:long","consumedOverheadMemory":"xsd:int","distributedCpuEntitlement":"xsd:int","distributedMemoryEntitlement":"xsd:int","ftLatencyStatus":_self.ManagedEntityStatus,"ftLogBandwidth":"xsd:int","ftSecondaryLatency":"xsd:int","guestHeartbeatStatus":_self.ManagedEntityStatus,"guestMemoryUsage":"xsd:int","hostMemoryUsage":"xsd:int","overallCpuDemand":"xsd:int","overallCpuUsage":"xsd:int","privateMemory":"xsd:int","sharedMemory":"xsd:int","ssdSwappedMemory":"xsd:long","staticCpuEntitlement":"xsd:int","staticMemoryEntitlement":"xsd:int","swappedMemory":"xsd:int","uptimeSeconds":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineRelocateSpecDiskLocator = merge({"type":"VirtualMachineRelocateSpecDiskLocator","properties":{"datastore":_self.ManagedObjectReference,"diskBackingInfo":_self.VirtualDeviceBackingInfo,"diskId":"xsd:int","diskMoveType":"xsd:string","profile":_self.VirtualMachineProfileSpec}}, _self.DynamicData);
    _self.VirtualMachineRuntimeInfoDasProtectionState = merge({"type":"VirtualMachineRuntimeInfoDasProtectionState","properties":{"dasProtected":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineUsageOnDatastore = merge({"type":"VirtualMachineUsageOnDatastore","properties":{"committed":"xsd:long","datastore":_self.ManagedObjectReference,"uncommitted":"xsd:long","unshared":"xsd:long"}}, _self.DynamicData);
    _self.VirtualMachineStorageSummary = merge({"type":"VirtualMachineStorageSummary","properties":{"committed":"xsd:long","timestamp":"xsd:dateTime","uncommitted":"xsd:long","unshared":"xsd:long"}}, _self.DynamicData);
    _self.VirtualMachineTargetInfo = merge({"type":"VirtualMachineTargetInfo","properties":{"configurationTag":"xsd:string[]","name":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineTicket = merge({"type":"VirtualMachineTicket","properties":{"cfgFile":"xsd:string","host":"xsd:string","port":"xsd:int","sslThumbprint":"xsd:string","ticket":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineWipeResult = merge({"type":"VirtualMachineWipeResult","properties":{"diskId":"xsd:int","shrinkableDiskSpace":"xsd:long"}}, _self.DynamicData);
    _self.VirtualParallelPortDeviceBackingInfo = merge({"type":"VirtualParallelPortDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualParallelPortFileBackingInfo = merge({"type":"VirtualParallelPortFileBackingInfo"}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualPCIPassthroughDeviceBackingInfo = merge({"type":"VirtualPCIPassthroughDeviceBackingInfo","properties":{"deviceId":"xsd:string","id":"xsd:string","systemId":"xsd:string","vendorId":"xsd:short"}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualPointingDeviceDeviceBackingInfo = merge({"type":"VirtualPointingDeviceDeviceBackingInfo","properties":{"hostPointingDevice":"xsd:string"}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualSCSIPassthroughDeviceBackingInfo = merge({"type":"VirtualSCSIPassthroughDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualSerialPortDeviceBackingInfo = merge({"type":"VirtualSerialPortDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualSerialPortFileBackingInfo = merge({"type":"VirtualSerialPortFileBackingInfo"}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualSerialPortPipeBackingInfo = merge({"type":"VirtualSerialPortPipeBackingInfo","properties":{"endpoint":"xsd:string","noRxLoss":"xsd:boolean"}}, _self.VirtualDevicePipeBackingInfo);
    _self.VirtualSerialPortThinPrintBackingInfo = merge({"type":"VirtualSerialPortThinPrintBackingInfo"}, _self.VirtualDeviceBackingInfo);
    _self.VirtualSerialPortThinPrintBackingOption = merge({"type":"VirtualSerialPortThinPrintBackingOption"}, _self.VirtualDeviceBackingOption);
    _self.VirtualSerialPortURIBackingInfo = merge({"type":"VirtualSerialPortURIBackingInfo"}, _self.VirtualDeviceURIBackingInfo);
    _self.VirtualSoundCardDeviceBackingInfo = merge({"type":"VirtualSoundCardDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualSriovEthernetCardSriovBackingInfo = merge({"type":"VirtualSriovEthernetCardSriovBackingInfo","properties":{"physicalFunctionBacking":_self.VirtualPCIPassthroughDeviceBackingInfo,"virtualFunctionBacking":_self.VirtualPCIPassthroughDeviceBackingInfo,"virtualFunctionIndex":"xsd:int"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualSriovEthernetCardSriovBackingOption = merge({"type":"VirtualSriovEthernetCardSriovBackingOption"}, _self.VirtualDeviceBackingOption);
    _self.VirtualUSBControllerPciBusSlotInfo = merge({"type":"VirtualUSBControllerPciBusSlotInfo","properties":{"ehciPciSlotNumber":"xsd:int"}}, _self.VirtualDevicePciBusSlotInfo);
    _self.VirtualUSBRemoteClientBackingInfo = merge({"type":"VirtualUSBRemoteClientBackingInfo","properties":{"hostname":"xsd:string"}}, _self.VirtualDeviceRemoteDeviceBackingInfo);
    _self.VirtualUSBRemoteHostBackingInfo = merge({"type":"VirtualUSBRemoteHostBackingInfo","properties":{"hostname":"xsd:string"}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualUSBUSBBackingInfo = merge({"type":"VirtualUSBUSBBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VmConfigFileInfo = merge({"type":"VmConfigFileInfo","properties":{"configVersion":"xsd:int"}}, _self.FileInfo);
    _self.VmConfigFileQueryFlags = merge({"type":"VmConfigFileQueryFlags","properties":{"configVersion":"xsd:boolean"}}, _self.DynamicData);
    _self.VmConfigFileQueryFilter = merge({"type":"VmConfigFileQueryFilter","properties":{"matchConfigVersion":"xsd:int[]"}}, _self.DynamicData);
    _self.VmDiskFileInfo = merge({"type":"VmDiskFileInfo","properties":{"capacityKb":"xsd:long","controllerType":"xsd:string","diskExtents":"xsd:string[]","diskType":"xsd:string","hardwareVersion":"xsd:int","thin":"xsd:boolean"}}, _self.FileInfo);
    _self.VmDiskFileQueryFlags = merge({"type":"VmDiskFileQueryFlags","properties":{"capacityKb":"xsd:boolean","controllerType":"xsd:boolean","diskExtents":"xsd:boolean","diskType":"xsd:boolean","hardwareVersion":"xsd:boolean","thin":"xsd:boolean"}}, _self.DynamicData);
    _self.VmDiskFileQueryFilter = merge({"type":"VmDiskFileQueryFilter","properties":{"controllerType":"xsd:string[]","diskType":"xsd:string[]","matchHardwareVersion":"xsd:int[]","thin":"xsd:boolean"}}, _self.DynamicData);
    _self.VmfsDatastoreSpec = merge({"type":"VmfsDatastoreSpec","properties":{"diskUuid":"xsd:string"}}, _self.DynamicData);
    _self.VmLogFileInfo = merge({"type":"VmLogFileInfo"}, _self.FileInfo);
    _self.VmLogFileQuery = merge({"type":"VmLogFileQuery"}, _self.FileQuery);
    _self.VmNvramFileInfo = merge({"type":"VmNvramFileInfo"}, _self.FileInfo);
    _self.VmNvramFileQuery = merge({"type":"VmNvramFileQuery"}, _self.FileQuery);
    _self.VmSnapshotFileInfo = merge({"type":"VmSnapshotFileInfo"}, _self.FileInfo);
    _self.VmSnapshotFileQuery = merge({"type":"VmSnapshotFileQuery"}, _self.FileQuery);
    _self.VmwareDistributedVirtualSwitchVlanSpec = merge({"type":"VmwareDistributedVirtualSwitchVlanSpec"}, _self.InheritablePolicy);
    _self.VMwareIpfixConfig = merge({"type":"VMwareIpfixConfig","properties":{"activeFlowTimeout":"xsd:int","collectorIpAddress":"xsd:string","collectorPort":"xsd:int","idleFlowTimeout":"xsd:int","internalFlowsOnly":"xsd:boolean","samplingRate":"xsd:int"}}, _self.DynamicData);
    _self.VMwareDVSPvlanMapEntry = merge({"type":"VMwareDVSPvlanMapEntry","properties":{"primaryVlanId":"xsd:int","pvlanType":"xsd:string","secondaryVlanId":"xsd:int"}}, _self.DynamicData);
    _self.VMwareDVSPvlanConfigSpec = merge({"type":"VMwareDVSPvlanConfigSpec","properties":{"operation":"xsd:string","pvlanEntry":_self.VMwareDVSPvlanMapEntry}}, _self.DynamicData);
    _self.VMwareDvsLacpCapability = merge({"type":"VMwareDvsLacpCapability","properties":{"lacpSupported":"xsd:boolean","multiLacpGroupSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.VMwareDVSVspanCapability = merge({"type":"VMwareDVSVspanCapability","properties":{"dvportSupported":"xsd:boolean","encapRemoteSourceSupported":"xsd:boolean","mixedDestSupported":"xsd:boolean","remoteDestSupported":"xsd:boolean","remoteSourceSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.VMwareDvsLagIpfixConfig = merge({"type":"VMwareDvsLagIpfixConfig","properties":{"ipfixEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.VMwareUplinkPortOrderPolicy = merge({"type":"VMwareUplinkPortOrderPolicy","properties":{"activeUplinkPort":"xsd:string[]","standbyUplinkPort":"xsd:string[]"}}, _self.InheritablePolicy);
    _self.VMwareVspanPort = merge({"type":"VMwareVspanPort","properties":{"ipAddress":"xsd:string[]","portKey":"xsd:string[]","uplinkPortName":"xsd:string[]","vlans":"xsd:int[]","wildcardPortConnecteeType":"xsd:string[]"}}, _self.DynamicData);
    _self.VsanClusterConfigInfoHostDefaultInfo = merge({"type":"VsanClusterConfigInfoHostDefaultInfo","properties":{"autoClaimStorage":"xsd:boolean","uuid":"xsd:string"}}, _self.DynamicData);
    _self.VsanHostClusterStatusStateCompletionEstimate = merge({"type":"VsanHostClusterStatusStateCompletionEstimate","properties":{"completeTime":"xsd:dateTime","percentComplete":"xsd:int"}}, _self.DynamicData);
    _self.VsanHostConfigInfoClusterInfo = merge({"type":"VsanHostConfigInfoClusterInfo","properties":{"nodeUuid":"xsd:string","uuid":"xsd:string"}}, _self.DynamicData);
    _self.VsanHostIpConfig = merge({"type":"VsanHostIpConfig","properties":{"downstreamIpAddress":"xsd:string","upstreamIpAddress":"xsd:string"}}, _self.DynamicData);
    _self.VsanHostMembershipInfo = merge({"type":"VsanHostMembershipInfo","properties":{"hostname":"xsd:string","nodeUuid":"xsd:string"}}, _self.DynamicData);
    _self.VsanHostRuntimeInfoDiskIssue = merge({"type":"VsanHostRuntimeInfoDiskIssue","properties":{"diskId":"xsd:string","issue":"xsd:string"}}, _self.DynamicData);
    _self.WaitOptions = merge({"type":"WaitOptions","properties":{"maxObjectUpdates":"xsd:int","maxWaitSeconds":"xsd:int"}}, _self.DynamicData);
    _self.WinNetBIOSConfigInfo = merge({"type":"WinNetBIOSConfigInfo","properties":{"primaryWINS":"xsd:string","secondaryWINS":"xsd:string"}}, _self.NetBIOSConfigInfo);
    _self.AboutInfo = merge({"type":"AboutInfo","properties":{"apiType":"xsd:string","apiVersion":"xsd:string","build":"xsd:string","fullName":"xsd:string","instanceUuid":"xsd:string","licenseProductName":"xsd:string","licenseProductVersion":"xsd:string","localeBuild":"xsd:string","localeVersion":"xsd:string","name":"xsd:string","osType":"xsd:string","productLineId":"xsd:string","vendor":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.HostAccountSpec = merge({"type":"HostAccountSpec","properties":{"description":"xsd:string","id":"xsd:string","password":"xsd:string"}}, _self.DynamicData);
    _self.Action = merge({"type":"Action"}, _self.DynamicData);
    _self.AfterStartupTaskScheduler = merge({"type":"AfterStartupTaskScheduler","properties":{"minute":"xsd:int"}}, _self.TaskScheduler);
    _self.AlarmAction = merge({"type":"AlarmAction"}, _self.DynamicData);
    _self.AlarmExpression = merge({"type":"AlarmExpression"}, _self.DynamicData);
    _self.AlarmSetting = merge({"type":"AlarmSetting","properties":{"reportingFrequency":"xsd:int","toleranceRange":"xsd:int"}}, _self.DynamicData);
    _self.AlarmSpec = merge({"type":"AlarmSpec","properties":{"action":_self.AlarmAction,"actionFrequency":"xsd:int","description":"xsd:string","enabled":"xsd:boolean","expression":_self.AlarmExpression,"name":"xsd:string","setting":_self.AlarmSetting,"systemName":"xsd:string"}}, _self.DynamicData);
    _self.AlarmState = merge({"type":"AlarmState","properties":{"acknowledged":"xsd:boolean","acknowledgedByUser":"xsd:string","acknowledgedTime":"xsd:dateTime","alarm":_self.ManagedObjectReference,"entity":_self.ManagedObjectReference,"key":"xsd:string","overallStatus":_self.ManagedEntityStatus,"time":"xsd:dateTime"}}, _self.DynamicData);
    _self.AlarmTriggeringActionTransitionSpec = merge({"type":"AlarmTriggeringActionTransitionSpec","properties":{"finalState":_self.ManagedEntityStatus,"repeats":"xsd:boolean","startState":_self.ManagedEntityStatus}}, _self.DynamicData);
    _self.AndAlarmExpression = merge({"type":"AndAlarmExpression","properties":{"expression":_self.AlarmExpression}}, _self.AlarmExpression);
    _self.AnswerFileCreateSpec = merge({"type":"AnswerFileCreateSpec"}, _self.DynamicData);
    _self.AnswerFileSerializedCreateSpec = merge({"type":"AnswerFileSerializedCreateSpec","properties":{"answerFileConfigString":"xsd:string"}}, _self.AnswerFileCreateSpec);
    _self.LocalizableMessage = merge({"type":"LocalizableMessage","properties":{"arg":_self.KeyAnyValue,"key":"xsd:string","message":"xsd:string"}}, _self.DynamicData);
    _self.ProfilePropertyPath = merge({"type":"ProfilePropertyPath","properties":{"parameterId":"xsd:string","policyId":"xsd:string","profilePath":"xsd:string"}}, _self.DynamicData);
    _self.AnswerFileUpdateFailure = merge({"type":"AnswerFileUpdateFailure","properties":{"errMsg":_self.LocalizableMessage,"userInputPath":_self.ProfilePropertyPath}}, _self.DynamicData);
    _self.ApplyStorageRecommendationResult = merge({"type":"ApplyStorageRecommendationResult","properties":{"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ArrayUpdateSpec = merge({"type":"ArrayUpdateSpec","properties":{"operation":_self.ArrayUpdateOperation,"removeKey":"xsd:anyType"}}, _self.DynamicData);
    _self.AuthorizationPrivilege = merge({"type":"AuthorizationPrivilege","properties":{"name":"xsd:string","onParent":"xsd:boolean","privGroupName":"xsd:string","privId":"xsd:string"}}, _self.DynamicData);
    _self.Description = merge({"type":"Description","properties":{"label":"xsd:string","summary":"xsd:string"}}, _self.DynamicData);
    _self.AutoStartDefaults = merge({"type":"AutoStartDefaults","properties":{"enabled":"xsd:boolean","startDelay":"xsd:int","stopAction":"xsd:string","stopDelay":"xsd:int","waitForHeartbeat":"xsd:boolean"}}, _self.DynamicData);
    _self.AutoStartPowerInfo = merge({"type":"AutoStartPowerInfo","properties":{"key":_self.ManagedObjectReference,"startAction":"xsd:string","startDelay":"xsd:int","startOrder":"xsd:int","stopAction":"xsd:string","stopDelay":"xsd:int","waitForHeartbeat":_self.AutoStartWaitHeartbeatSetting}}, _self.DynamicData);
    _self.BoolOption = merge({"type":"BoolOption","properties":{"defaultValue":"xsd:boolean","supported":"xsd:boolean"}}, _self.OptionType);
    _self.BoolPolicy = merge({"type":"BoolPolicy","properties":{"value":"xsd:boolean"}}, _self.InheritablePolicy);
    _self.ClusterAction = merge({"type":"ClusterAction","properties":{"target":_self.ManagedObjectReference,"type":"xsd:string"}}, _self.DynamicData);
    _self.ClusterActionHistory = merge({"type":"ClusterActionHistory","properties":{"action":_self.ClusterAction,"time":"xsd:dateTime"}}, _self.DynamicData);
    _self.ClusterAttemptedVmInfo = merge({"type":"ClusterAttemptedVmInfo","properties":{"task":_self.ManagedObjectReference,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ProfileEventArgument = merge({"type":"ProfileEventArgument","properties":{"name":"xsd:string","profile":_self.ManagedObjectReference}}, _self.EventArgument);
    _self.ClusterDrsMigration = merge({"type":"ClusterDrsMigration","properties":{"cpuLoad":"xsd:int","destination":_self.ManagedObjectReference,"destinationCpuLoad":"xsd:int","destinationMemoryLoad":"xsd:long","key":"xsd:string","memoryLoad":"xsd:long","source":_self.ManagedObjectReference,"sourceCpuLoad":"xsd:int","sourceMemoryLoad":"xsd:long","time":"xsd:dateTime","vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterRecommendation = merge({"type":"ClusterRecommendation","properties":{"action":_self.ClusterAction,"key":"xsd:string","prerequisite":"xsd:string[]","rating":"xsd:int","reason":"xsd:string","reasonText":"xsd:string","target":_self.ManagedObjectReference,"time":"xsd:dateTime","type":"xsd:string"}}, _self.DynamicData);
    _self.ClusterDasAdmissionControlInfo = merge({"type":"ClusterDasAdmissionControlInfo"}, _self.DynamicData);
    _self.ClusterDasData = merge({"type":"ClusterDasData"}, _self.DynamicData);
    _self.ClusterDrsVmConfigInfo = merge({"type":"ClusterDrsVmConfigInfo","properties":{"behavior":_self.DrsBehavior,"enabled":"xsd:boolean","key":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterRuleInfo = merge({"type":"ClusterRuleInfo","properties":{"enabled":"xsd:boolean","inCompliance":"xsd:boolean","key":"xsd:int","mandatory":"xsd:boolean","name":"xsd:string","status":_self.ManagedEntityStatus,"userCreated":"xsd:boolean"}}, _self.DynamicData);
    _self.ClusterDpmHostConfigInfo = merge({"type":"ClusterDpmHostConfigInfo","properties":{"behavior":_self.DpmBehavior,"enabled":"xsd:boolean","key":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterGroupInfo = merge({"type":"ClusterGroupInfo","properties":{"name":"xsd:string","userCreated":"xsd:boolean"}}, _self.DynamicData);
    _self.VsanClusterConfigInfo = merge({"type":"VsanClusterConfigInfo","properties":{"defaultConfig":_self.VsanClusterConfigInfoHostDefaultInfo,"enabled":"xsd:boolean"}}, _self.DynamicData);
    _self.ClusterDrsVmConfigSpec = merge({"type":"ClusterDrsVmConfigSpec","properties":{"info":_self.ClusterDrsVmConfigInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterRuleSpec = merge({"type":"ClusterRuleSpec","properties":{"info":_self.ClusterRuleInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterDpmHostConfigSpec = merge({"type":"ClusterDpmHostConfigSpec","properties":{"info":_self.ClusterDpmHostConfigInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterGroupSpec = merge({"type":"ClusterGroupSpec","properties":{"info":_self.ClusterGroupInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterDasAamNodeState = merge({"type":"ClusterDasAamNodeState","properties":{"configState":"xsd:string","host":_self.ManagedObjectReference,"name":"xsd:string","runtimeState":"xsd:string"}}, _self.DynamicData);
    _self.ClusterDasAdmissionControlPolicy = merge({"type":"ClusterDasAdmissionControlPolicy"}, _self.DynamicData);
    _self.ClusterDasHostInfo = merge({"type":"ClusterDasHostInfo"}, _self.DynamicData);
    _self.DasHeartbeatDatastoreInfo = merge({"type":"DasHeartbeatDatastoreInfo","properties":{"datastore":_self.ManagedObjectReference,"hosts":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.OptionValue = merge({"type":"OptionValue","properties":{"key":"xsd:string","value":"xsd:anyType"}}, _self.DynamicData);
    _self.ClusterDasDataSummary = merge({"type":"ClusterDasDataSummary","properties":{"clusterConfigVersion":"xsd:long","compatListVersion":"xsd:long","hostListVersion":"xsd:long"}}, _self.ClusterDasData);
    _self.ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots = merge({"type":"ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots","properties":{"host":_self.ManagedObjectReference,"slots":"xsd:int"}}, _self.DynamicData);
    _self.ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo = merge({"type":"ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo","properties":{"cpuMHz":"xsd:int","memoryMB":"xsd:int","numVcpus":"xsd:int"}}, _self.DynamicData);
    _self.ClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots = merge({"type":"ClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots","properties":{"slots":"xsd:int","vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterDasFdmHostState = merge({"type":"ClusterDasFdmHostState","properties":{"state":"xsd:string","stateReporter":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterDasHostRecommendation = merge({"type":"ClusterDasHostRecommendation","properties":{"drsRating":"xsd:int","host":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterVmToolsMonitoringSettings = merge({"type":"ClusterVmToolsMonitoringSettings","properties":{"clusterSettings":"xsd:boolean","enabled":"xsd:boolean","failureInterval":"xsd:int","maxFailures":"xsd:int","maxFailureWindow":"xsd:int","minUpTime":"xsd:int","vmMonitoring":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDiskId = merge({"type":"VirtualDiskId","properties":{"diskId":"xsd:int","vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterFailoverHostAdmissionControlInfoHostStatus = merge({"type":"ClusterFailoverHostAdmissionControlInfoHostStatus","properties":{"host":_self.ManagedObjectReference,"status":_self.ManagedEntityStatus}}, _self.DynamicData);
    _self.ClusterFailoverHostAdmissionControlPolicy = merge({"type":"ClusterFailoverHostAdmissionControlPolicy","properties":{"failoverHosts":_self.ManagedObjectReference}}, _self.ClusterDasAdmissionControlPolicy);
    _self.ClusterFailoverLevelAdmissionControlInfo = merge({"type":"ClusterFailoverLevelAdmissionControlInfo","properties":{"currentFailoverLevel":"xsd:int"}}, _self.ClusterDasAdmissionControlInfo);
    _self.ClusterSlotPolicy = merge({"type":"ClusterSlotPolicy"}, _self.DynamicData);
    _self.ClusterFailoverResourcesAdmissionControlInfo = merge({"type":"ClusterFailoverResourcesAdmissionControlInfo","properties":{"currentCpuFailoverResourcesPercent":"xsd:int","currentMemoryFailoverResourcesPercent":"xsd:int"}}, _self.ClusterDasAdmissionControlInfo);
    _self.ClusterFailoverResourcesAdmissionControlPolicy = merge({"type":"ClusterFailoverResourcesAdmissionControlPolicy","properties":{"cpuFailoverResourcesPercent":"xsd:int","memoryFailoverResourcesPercent":"xsd:int"}}, _self.ClusterDasAdmissionControlPolicy);
    _self.ClusterFixedSizeSlotPolicy = merge({"type":"ClusterFixedSizeSlotPolicy","properties":{"cpu":"xsd:int","memory":"xsd:int"}}, _self.ClusterSlotPolicy);
    _self.ClusterHostGroup = merge({"type":"ClusterHostGroup","properties":{"host":_self.ManagedObjectReference}}, _self.ClusterGroupInfo);
    _self.ClusterHostPowerAction = merge({"type":"ClusterHostPowerAction","properties":{"cpuCapacityMHz":"xsd:int","memCapacityMB":"xsd:int","operationType":_self.HostPowerOperationType,"powerConsumptionWatt":"xsd:int"}}, _self.ClusterAction);
    _self.ClusterHostRecommendation = merge({"type":"ClusterHostRecommendation","properties":{"host":_self.ManagedObjectReference,"rating":"xsd:int"}}, _self.DynamicData);
    _self.ClusterInitialPlacementAction = merge({"type":"ClusterInitialPlacementAction","properties":{"pool":_self.ManagedObjectReference,"targetHost":_self.ManagedObjectReference}}, _self.ClusterAction);
    _self.ClusterMigrationAction = merge({"type":"ClusterMigrationAction","properties":{"drsMigration":_self.ClusterDrsMigration}}, _self.ClusterAction);
    _self.ClusterProfileCreateSpec = merge({"type":"ClusterProfileCreateSpec"}, _self.ProfileCreateSpec);
    _self.ClusterVmGroup = merge({"type":"ClusterVmGroup","properties":{"vm":_self.ManagedObjectReference}}, _self.ClusterGroupInfo);
    _self.ClusterVmHostRuleInfo = merge({"type":"ClusterVmHostRuleInfo","properties":{"affineHostGroupName":"xsd:string","antiAffineHostGroupName":"xsd:string","vmGroupName":"xsd:string"}}, _self.ClusterRuleInfo);
    _self.ComplianceFailure = merge({"type":"ComplianceFailure","properties":{"expressionName":"xsd:string","failureType":"xsd:string","message":_self.LocalizableMessage}}, _self.DynamicData);
    _self.ComplianceLocator = merge({"type":"ComplianceLocator","properties":{"applyPath":_self.ProfilePropertyPath,"expressionName":"xsd:string"}}, _self.DynamicData);
    _self.ProfileExpression = merge({"type":"ProfileExpression","properties":{"displayName":"xsd:string","id":"xsd:string","negated":"xsd:boolean"}}, _self.DynamicData);
    _self.ComplianceResult = merge({"type":"ComplianceResult","properties":{"checkTime":"xsd:dateTime","complianceStatus":"xsd:string","entity":_self.ManagedObjectReference,"failure":_self.ComplianceFailure,"profile":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.PolicyOption = merge({"type":"PolicyOption","properties":{"id":"xsd:string","parameter":_self.KeyAnyValue}}, _self.DynamicData);
    _self.ComputeResourceConfigInfo = merge({"type":"ComputeResourceConfigInfo","properties":{"defaultHardwareVersionKey":"xsd:string","spbmEnabled":"xsd:boolean","vmSwapPlacement":"xsd:string"}}, _self.DynamicData);
    _self.ComputeResourceSummary = merge({"type":"ComputeResourceSummary","properties":{"effectiveCpu":"xsd:int","effectiveMemory":"xsd:long","numCpuCores":"xsd:short","numCpuThreads":"xsd:short","numEffectiveHosts":"xsd:int","numHosts":"xsd:int","overallStatus":_self.ManagedEntityStatus,"totalCpu":"xsd:int","totalMemory":"xsd:long"}}, _self.DynamicData);
    _self.ComputeResourceConfigSpec = merge({"type":"ComputeResourceConfigSpec","properties":{"defaultHardwareVersionKey":"xsd:string","spbmEnabled":"xsd:boolean","vmSwapPlacement":"xsd:string"}}, _self.DynamicData);
    _self.ComputeResourceHostSPBMLicenseInfo = merge({"type":"ComputeResourceHostSPBMLicenseInfo","properties":{"host":_self.ManagedObjectReference,"licenseState":_self.ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState}}, _self.DynamicData);
    _self.VirtualMachineCdromInfo = merge({"type":"VirtualMachineCdromInfo"}, _self.VirtualMachineTargetInfo);
    _self.DistributedVirtualPortgroupInfo = merge({"type":"DistributedVirtualPortgroupInfo","properties":{"portgroup":_self.ManagedObjectReference,"portgroupKey":"xsd:string","portgroupName":"xsd:string","portgroupType":"xsd:string","switchName":"xsd:string","switchUuid":"xsd:string","uplinkPortgroup":"xsd:boolean"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchInfo = merge({"type":"DistributedVirtualSwitchInfo","properties":{"distributedVirtualSwitch":_self.ManagedObjectReference,"switchName":"xsd:string","switchUuid":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineFloppyInfo = merge({"type":"VirtualMachineFloppyInfo"}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineLegacyNetworkSwitchInfo = merge({"type":"VirtualMachineLegacyNetworkSwitchInfo","properties":{"name":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineNetworkInfo = merge({"type":"VirtualMachineNetworkInfo","properties":{"network":_self.NetworkSummary}}, _self.VirtualMachineTargetInfo);
    _self.OpaqueNetworkTargetInfo = merge({"type":"OpaqueNetworkTargetInfo","properties":{"network":_self.OpaqueNetworkSummary}}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineParallelInfo = merge({"type":"VirtualMachineParallelInfo"}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachinePciPassthroughInfo = merge({"type":"VirtualMachinePciPassthroughInfo","properties":{"pciDevice":_self.HostPciDevice,"systemId":"xsd:string"}}, _self.VirtualMachineTargetInfo);
    _self.ResourcePoolRuntimeInfo = merge({"type":"ResourcePoolRuntimeInfo","properties":{"cpu":_self.ResourcePoolResourceUsage,"memory":_self.ResourcePoolResourceUsage,"overallStatus":_self.ManagedEntityStatus}}, _self.DynamicData);
    _self.VirtualMachineScsiPassthroughInfo = merge({"type":"VirtualMachineScsiPassthroughInfo","properties":{"physicalUnitNumber":"xsd:int","scsiClass":"xsd:string","vendor":"xsd:string"}}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineSerialInfo = merge({"type":"VirtualMachineSerialInfo"}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineSoundInfo = merge({"type":"VirtualMachineSoundInfo"}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineSriovInfo = merge({"type":"VirtualMachineSriovInfo","properties":{"pnic":"xsd:string","virtualFunction":"xsd:boolean"}}, _self.VirtualMachinePciPassthroughInfo);
    _self.ConflictingConfigurationConfig = merge({"type":"ConflictingConfigurationConfig","properties":{"entity":_self.ManagedObjectReference,"propertyPath":"xsd:string"}}, _self.DynamicData);
    _self.ContainerView = merge({"type":"ContainerView","properties":{"container":_self.ManagedObjectReference,"recursive":"xsd:boolean","type":"xsd:string[]"},"methods":{}}, _self.ManagedObjectView);
    _self.CreateTaskAction = merge({"type":"CreateTaskAction","properties":{"cancelable":"xsd:boolean","taskTypeId":"xsd:string"}}, _self.Action);
    _self.PrivilegePolicyDef = merge({"type":"PrivilegePolicyDef","properties":{"createPrivilege":"xsd:string","deletePrivilege":"xsd:string","readPrivilege":"xsd:string","updatePrivilege":"xsd:string"}}, _self.DynamicData);
    _self.CustomFieldValue = merge({"type":"CustomFieldValue","properties":{"key":"xsd:int"}}, _self.DynamicData);
    _self.CustomizationGlobalIPSettings = merge({"type":"CustomizationGlobalIPSettings","properties":{"dnsServerList":"xsd:string[]","dnsSuffixList":"xsd:string[]"}}, _self.DynamicData);
    _self.CustomizationGuiRunOnce = merge({"type":"CustomizationGuiRunOnce","properties":{"commandList":"xsd:string[]"}}, _self.DynamicData);
    _self.CustomizationPassword = merge({"type":"CustomizationPassword","properties":{"plainText":"xsd:boolean","value":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationIdentification = merge({"type":"CustomizationIdentification","properties":{"domainAdmin":"xsd:string","domainAdminPassword":_self.CustomizationPassword,"joinDomain":"xsd:string","joinWorkgroup":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationIdentitySettings = merge({"type":"CustomizationIdentitySettings"}, _self.DynamicData);
    _self.CustomizationIpGenerator = merge({"type":"CustomizationIpGenerator"}, _self.DynamicData);
    _self.CustomizationIpV6Generator = merge({"type":"CustomizationIpV6Generator"}, _self.DynamicData);
    _self.CustomizationLicenseFilePrintData = merge({"type":"CustomizationLicenseFilePrintData","properties":{"autoMode":_self.CustomizationLicenseDataMode,"autoUsers":"xsd:int"}}, _self.DynamicData);
    _self.CustomizationName = merge({"type":"CustomizationName"}, _self.DynamicData);
    _self.CustomizationOptions = merge({"type":"CustomizationOptions"}, _self.DynamicData);
    _self.CustomizationPrefixName = merge({"type":"CustomizationPrefixName","properties":{"base":"xsd:string"}}, _self.CustomizationName);
    _self.CustomizationSpecInfo = merge({"type":"CustomizationSpecInfo","properties":{"changeVersion":"xsd:string","description":"xsd:string","lastUpdateTime":"xsd:dateTime","name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationSpecManager = {"type":"CustomizationSpecManager","properties":{"encryptionKey":"xsd:byte[]","info":_self.CustomizationSpecInfo},"methods":{"CheckCustomizationResources":{"params":{"_this":"ManagedObjectReference","guestOs":"xsd:string"},"returns":null},"CreateCustomizationSpec":{"params":{"_this":"ManagedObjectReference","item":"CustomizationSpecItem"},"returns":null},"CustomizationSpecItemToXml":{"params":{"_this":"ManagedObjectReference","item":"CustomizationSpecItem"},"returns":"xsd:string"},"DeleteCustomizationSpec":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":null},"DoesCustomizationSpecExist":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"xsd:boolean"},"DuplicateCustomizationSpec":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","newName":"xsd:string"},"returns":null},"GetCustomizationSpec":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"CustomizationSpecItem"},"OverwriteCustomizationSpec":{"params":{"_this":"ManagedObjectReference","item":"CustomizationSpecItem"},"returns":null},"RenameCustomizationSpec":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","newName":"xsd:string"},"returns":null},"XmlToCustomizationSpecItem":{"params":{"_this":"ManagedObjectReference","specItemXml":"xsd:string"},"returns":"CustomizationSpecItem"}}};
    _self.CustomizationStatelessIpV6Generator = merge({"type":"CustomizationStatelessIpV6Generator"}, _self.CustomizationIpV6Generator);
    _self.CustomizationUserData = merge({"type":"CustomizationUserData","properties":{"computerName":_self.CustomizationName,"fullName":"xsd:string","orgName":"xsd:string","productId":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationSysprepText = merge({"type":"CustomizationSysprepText","properties":{"value":"xsd:string"}}, _self.CustomizationIdentitySettings);
    _self.CustomizationUnknownIpGenerator = merge({"type":"CustomizationUnknownIpGenerator"}, _self.CustomizationIpGenerator);
    _self.CustomizationUnknownIpV6Generator = merge({"type":"CustomizationUnknownIpV6Generator"}, _self.CustomizationIpV6Generator);
    _self.CustomizationUnknownName = merge({"type":"CustomizationUnknownName"}, _self.CustomizationName);
    _self.CustomizationVirtualMachineName = merge({"type":"CustomizationVirtualMachineName"}, _self.CustomizationName);
    _self.CustomizationWinOptions = merge({"type":"CustomizationWinOptions","properties":{"changeSID":"xsd:boolean","deleteAccounts":"xsd:boolean","reboot":_self.CustomizationSysprepRebootOption}}, _self.CustomizationOptions);
    _self.DatabaseSizeEstimate = merge({"type":"DatabaseSizeEstimate","properties":{"size":"xsd:long"}}, _self.DynamicData);
    _self.InventoryDescription = merge({"type":"InventoryDescription","properties":{"numClusters":"xsd:int","numCpuDev":"xsd:int","numDiskDev":"xsd:int","numHosts":"xsd:int","numNetDev":"xsd:int","numResourcePools":"xsd:int","numvCpuDev":"xsd:int","numvDiskDev":"xsd:int","numVirtualMachines":"xsd:int","numvNetDev":"xsd:int"}}, _self.DynamicData);
    _self.PerformanceStatisticsDescription = merge({"type":"PerformanceStatisticsDescription","properties":{"intervals":_self.PerfInterval}}, _self.DynamicData);
    _self.DatacenterConfigInfo = merge({"type":"DatacenterConfigInfo","properties":{"defaultHardwareVersionKey":"xsd:string"}}, _self.DynamicData);
    _self.DatacenterConfigSpec = merge({"type":"DatacenterConfigSpec","properties":{"defaultHardwareVersionKey":"xsd:string"}}, _self.DynamicData);
    _self.DatacenterMismatchArgument = merge({"type":"DatacenterMismatchArgument","properties":{"entity":_self.ManagedObjectReference,"inputDatacenter":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.DatastoreCapability = merge({"type":"DatastoreCapability","properties":{"directoryHierarchySupported":"xsd:boolean","nativeSnapshotSupported":"xsd:boolean","perFileThinProvisioningSupported":"xsd:boolean","rawDiskMappingsSupported":"xsd:boolean","seSparseSupported":"xsd:boolean","storageIORMSupported":"xsd:boolean","topLevelDirectoryCreateSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.DatastoreInfo = merge({"type":"DatastoreInfo","properties":{"containerId":"xsd:string","freeSpace":"xsd:long","maxFileSize":"xsd:long","maxVirtualDiskCapacity":"xsd:long","name":"xsd:string","timestamp":"xsd:dateTime","url":"xsd:string"}}, _self.DynamicData);
    _self.StorageIORMInfo = merge({"type":"StorageIORMInfo","properties":{"congestionThreshold":"xsd:int","congestionThresholdMode":"xsd:string","enabled":"xsd:boolean","percentOfPeakThroughput":"xsd:int","statsAggregationDisabled":"xsd:boolean","statsCollectionEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.DatastoreSummary = merge({"type":"DatastoreSummary","properties":{"accessible":"xsd:boolean","capacity":"xsd:long","datastore":_self.ManagedObjectReference,"freeSpace":"xsd:long","maintenanceMode":"xsd:string","multipleHostAccess":"xsd:boolean","name":"xsd:string","type":"xsd:string","uncommitted":"xsd:long","url":"xsd:string"}}, _self.DynamicData);
    _self.HostMountInfo = merge({"type":"HostMountInfo","properties":{"accessible":"xsd:boolean","accessMode":"xsd:string","inaccessibleReason":"xsd:string","mounted":"xsd:boolean","path":"xsd:string"}}, _self.DynamicData);
    _self.DatastoreMountPathDatastorePair = merge({"type":"DatastoreMountPathDatastorePair","properties":{"datastore":_self.ManagedObjectReference,"oldMountPath":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineDatastoreVolumeOption = merge({"type":"VirtualMachineDatastoreVolumeOption","properties":{"fileSystemType":"xsd:string","majorVersion":"xsd:int"}}, _self.DynamicData);
    _self.DeviceBackedVirtualDiskSpec = merge({"type":"DeviceBackedVirtualDiskSpec","properties":{"device":"xsd:string"}}, _self.VirtualDiskSpec);
    _self.DiagnosticManagerBundleInfo = merge({"type":"DiagnosticManagerBundleInfo","properties":{"system":_self.ManagedObjectReference,"url":"xsd:string"}}, _self.DynamicData);
    _self.DiagnosticManagerLogDescriptor = merge({"type":"DiagnosticManagerLogDescriptor","properties":{"creator":"xsd:string","fileName":"xsd:string","format":"xsd:string","info":_self.Description,"key":"xsd:string","mimeType":"xsd:string"}}, _self.DynamicData);
    _self.DiagnosticManagerLogHeader = merge({"type":"DiagnosticManagerLogHeader","properties":{"lineEnd":"xsd:int","lineStart":"xsd:int","lineText":"xsd:string[]"}}, _self.DynamicData);
    _self.DiskChangeExtent = merge({"type":"DiskChangeExtent","properties":{"length":"xsd:long","start":"xsd:long"}}, _self.DynamicData);
    _self.DiskChangeInfo = merge({"type":"DiskChangeInfo","properties":{"changedArea":_self.DiskChangeExtent,"length":"xsd:long","startOffset":"xsd:long"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchPortConnectee = merge({"type":"DistributedVirtualSwitchPortConnectee","properties":{"addressHint":"xsd:string","connectedEntity":_self.ManagedObjectReference,"nicKey":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchProductSpec = merge({"type":"DistributedVirtualSwitchProductSpec","properties":{"build":"xsd:string","bundleId":"xsd:string","bundleUrl":"xsd:string","forwardingClass":"xsd:string","name":"xsd:string","vendor":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchHostMemberRuntimeState = merge({"type":"DistributedVirtualSwitchHostMemberRuntimeState","properties":{"currentMaxProxySwitchPorts":"xsd:int"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchHostMemberBacking = merge({"type":"DistributedVirtualSwitchHostMemberBacking"}, _self.DynamicData);
    _self.DistributedVirtualSwitchKeyedOpaqueBlob = merge({"type":"DistributedVirtualSwitchKeyedOpaqueBlob","properties":{"key":"xsd:string","opaqueData":"xsd:string"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchHostMemberConfigSpec = merge({"type":"DistributedVirtualSwitchHostMemberConfigSpec","properties":{"backing":_self.DistributedVirtualSwitchHostMemberBacking,"host":_self.ManagedObjectReference,"maxProxySwitchPorts":"xsd:int","operation":"xsd:string","vendorSpecificConfig":_self.DistributedVirtualSwitchKeyedOpaqueBlob}}, _self.DynamicData);
    _self.DistributedVirtualSwitchHostMemberPnicSpec = merge({"type":"DistributedVirtualSwitchHostMemberPnicSpec","properties":{"connectionCookie":"xsd:int","pnicDevice":"xsd:string","uplinkPortgroupKey":"xsd:string","uplinkPortKey":"xsd:string"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchHostProductSpec = merge({"type":"DistributedVirtualSwitchHostProductSpec","properties":{"productLineId":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchManagerDvsProductSpec = merge({"type":"DistributedVirtualSwitchManagerDvsProductSpec","properties":{"distributedVirtualSwitch":_self.ManagedObjectReference,"newSwitchProductSpec":_self.DistributedVirtualSwitchProductSpec}}, _self.DynamicData);
    _self.DistributedVirtualSwitchManagerHostContainer = merge({"type":"DistributedVirtualSwitchManagerHostContainer","properties":{"container":_self.ManagedObjectReference,"recursive":"xsd:boolean"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchManagerHostDvsFilterSpec = merge({"type":"DistributedVirtualSwitchManagerHostDvsFilterSpec","properties":{"inclusive":"xsd:boolean"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchManagerHostDvsMembershipFilter = merge({"type":"DistributedVirtualSwitchManagerHostDvsMembershipFilter","properties":{"distributedVirtualSwitch":_self.ManagedObjectReference}}, _self.DistributedVirtualSwitchManagerHostDvsFilterSpec);
    _self.DistributedVirtualSwitchPortConnection = merge({"type":"DistributedVirtualSwitchPortConnection","properties":{"connectionCookie":"xsd:int","portgroupKey":"xsd:string","portKey":"xsd:string","switchUuid":"xsd:string"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchPortCriteria = merge({"type":"DistributedVirtualSwitchPortCriteria","properties":{"active":"xsd:boolean","connected":"xsd:boolean","inside":"xsd:boolean","portgroupKey":"xsd:string[]","portKey":"xsd:string[]","scope":_self.ManagedObjectReference,"uplinkPort":"xsd:boolean"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchPortStatistics = merge({"type":"DistributedVirtualSwitchPortStatistics","properties":{"bytesInBroadcast":"xsd:long","bytesInMulticast":"xsd:long","bytesInUnicast":"xsd:long","bytesOutBroadcast":"xsd:long","bytesOutMulticast":"xsd:long","bytesOutUnicast":"xsd:long","packetsInBroadcast":"xsd:long","packetsInDropped":"xsd:long","packetsInException":"xsd:long","packetsInMulticast":"xsd:long","packetsInUnicast":"xsd:long","packetsOutBroadcast":"xsd:long","packetsOutDropped":"xsd:long","packetsOutException":"xsd:long","packetsOutMulticast":"xsd:long","packetsOutUnicast":"xsd:long"}}, _self.DynamicData);
    _self.DVPortgroupPolicy = merge({"type":"DVPortgroupPolicy","properties":{"blockOverrideAllowed":"xsd:boolean","livePortMovingAllowed":"xsd:boolean","networkResourcePoolOverrideAllowed":"xsd:boolean","portConfigResetAtDisconnect":"xsd:boolean","shapingOverrideAllowed":"xsd:boolean","trafficFilterOverrideAllowed":"xsd:boolean","vendorConfigOverrideAllowed":"xsd:boolean"}}, _self.DynamicData);
    _self.DVPortgroupSelection = merge({"type":"DVPortgroupSelection","properties":{"dvsUuid":"xsd:string","portgroupKey":"xsd:string[]"}}, _self.SelectionSet);
    _self.StringPolicy = merge({"type":"StringPolicy","properties":{"value":"xsd:string"}}, _self.InheritablePolicy);
    _self.DVSVendorSpecificConfig = merge({"type":"DVSVendorSpecificConfig","properties":{"keyValue":_self.DistributedVirtualSwitchKeyedOpaqueBlob}}, _self.InheritablePolicy);
    _self.NumericRange = merge({"type":"NumericRange","properties":{"end":"xsd:int","start":"xsd:int"}}, _self.DynamicData);
    _self.DVSBackupRestoreCapability = merge({"type":"DVSBackupRestoreCapability","properties":{"backupRestoreSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.DVSContactInfo = merge({"type":"DVSContactInfo","properties":{"contact":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.DVSHealthCheckConfig = merge({"type":"DVSHealthCheckConfig","properties":{"enable":"xsd:boolean","interval":"xsd:int"}}, _self.DynamicData);
    _self.DVSPolicy = merge({"type":"DVSPolicy","properties":{"autoPreInstallAllowed":"xsd:boolean","autoUpgradeAllowed":"xsd:boolean","partialUpgradeAllowed":"xsd:boolean"}}, _self.DynamicData);
    _self.DVSUplinkPortPolicy = merge({"type":"DVSUplinkPortPolicy"}, _self.DynamicData);
    _self.IntPolicy = merge({"type":"IntPolicy","properties":{"value":"xsd:int"}}, _self.InheritablePolicy);
    _self.DVSHealthCheckCapability = merge({"type":"DVSHealthCheckCapability"}, _self.DynamicData);
    _self.DVSNetworkResourceManagementCapability = merge({"type":"DVSNetworkResourceManagementCapability","properties":{"networkResourceManagementSupported":"xsd:boolean","networkResourcePoolHighShareValue":"xsd:int","qosSupported":"xsd:boolean","userDefinedNetworkResourcePoolsSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.DVSRollbackCapability = merge({"type":"DVSRollbackCapability","properties":{"rollbackSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.DvsFilterParameter = merge({"type":"DvsFilterParameter","properties":{"parameters":"xsd:string[]"}}, _self.DynamicData);
    _self.HostMemberHealthCheckResult = merge({"type":"HostMemberHealthCheckResult","properties":{"summary":"xsd:string"}}, _self.DynamicData);
    _self.IpAddress = merge({"type":"IpAddress"}, _self.NegatableExpression);
    _self.DvsIpPort = merge({"type":"DvsIpPort"}, _self.NegatableExpression);
    _self.IntExpression = merge({"type":"IntExpression","properties":{"value":"xsd:int"}}, _self.NegatableExpression);
    _self.DvsIpPortRange = merge({"type":"DvsIpPortRange","properties":{"endPortNumber":"xsd:int","startPortNumber":"xsd:int"}}, _self.DvsIpPort);
    _self.MacAddress = merge({"type":"MacAddress"}, _self.NegatableExpression);
    _self.DVSManagerDvsConfigTarget = merge({"type":"DVSManagerDvsConfigTarget","properties":{"distributedVirtualPortgroup":_self.DistributedVirtualPortgroupInfo,"distributedVirtualSwitch":_self.DistributedVirtualSwitchInfo}}, _self.DynamicData);
    _self.DVSNameArrayUplinkPortPolicy = merge({"type":"DVSNameArrayUplinkPortPolicy","properties":{"uplinkPortName":"xsd:string[]"}}, _self.DVSUplinkPortPolicy);
    _self.SharesInfo = merge({"type":"SharesInfo","properties":{"level":_self.SharesLevel,"shares":"xsd:int"}}, _self.DynamicData);
    _self.DvsNetworkRuleAction = merge({"type":"DvsNetworkRuleAction"}, _self.DynamicData);
    _self.DvsNetworkRuleQualifier = merge({"type":"DvsNetworkRuleQualifier","properties":{"key":"xsd:string"}}, _self.DynamicData);
    _self.DvsPuntNetworkRuleAction = merge({"type":"DvsPuntNetworkRuleAction"}, _self.DvsNetworkRuleAction);
    _self.DvsRateLimitNetworkRuleAction = merge({"type":"DvsRateLimitNetworkRuleAction","properties":{"packetsPerSecond":"xsd:int"}}, _self.DvsNetworkRuleAction);
    _self.HostMemberRuntimeInfo = merge({"type":"HostMemberRuntimeInfo","properties":{"healthCheckResult":_self.HostMemberHealthCheckResult,"host":_self.ManagedObjectReference,"status":"xsd:string","statusDetail":"xsd:string"}}, _self.DynamicData);
    _self.DVSSecurityPolicy = merge({"type":"DVSSecurityPolicy","properties":{"allowPromiscuous":_self.BoolPolicy,"forgedTransmits":_self.BoolPolicy,"macChanges":_self.BoolPolicy}}, _self.InheritablePolicy);
    _self.DVSSelection = merge({"type":"DVSSelection","properties":{"dvsUuid":"xsd:string"}}, _self.SelectionSet);
    _self.DvsSingleIpPort = merge({"type":"DvsSingleIpPort","properties":{"portNumber":"xsd:int"}}, _self.DvsIpPort);
    _self.StringExpression = merge({"type":"StringExpression","properties":{"value":"xsd:string"}}, _self.NegatableExpression);
    _self.DvsTrafficRule = merge({"type":"DvsTrafficRule","properties":{"action":_self.DvsNetworkRuleAction,"description":"xsd:string","direction":"xsd:string","key":"xsd:string","qualifier":_self.DvsNetworkRuleQualifier,"sequence":"xsd:int"}}, _self.DynamicData);
    _self.LongPolicy = merge({"type":"LongPolicy","properties":{"value":"xsd:long"}}, _self.InheritablePolicy);
    _self.DvsUpdateTagNetworkRuleAction = merge({"type":"DvsUpdateTagNetworkRuleAction","properties":{"dscpTag":"xsd:int","qosTag":"xsd:int"}}, _self.DvsNetworkRuleAction);
    _self.EntityEventArgument = merge({"type":"EntityEventArgument","properties":{"name":"xsd:string"}}, _self.EventArgument);
    _self.EntityPrivilege = merge({"type":"EntityPrivilege","properties":{"entity":_self.ManagedObjectReference,"privAvailability":_self.PrivilegeAvailability}}, _self.DynamicData);
    _self.EvaluationLicenseSource = merge({"type":"EvaluationLicenseSource","properties":{"remainingHours":"xsd:long"}}, _self.LicenseSource);
    _self.NetworkEventArgument = merge({"type":"NetworkEventArgument","properties":{"network":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.VmEventArgument = merge({"type":"VmEventArgument","properties":{"vm":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.EventAlarmExpression = merge({"type":"EventAlarmExpression","properties":{"comparisons":_self.EventAlarmExpressionComparison,"eventType":"xsd:string","eventTypeId":"xsd:string","objectType":"xsd:string","status":_self.ManagedEntityStatus}}, _self.AlarmExpression);
    _self.EventFilterSpec = merge({"type":"EventFilterSpec","properties":{"alarm":_self.ManagedObjectReference,"category":"xsd:string[]","disableFullMessage":"xsd:boolean","entity":_self.EventFilterSpecByEntity,"eventChainId":"xsd:int","eventTypeId":"xsd:string[]","scheduledTask":_self.ManagedObjectReference,"tag":"xsd:string[]","time":_self.EventFilterSpecByTime,"type":"xsd:string[]","userName":_self.EventFilterSpecByUsername}}, _self.DynamicData);
    _self.ExtendedDescription = merge({"type":"ExtendedDescription","properties":{"messageArg":_self.KeyAnyValue,"messageCatalogKeyPrefix":"xsd:string"}}, _self.Description);
    _self.ExtensionClientInfo = merge({"type":"ExtensionClientInfo","properties":{"company":"xsd:string","description":_self.Description,"type":"xsd:string","url":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionServerInfo = merge({"type":"ExtensionServerInfo","properties":{"adminEmail":"xsd:string[]","company":"xsd:string","description":_self.Description,"serverThumbprint":"xsd:string","type":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.ExtSolutionManagerInfo = merge({"type":"ExtSolutionManagerInfo","properties":{"smallIconUrl":"xsd:string","tab":_self.ExtSolutionManagerInfoTabInfo}}, _self.DynamicData);
    _self.FcoeConfig = merge({"type":"FcoeConfig","properties":{"capabilities":_self.FcoeConfigFcoeCapabilities,"fcoeActive":"xsd:boolean","priorityClass":"xsd:int","sourceMac":"xsd:string","vlanRange":_self.FcoeConfigVlanRange}}, _self.DynamicData);
    _self.FileBackedVirtualDiskSpec = merge({"type":"FileBackedVirtualDiskSpec","properties":{"capacityKb":"xsd:long","profile":_self.VirtualMachineProfileSpec}}, _self.VirtualDiskSpec);
    _self.FileTransferInformation = merge({"type":"FileTransferInformation","properties":{"attributes":_self.GuestFileAttributes,"size":"xsd:long","url":"xsd:string"}}, _self.DynamicData);
    _self.FloatOption = merge({"type":"FloatOption","properties":{"defaultValue":"xsd:float","max":"xsd:float","min":"xsd:float"}}, _self.OptionType);
    _self.GroupAlarmAction = merge({"type":"GroupAlarmAction","properties":{"action":_self.AlarmAction}}, _self.AlarmAction);
    _self.IntOption = merge({"type":"IntOption","properties":{"defaultValue":"xsd:int","max":"xsd:int","min":"xsd:int"}}, _self.OptionType);
    _self.NetDhcpConfigInfo = merge({"type":"NetDhcpConfigInfo","properties":{"ipv4":_self.NetDhcpConfigInfoDhcpOptions,"ipv6":_self.NetDhcpConfigInfoDhcpOptions}}, _self.DynamicData);
    _self.HostActiveDirectory = merge({"type":"HostActiveDirectory","properties":{"changeOperation":"xsd:string","spec":_self.HostActiveDirectorySpec}}, _self.DynamicData);
    _self.HostActiveDirectoryAuthentication = merge({"type":"HostActiveDirectoryAuthentication","methods":{"ImportCertificateForCAM_Task":{"params":{"_this":"ManagedObjectReference","certPath":"xsd:string","camServer":"xsd:string"},"returns":"ManagedObjectReference"},"JoinDomain_Task":{"params":{"_this":"ManagedObjectReference","domainName":"xsd:string","userName":"xsd:string","password":"xsd:string"},"returns":"ManagedObjectReference"},"JoinDomainWithCAM_Task":{"params":{"_this":"ManagedObjectReference","domainName":"xsd:string","camServer":"xsd:string"},"returns":"ManagedObjectReference"},"LeaveCurrentDomain_Task":{"params":{"_this":"ManagedObjectReference","force":"xsd:boolean"},"returns":"ManagedObjectReference"}}}, _self.HostDirectoryStore);
    _self.HostActiveDirectoryInfo = merge({"type":"HostActiveDirectoryInfo","properties":{"domainMembershipStatus":"xsd:string","joinedDomain":"xsd:string","trustedDomain":"xsd:string[]"}}, _self.HostDirectoryStoreInfo);
    _self.HostAuthenticationManagerInfo = merge({"type":"HostAuthenticationManagerInfo","properties":{"authConfig":_self.HostAuthenticationStoreInfo}}, _self.DynamicData);
    _self.HostAutoStartManagerConfig = merge({"type":"HostAutoStartManagerConfig","properties":{"defaults":_self.AutoStartDefaults,"powerInfo":_self.AutoStartPowerInfo}}, _self.DynamicData);
    _self.HostBlockAdapterTargetTransport = merge({"type":"HostBlockAdapterTargetTransport"}, _self.HostTargetTransport);
    _self.HostBlockHba = merge({"type":"HostBlockHba"}, _self.HostHostBusAdapter);
    _self.HostDiagnosticPartition = merge({"type":"HostDiagnosticPartition","properties":{"diagnosticType":"xsd:string","id":_self.HostScsiDiskPartition,"slots":"xsd:int","storageType":"xsd:string"}}, _self.DynamicData);
    _self.HostDateTimeInfo = merge({"type":"HostDateTimeInfo","properties":{"ntpConfig":_self.HostNtpConfig,"timeZone":_self.HostDateTimeSystemTimeZone}}, _self.DynamicData);
    _self.HostMultipathStateInfo = merge({"type":"HostMultipathStateInfo","properties":{"path":_self.HostMultipathStateInfoPath}}, _self.DynamicData);
    _self.PowerSystemCapability = merge({"type":"PowerSystemCapability","properties":{"availablePolicy":_self.HostPowerPolicy}}, _self.DynamicData);
    _self.PowerSystemInfo = merge({"type":"PowerSystemInfo","properties":{"currentPolicy":_self.HostPowerPolicy}}, _self.DynamicData);
    _self.HostSystemSwapConfiguration = merge({"type":"HostSystemSwapConfiguration","properties":{"option":_self.HostSystemSwapConfigurationSystemSwapOption}}, _self.DynamicData);
    _self.HostDateTimeConfig = merge({"type":"HostDateTimeConfig","properties":{"ntpConfig":_self.HostNtpConfig,"timeZone":"xsd:string"}}, _self.DynamicData);
    _self.HostLicenseSpec = merge({"type":"HostLicenseSpec","properties":{"disabledFeatureKey":"xsd:string[]","editionKey":"xsd:string","enabledFeatureKey":"xsd:string[]","source":_self.LicenseSource}}, _self.DynamicData);
    _self.HostNasVolumeConfig = merge({"type":"HostNasVolumeConfig","properties":{"changeOperation":"xsd:string","spec":_self.HostNasVolumeSpec}}, _self.DynamicData);
    _self.HostSecuritySpec = merge({"type":"HostSecuritySpec","properties":{"addPermission":_self.Permission,"adminPassword":"xsd:string","removePermission":_self.Permission}}, _self.DynamicData);
    _self.HostConfigSummary = merge({"type":"HostConfigSummary","properties":{"agentVmDatastore":_self.ManagedObjectReference,"agentVmNetwork":_self.ManagedObjectReference,"faultToleranceEnabled":"xsd:boolean","featureVersion":_self.HostFeatureVersionInfo,"name":"xsd:string","port":"xsd:int","product":_self.AboutInfo,"sslThumbprint":"xsd:string","vmotionEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostDatastoreConnectInfo = merge({"type":"HostDatastoreConnectInfo","properties":{"summary":_self.DatastoreSummary}}, _self.DynamicData);
    _self.HostLicenseConnectInfo = merge({"type":"HostLicenseConnectInfo","properties":{"evaluation":_self.LicenseManagerEvaluationInfo,"license":_self.LicenseManagerLicenseInfo,"resource":_self.HostLicensableResourceInfo}}, _self.DynamicData);
    _self.HostConnectInfoNetworkInfo = merge({"type":"HostConnectInfoNetworkInfo","properties":{"summary":_self.NetworkSummary}}, _self.DynamicData);
    _self.HostDatastoreExistsConnectInfo = merge({"type":"HostDatastoreExistsConnectInfo","properties":{"newDatastoreName":"xsd:string"}}, _self.HostDatastoreConnectInfo);
    _self.HostDatastoreNameConflictConnectInfo = merge({"type":"HostDatastoreNameConflictConnectInfo","properties":{"newDatastoreName":"xsd:string"}}, _self.HostDatastoreConnectInfo);
    _self.HostDateTimeSystem = {"type":"HostDateTimeSystem","properties":{"dateTimeInfo":_self.HostDateTimeInfo},"methods":{"QueryAvailableTimeZones":{"params":{"_this":"ManagedObjectReference"},"returns":"HostDateTimeSystemTimeZone"},"QueryDateTime":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:dateTime"},"RefreshDateTimeSystem":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UpdateDateTime":{"params":{"_this":"ManagedObjectReference","dateTime":"xsd:dateTime"},"returns":null},"UpdateDateTimeConfig":{"params":{"_this":"ManagedObjectReference","config":"HostDateTimeConfig"},"returns":null}}};
    _self.HostDhcpService = merge({"type":"HostDhcpService","properties":{"key":"xsd:string","spec":_self.HostDhcpServiceSpec}}, _self.DynamicData);
    _self.HostDiskPartitionLayout = merge({"type":"HostDiskPartitionLayout","properties":{"partition":_self.HostDiskPartitionBlockRange,"total":_self.HostDiskDimensionsLba}}, _self.DynamicData);
    _self.HostDiskPartitionSpec = merge({"type":"HostDiskPartitionSpec","properties":{"chs":_self.HostDiskDimensionsChs,"partition":_self.HostDiskPartitionAttributes,"partitionFormat":"xsd:string","totalSectors":"xsd:long"}}, _self.DynamicData);
    _self.HostDiagnosticSystem = {"type":"HostDiagnosticSystem","properties":{"activePartition":_self.HostDiagnosticPartition},"methods":{"CreateDiagnosticPartition":{"params":{"_this":"ManagedObjectReference","spec":"HostDiagnosticPartitionCreateSpec"},"returns":null},"QueryAvailablePartition":{"params":{"_this":"ManagedObjectReference"},"returns":"HostDiagnosticPartition"},"QueryPartitionCreateDesc":{"params":{"_this":"ManagedObjectReference","diskUuid":"xsd:string","diagnosticType":"xsd:string"},"returns":"HostDiagnosticPartitionCreateDescription"},"QueryPartitionCreateOptions":{"params":{"_this":"ManagedObjectReference","storageType":"xsd:string","diagnosticType":"xsd:string"},"returns":"HostDiagnosticPartitionCreateOption"},"SelectActivePartition":{"params":{"_this":"ManagedObjectReference","partition":"HostScsiDiskPartition"},"returns":null}}};
    _self.HostDiskMappingInfo = merge({"type":"HostDiskMappingInfo","properties":{"exclusive":"xsd:boolean","name":"xsd:string","physicalPartition":_self.HostDiskMappingPartitionInfo}}, _self.DynamicData);
    _self.HostDiskMappingOption = merge({"type":"HostDiskMappingOption","properties":{"name":"xsd:string","physicalPartition":_self.HostDiskMappingPartitionOption}}, _self.DynamicData);
    _self.HostDiskPartitionInfo = merge({"type":"HostDiskPartitionInfo","properties":{"deviceName":"xsd:string","layout":_self.HostDiskPartitionLayout,"spec":_self.HostDiskPartitionSpec}}, _self.DynamicData);
    _self.HostVirtualNicConnection = merge({"type":"HostVirtualNicConnection","properties":{"dvPort":_self.DistributedVirtualSwitchPortConnection,"portgroup":"xsd:string"}}, _self.DynamicData);
    _self.HostEsxAgentHostManager = {"type":"HostEsxAgentHostManager","properties":{"configInfo":_self.HostEsxAgentHostManagerConfigInfo},"methods":{"EsxAgentHostManagerUpdateConfig":{"params":{"_this":"ManagedObjectReference","configInfo":"HostEsxAgentHostManagerConfigInfo"},"returns":null}}};
    _self.HostFibreChannelHba = merge({"type":"HostFibreChannelHba","properties":{"nodeWorldWideName":"xsd:long","portType":_self.FibreChannelPortType,"portWorldWideName":"xsd:long","speed":"xsd:long"}}, _self.HostHostBusAdapter);
    _self.HostFibreChannelOverEthernetHba = merge({"type":"HostFibreChannelOverEthernetHba","properties":{"isSoftwareFcoe":"xsd:boolean","linkInfo":_self.HostFibreChannelOverEthernetHbaLinkInfo,"markedForRemoval":"xsd:boolean","underlyingNic":"xsd:string"}}, _self.HostFibreChannelHba);
    _self.HostFibreChannelTargetTransport = merge({"type":"HostFibreChannelTargetTransport","properties":{"nodeWorldWideName":"xsd:long","portWorldWideName":"xsd:long"}}, _self.HostTargetTransport);
    _self.HostFileSystemMountInfo = merge({"type":"HostFileSystemMountInfo","properties":{"mountInfo":_self.HostMountInfo,"volume":_self.HostFileSystemVolume,"vStorageSupport":"xsd:string"}}, _self.DynamicData);
    _self.HostFirewallRulesetIpList = merge({"type":"HostFirewallRulesetIpList","properties":{"allIp":"xsd:boolean","ipAddress":"xsd:string[]","ipNetwork":_self.HostFirewallRulesetIpNetwork}}, _self.DynamicData);
    _self.HostFirewallRuleset = merge({"type":"HostFirewallRuleset","properties":{"allowedHosts":_self.HostFirewallRulesetIpList,"enabled":"xsd:boolean","key":"xsd:string","label":"xsd:string","required":"xsd:boolean","rule":_self.HostFirewallRule,"service":"xsd:string"}}, _self.DynamicData);
    _self.HostFirewallRulesetRulesetSpec = merge({"type":"HostFirewallRulesetRulesetSpec","properties":{"allowedHosts":_self.HostFirewallRulesetIpList}}, _self.DynamicData);
    _self.HostNumaInfo = merge({"type":"HostNumaInfo","properties":{"numaNode":_self.HostNumaNode,"numNodes":"xsd:int","type":"xsd:string"}}, _self.DynamicData);
    _self.HostInternetScsiHbaParamValue = merge({"type":"HostInternetScsiHbaParamValue","properties":{"isInherited":"xsd:boolean"}}, _self.OptionValue);
    _self.HostInternetScsiTargetTransport = merge({"type":"HostInternetScsiTargetTransport","properties":{"address":"xsd:string[]","iScsiAlias":"xsd:string","iScsiName":"xsd:string"}}, _self.HostTargetTransport);
    _self.HostIpConfigIpV6AddressConfiguration = merge({"type":"HostIpConfigIpV6AddressConfiguration","properties":{"autoConfigurationEnabled":"xsd:boolean","dhcpV6Enabled":"xsd:boolean","ipV6Address":_self.HostIpConfigIpV6Address}}, _self.DynamicData);
    _self.HostIpRouteConfigSpec = merge({"type":"HostIpRouteConfigSpec","properties":{"gatewayDeviceConnection":_self.HostVirtualNicConnection,"ipV6GatewayDeviceConnection":_self.HostVirtualNicConnection}}, _self.HostIpRouteConfig);
    _self.HostMaintenanceSpec = merge({"type":"HostMaintenanceSpec","properties":{"vsanMode":_self.VsanHostDecommissionMode}}, _self.DynamicData);
    _self.HostMemberUplinkHealthCheckResult = merge({"type":"HostMemberUplinkHealthCheckResult","properties":{"uplinkPortKey":"xsd:string"}}, _self.HostMemberHealthCheckResult);
    _self.HostMultipathInfoFixedLogicalUnitPolicy = merge({"type":"HostMultipathInfoFixedLogicalUnitPolicy","properties":{"prefer":"xsd:string"}}, _self.HostMultipathInfoLogicalUnitPolicy);
    _self.HostMultipathInfoPath = merge({"type":"HostMultipathInfoPath","properties":{"adapter":"xsd:string","isWorkingPath":"xsd:boolean","key":"xsd:string","lun":"xsd:string","name":"xsd:string","pathState":"xsd:string","state":"xsd:string","transport":_self.HostTargetTransport}}, _self.DynamicData);
    _self.HostNatServiceSpec = merge({"type":"HostNatServiceSpec","properties":{"activeFtp":"xsd:boolean","allowAnyOui":"xsd:boolean","configPort":"xsd:boolean","ipGatewayAddress":"xsd:string","nameService":_self.HostNatServiceNameServiceSpec,"portForward":_self.HostNatServicePortForwardSpec,"udpTimeout":"xsd:int","virtualSwitch":"xsd:string"}}, _self.DynamicData);
    _self.HostNatServiceConfig = merge({"type":"HostNatServiceConfig","properties":{"changeOperation":"xsd:string","key":"xsd:string","spec":_self.HostNatServiceSpec}}, _self.DynamicData);
    _self.HostNicTeamingPolicy = merge({"type":"HostNicTeamingPolicy","properties":{"failureCriteria":_self.HostNicFailureCriteria,"nicOrder":_self.HostNicOrderPolicy,"notifySwitches":"xsd:boolean","policy":"xsd:string","reversePolicy":"xsd:boolean","rollingOrder":"xsd:boolean"}}, _self.DynamicData);
    _self.HostNewNetworkConnectInfo = merge({"type":"HostNewNetworkConnectInfo"}, _self.HostConnectInfoNetworkInfo);
    _self.HostPatchManagerStatus = merge({"type":"HostPatchManagerStatus","properties":{"applicable":"xsd:boolean","id":"xsd:string","installed":"xsd:boolean","installState":"xsd:string[]","integrity":"xsd:string","prerequisitePatch":_self.HostPatchManagerStatusPrerequisitePatch,"reason":"xsd:string[]","reconnectRequired":"xsd:boolean","restartRequired":"xsd:boolean","supersededPatchIds":"xsd:string[]","vmOffRequired":"xsd:boolean"}}, _self.DynamicData);
    _self.HostPlugStoreTopology = merge({"type":"HostPlugStoreTopology","properties":{"adapter":_self.HostPlugStoreTopologyAdapter,"device":_self.HostPlugStoreTopologyDevice,"path":_self.HostPlugStoreTopologyPath,"plugin":_self.HostPlugStoreTopologyPlugin,"target":_self.HostPlugStoreTopologyTarget}}, _self.DynamicData);
    _self.HostPosixAccountSpec = merge({"type":"HostPosixAccountSpec","properties":{"posixId":"xsd:int","shellAccess":"xsd:boolean"}}, _self.HostAccountSpec);
    _self.HostPowerSystem = {"type":"HostPowerSystem","properties":{"capability":_self.PowerSystemCapability,"info":_self.PowerSystemInfo},"methods":{"ConfigurePowerPolicy":{"params":{"_this":"ManagedObjectReference","key":"xsd:int"},"returns":null}}};
    _self.HostProfileConfigSpec = merge({"type":"HostProfileConfigSpec"}, _self.ProfileCreateSpec);
    _self.HostProfileHostBasedConfigSpec = merge({"type":"HostProfileHostBasedConfigSpec","properties":{"host":_self.ManagedObjectReference,"useHostProfileEngine":"xsd:boolean"}}, _self.HostProfileConfigSpec);
    _self.HostProfileSerializedHostProfileSpec = merge({"type":"HostProfileSerializedHostProfileSpec","properties":{"validatorHost":_self.ManagedObjectReference}}, _self.ProfileSerializedCreateSpec);
    _self.HostProxySwitchSpec = merge({"type":"HostProxySwitchSpec","properties":{"backing":_self.DistributedVirtualSwitchHostMemberBacking}}, _self.DynamicData);
    _self.HostRuntimeInfoNetworkRuntimeInfo = merge({"type":"HostRuntimeInfoNetworkRuntimeInfo","properties":{"netStackInstanceRuntimeInfo":_self.HostRuntimeInfoNetStackInstanceRuntimeInfo}}, _self.DynamicData);
    _self.VsanHostRuntimeInfo = merge({"type":"VsanHostRuntimeInfo","properties":{"accessGenNo":"xsd:int","diskIssues":_self.VsanHostRuntimeInfoDiskIssue,"membershipList":_self.VsanHostMembershipInfo}}, _self.DynamicData);
    _self.HostScsiTopologyTarget = merge({"type":"HostScsiTopologyTarget","properties":{"key":"xsd:string","lun":_self.HostScsiTopologyLun,"target":"xsd:int","transport":_self.HostTargetTransport}}, _self.DynamicData);
    _self.HostService = merge({"type":"HostService","properties":{"key":"xsd:string","label":"xsd:string","policy":"xsd:string","required":"xsd:boolean","ruleset":"xsd:string[]","running":"xsd:boolean","sourcePackage":_self.HostServiceSourcePackage,"uninstallable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostSnmpConfigSpec = merge({"type":"HostSnmpConfigSpec","properties":{"enabled":"xsd:boolean","option":_self.KeyValue,"port":"xsd:int","readOnlyCommunities":"xsd:string[]","trapTargets":_self.HostSnmpDestination}}, _self.DynamicData);
    _self.HostSnmpSystem = {"type":"HostSnmpSystem","properties":{"configuration":_self.HostSnmpConfigSpec,"limits":_self.HostSnmpSystemAgentLimits},"methods":{"ReconfigureSnmpAgent":{"params":{"_this":"ManagedObjectReference","spec":"HostSnmpConfigSpec"},"returns":null},"SendTestNotification":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.ScsiLun = merge({"type":"ScsiLun","properties":{"alternateName":_self.ScsiLunDurableName,"canonicalName":"xsd:string","capabilities":_self.ScsiLunCapabilities,"descriptor":_self.ScsiLunDescriptor,"displayName":"xsd:string","durableName":_self.ScsiLunDurableName,"key":"xsd:string","lunType":"xsd:string","model":"xsd:string","operationalState":"xsd:string[]","queueDepth":"xsd:int","revision":"xsd:string","scsiLevel":"xsd:int","serialNumber":"xsd:string","standardInquiry":"xsd:byte[]","uuid":"xsd:string","vendor":"xsd:string","vStorageSupport":"xsd:string"}}, _self.HostDevice);
    _self.HostTpmEventLogEntry = merge({"type":"HostTpmEventLogEntry","properties":{"eventDetails":_self.HostTpmEventDetails,"pcrIndex":"xsd:int"}}, _self.DynamicData);
    _self.HostTpmBootSecurityOptionEventDetails = merge({"type":"HostTpmBootSecurityOptionEventDetails","properties":{"bootSecurityOption":"xsd:string"}}, _self.HostTpmEventDetails);
    _self.HostTpmCommandEventDetails = merge({"type":"HostTpmCommandEventDetails","properties":{"commandLine":"xsd:string"}}, _self.HostTpmEventDetails);
    _self.HostUnresolvedVmfsVolume = merge({"type":"HostUnresolvedVmfsVolume","properties":{"extent":_self.HostUnresolvedVmfsExtent,"resolveStatus":_self.HostUnresolvedVmfsVolumeResolveStatus,"totalBlocks":"xsd:int","vmfsLabel":"xsd:string","vmfsUuid":"xsd:string"}}, _self.DynamicData);
    _self.HostVffsSpec = merge({"type":"HostVffsSpec","properties":{"devicePath":"xsd:string","majorVersion":"xsd:int","partition":_self.HostDiskPartitionSpec,"volumeName":"xsd:string"}}, _self.DynamicData);
    _self.LongOption = merge({"type":"LongOption","properties":{"defaultValue":"xsd:long","max":"xsd:long","min":"xsd:long"}}, _self.OptionType);
    _self.HostVirtualSwitchAutoBridge = merge({"type":"HostVirtualSwitchAutoBridge","properties":{"excludedNicDevice":"xsd:string[]"}}, _self.HostVirtualSwitchBridge);
    _self.HostVirtualSwitchBondBridge = merge({"type":"HostVirtualSwitchBondBridge","properties":{"beacon":_self.HostVirtualSwitchBeaconConfig,"linkDiscoveryProtocolConfig":_self.LinkDiscoveryProtocolConfig,"nicDevice":"xsd:string[]"}}, _self.HostVirtualSwitchBridge);
    _self.VnicPortArgument = merge({"type":"VnicPortArgument","properties":{"port":_self.DistributedVirtualSwitchPortConnection,"vnic":"xsd:string"}}, _self.DynamicData);
    _self.HttpNfcLeaseDatastoreLeaseInfo = merge({"type":"HttpNfcLeaseDatastoreLeaseInfo","properties":{"datastoreKey":"xsd:string","hosts":_self.HttpNfcLeaseHostInfo}}, _self.DynamicData);
    _self.InventoryView = merge({"type":"InventoryView","methods":{"CloseInventoryViewFolder":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"OpenInventoryViewFolder":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"}}}, _self.ManagedObjectView);
    _self.IpPool = merge({"type":"IpPool","properties":{"allocatedIpv4Addresses":"xsd:int","allocatedIpv6Addresses":"xsd:int","availableIpv4Addresses":"xsd:int","availableIpv6Addresses":"xsd:int","dnsDomain":"xsd:string","dnsSearchPath":"xsd:string","hostPrefix":"xsd:string","httpProxy":"xsd:string","id":"xsd:int","ipv4Config":_self.IpPoolIpPoolConfigInfo,"ipv6Config":_self.IpPoolIpPoolConfigInfo,"name":"xsd:string","networkAssociation":_self.IpPoolAssociation}}, _self.DynamicData);
    _self.IpRange = merge({"type":"IpRange","properties":{"addressPrefix":"xsd:string","prefixLength":"xsd:int"}}, _self.IpAddress);
    _self.KernelModuleInfo = merge({"type":"KernelModuleInfo","properties":{"bssSection":_self.KernelModuleSectionInfo,"dataSection":_self.KernelModuleSectionInfo,"enabled":"xsd:boolean","filename":"xsd:string","id":"xsd:int","loaded":"xsd:boolean","name":"xsd:string","optionString":"xsd:string","readOnlySection":_self.KernelModuleSectionInfo,"textSection":_self.KernelModuleSectionInfo,"useCount":"xsd:int","version":"xsd:string","writableSection":_self.KernelModuleSectionInfo}}, _self.DynamicData);
    _self.LicenseAvailabilityInfo = merge({"type":"LicenseAvailabilityInfo","properties":{"available":"xsd:int","feature":_self.LicenseFeatureInfo,"total":"xsd:int"}}, _self.DynamicData);
    _self.ListView = merge({"type":"ListView","methods":{"ModifyListView":{"params":{"_this":"ManagedObjectReference","addP":"ManagedObjectReference","removeP":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ResetListView":{"params":{"_this":"ManagedObjectReference","objP":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ResetListViewFromView":{"params":{"_this":"ManagedObjectReference","view":"ManagedObjectReferencetoaView"},"returns":null}}}, _self.ManagedObjectView);
    _self.LocalDatastoreInfo = merge({"type":"LocalDatastoreInfo","properties":{"path":"xsd:string"}}, _self.DatastoreInfo);
    _self.LocalizationManager = {"type":"LocalizationManager","properties":{"catalog":_self.LocalizationManagerMessageCatalog},"methods":{}};
    _self.MacRange = merge({"type":"MacRange","properties":{"address":"xsd:string","mask":"xsd:string"}}, _self.MacAddress);
    _self.MethodAction = merge({"type":"MethodAction","properties":{"argument":_self.MethodActionArgument,"name":"xsd:string"}}, _self.Action);
    _self.MethodDescription = merge({"type":"MethodDescription","properties":{"key":"xsd:string"}}, _self.Description);
    _self.MetricAlarmExpression = merge({"type":"MetricAlarmExpression","properties":{"metric":_self.PerfMetricId,"operator":_self.MetricAlarmOperator,"red":"xsd:int","redInterval":"xsd:int","type":"xsd:string","yellow":"xsd:int","yellowInterval":"xsd:int"}}, _self.AlarmExpression);
    _self.ResourcePoolEventArgument = merge({"type":"ResourcePoolEventArgument","properties":{"resourcePool":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.NasDatastoreInfo = merge({"type":"NasDatastoreInfo","properties":{"nas":_self.HostNasVolume}}, _self.DatastoreInfo);
    _self.NetDhcpConfigSpec = merge({"type":"NetDhcpConfigSpec","properties":{"ipv4":_self.NetDhcpConfigSpecDhcpOptionsSpec,"ipv6":_self.NetDhcpConfigSpecDhcpOptionsSpec}}, _self.DynamicData);
    _self.NetIpConfigSpec = merge({"type":"NetIpConfigSpec","properties":{"autoConfigurationEnabled":"xsd:boolean","dhcp":_self.NetDhcpConfigSpec,"ipAddress":_self.NetIpConfigSpecIpAddressSpec}}, _self.DynamicData);
    _self.NetIpRouteConfigInfoIpRoute = merge({"type":"NetIpRouteConfigInfoIpRoute","properties":{"gateway":_self.NetIpRouteConfigInfoGateway,"network":"xsd:string","prefixLength":"xsd:int"}}, _self.DynamicData);
    _self.NetIpRouteConfigSpecIpRouteSpec = merge({"type":"NetIpRouteConfigSpecIpRouteSpec","properties":{"gateway":_self.NetIpRouteConfigSpecGatewaySpec,"network":"xsd:string","operation":"xsd:string","prefixLength":"xsd:int"}}, _self.DynamicData);
    _self.NetIpStackInfo = merge({"type":"NetIpStackInfo","properties":{"defaultRouter":_self.NetIpStackInfoDefaultRouter,"neighbor":_self.NetIpStackInfoNetToMedia}}, _self.DynamicData);
    _self.ObjectSpec = merge({"type":"ObjectSpec","properties":{"obj":_self.ManagedObjectReference,"selectSet":_self.SelectionSpec,"skip":"xsd:boolean"}}, _self.DynamicData);
    _self.OnceTaskScheduler = merge({"type":"OnceTaskScheduler","properties":{"runAt":"xsd:dateTime"}}, _self.TaskScheduler);
    _self.OrAlarmExpression = merge({"type":"OrAlarmExpression","properties":{"expression":_self.AlarmExpression}}, _self.AlarmExpression);
    _self.OvfCreateDescriptorParams = merge({"type":"OvfCreateDescriptorParams","properties":{"description":"xsd:string","exportOption":"xsd:string[]","includeImageFiles":"xsd:boolean","name":"xsd:string","ovfFiles":_self.OvfFile,"snapshot":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.VirtualDevice = merge({"type":"VirtualDevice","properties":{"backing":_self.VirtualDeviceBackingInfo,"connectable":_self.VirtualDeviceConnectInfo,"controllerKey":"xsd:int","deviceInfo":_self.Description,"key":"xsd:int","slotInfo":_self.VirtualDeviceBusSlotInfo,"unitNumber":"xsd:int"}}, _self.DynamicData);
    _self.OvfOptionInfo = merge({"type":"OvfOptionInfo","properties":{"description":_self.LocalizableMessage,"option":"xsd:string"}}, _self.DynamicData);
    _self.PerfCompositeMetric = merge({"type":"PerfCompositeMetric","properties":{"childEntity":_self.PerfEntityMetricBase,"entity":_self.PerfEntityMetricBase}}, _self.DynamicData);
    _self.PerfEntityMetric = merge({"type":"PerfEntityMetric","properties":{"sampleInfo":_self.PerfSampleInfo,"value":_self.PerfMetricSeries}}, _self.PerfEntityMetricBase);
    _self.PerfEntityMetricCSV = merge({"type":"PerfEntityMetricCSV","properties":{"sampleInfoCSV":"xsd:string","value":_self.PerfMetricSeriesCSV}}, _self.PerfEntityMetricBase);
    _self.PhysicalNicHintInfo = merge({"type":"PhysicalNicHintInfo","properties":{"connectedSwitchPort":_self.PhysicalNicCdpInfo,"device":"xsd:string","lldpInfo":_self.LinkLayerDiscoveryProtocolInfo,"network":_self.PhysicalNicNameHint,"subnet":_self.PhysicalNicIpHint}}, _self.DynamicData);
    _self.PosixUserSearchResult = merge({"type":"PosixUserSearchResult","properties":{"id":"xsd:int","shellAccess":"xsd:boolean"}}, _self.UserSearchResult);
    _self.ProfileCompositeExpression = merge({"type":"ProfileCompositeExpression","properties":{"expressionName":"xsd:string[]","operator":"xsd:string"}}, _self.ProfileExpression);
    _self.ProfileExecuteError = merge({"type":"ProfileExecuteError","properties":{"message":_self.LocalizableMessage,"path":_self.ProfilePropertyPath}}, _self.DynamicData);
    _self.ProfileMetadata = merge({"type":"ProfileMetadata","properties":{"description":_self.ExtendedDescription,"key":"xsd:string","profileCategory":"xsd:string","profileComponent":"xsd:string","profileTypeName":"xsd:string","sortSpec":_self.ProfileMetadataProfileSortSpec}}, _self.DynamicData);
    _self.ProfileSimpleExpression = merge({"type":"ProfileSimpleExpression","properties":{"expressionType":"xsd:string","parameter":_self.KeyAnyValue}}, _self.ProfileExpression);
    _self.ProfileUpdateFailedUpdateFailure = merge({"type":"ProfileUpdateFailedUpdateFailure","properties":{"errMsg":_self.LocalizableMessage,"profilePath":_self.ProfilePropertyPath}}, _self.DynamicData);
    _self.PropertyFilterSpec = merge({"type":"PropertyFilterSpec","properties":{"objectSet":_self.ObjectSpec,"propSet":_self.PropertySpec,"reportMissingObjectsInResults":"xsd:boolean"}}, _self.DynamicData);
    _self.RecurrentTaskScheduler = merge({"type":"RecurrentTaskScheduler","properties":{"interval":"xsd:int"}}, _self.TaskScheduler);
    _self.ResourceAllocationInfo = merge({"type":"ResourceAllocationInfo","properties":{"expandableReservation":"xsd:boolean","limit":"xsd:long","overheadLimit":"xsd:long","reservation":"xsd:long","shares":_self.SharesInfo}}, _self.DynamicData);
    _self.SharesOption = merge({"type":"SharesOption","properties":{"defaultLevel":_self.SharesLevel,"sharesOption":_self.IntOption}}, _self.DynamicData);
    _self.RunScriptAction = merge({"type":"RunScriptAction","properties":{"script":"xsd:string"}}, _self.Action);
    _self.ScheduledTaskEventArgument = merge({"type":"ScheduledTaskEventArgument","properties":{"scheduledTask":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.ScheduledTaskSpec = merge({"type":"ScheduledTaskSpec","properties":{"action":_self.Action,"description":"xsd:string","enabled":"xsd:boolean","name":"xsd:string","notification":"xsd:string","scheduler":_self.TaskScheduler}}, _self.DynamicData);
    _self.SendEmailAction = merge({"type":"SendEmailAction","properties":{"body":"xsd:string","ccList":"xsd:string","subject":"xsd:string","toList":"xsd:string"}}, _self.Action);
    _self.SendSNMPAction = merge({"type":"SendSNMPAction"}, _self.Action);
    _self.ServiceContent = merge({"type":"ServiceContent","properties":{"about":_self.AboutInfo,"accountManager":_self.ManagedObjectReference,"alarmManager":_self.ManagedObjectReference,"authorizationManager":_self.ManagedObjectReference,"clusterProfileManager":_self.ManagedObjectReference,"complianceManager":_self.ManagedObjectReference,"customFieldsManager":_self.ManagedObjectReference,"customizationSpecManager":_self.ManagedObjectReference,"datastoreNamespaceManager":_self.ManagedObjectReference,"diagnosticManager":_self.ManagedObjectReference,"dvSwitchManager":_self.ManagedObjectReference,"eventManager":_self.ManagedObjectReference,"extensionManager":_self.ManagedObjectReference,"fileManager":_self.ManagedObjectReference,"guestOperationsManager":_self.ManagedObjectReference,"hostProfileManager":_self.ManagedObjectReference,"ipPoolManager":_self.ManagedObjectReference,"licenseManager":_self.ManagedObjectReference,"localizationManager":_self.ManagedObjectReference,"ovfManager":_self.ManagedObjectReference,"perfManager":_self.ManagedObjectReference,"propertyCollector":_self.ManagedObjectReference,"rootFolder":_self.ManagedObjectReference,"scheduledTaskManager":_self.ManagedObjectReference,"searchIndex":_self.ManagedObjectReference,"serviceManager":_self.ManagedObjectReference,"sessionManager":_self.ManagedObjectReference,"setting":_self.ManagedObjectReference,"snmpSystem":_self.ManagedObjectReference,"storageResourceManager":_self.ManagedObjectReference,"taskManager":_self.ManagedObjectReference,"userDirectory":_self.ManagedObjectReference,"viewManager":_self.ManagedObjectReference,"virtualDiskManager":_self.ManagedObjectReference,"virtualizationManager":_self.ManagedObjectReference,"vmCompatibilityChecker":_self.ManagedObjectReference,"vmProvisioningChecker":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ServiceManager = {"type":"ServiceManager","properties":{"service":_self.ServiceManagerServiceInfo},"methods":{"QueryServiceList":{"params":{"_this":"ManagedObjectReference","serviceName":"xsd:string","location":"xsd:string"},"returns":"ServiceManagerServiceInfo"}}};
    _self.SeSparseVirtualDiskSpec = merge({"type":"SeSparseVirtualDiskSpec","properties":{"grainSizeKb":"xsd:int"}}, _self.FileBackedVirtualDiskSpec);
    _self.SessionManager = {"type":"SessionManager","properties":{"currentSession":_self.UserSession,"defaultLocale":"xsd:string","message":"xsd:string","messageLocaleList":"xsd:string[]","sessionList":_self.UserSession,"supportedLocaleList":"xsd:string[]"},"methods":{"AcquireCloneTicket":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"AcquireGenericServiceTicket":{"params":{"_this":"ManagedObjectReference","spec":"SessionManagerServiceRequestSpec"},"returns":"SessionManagerGenericServiceTicket"},"AcquireLocalTicket":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string"},"returns":"SessionManagerLocalTicket"},"CloneSession":{"params":{"_this":"ManagedObjectReference","cloneTicket":"xsd:string"},"returns":"UserSession"},"ImpersonateUser":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string","locale":"xsd:string"},"returns":"UserSession"},"Login":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string","password":"xsd:string","locale":"xsd:string"},"returns":"UserSession"},"LoginBySSPI":{"params":{"_this":"ManagedObjectReference","base64Token":"xsd:string","locale":"xsd:string"},"returns":"UserSession"},"LoginByToken":{"params":{"_this":"ManagedObjectReference","locale":"xsd:string"},"returns":"UserSession"},"LoginExtensionByCertificate":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string","locale":"xsd:string"},"returns":"UserSession"},"LoginExtensionBySubjectName":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string","locale":"xsd:string"},"returns":"UserSession"},"Logout":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SessionIsActive":{"params":{"_this":"ManagedObjectReference","sessionID":"xsd:string","userName":"xsd:string"},"returns":"xsd:boolean"},"SetLocale":{"params":{"_this":"ManagedObjectReference","locale":"xsd:string"},"returns":null},"TerminateSession":{"params":{"_this":"ManagedObjectReference","sessionId":"xsd:string"},"returns":null},"UpdateServiceMessage":{"params":{"_this":"ManagedObjectReference","message":"xsd:string"},"returns":null}}};
    _self.SessionManagerHttpServiceRequestSpec = merge({"type":"SessionManagerHttpServiceRequestSpec","properties":{"method":"xsd:string","url":"xsd:string"}}, _self.SessionManagerServiceRequestSpec);
    _self.SingleMac = merge({"type":"SingleMac","properties":{"address":"xsd:string"}}, _self.MacAddress);
    _self.StateAlarmExpression = merge({"type":"StateAlarmExpression","properties":{"operator":_self.StateAlarmOperator,"red":"xsd:string","statePath":"xsd:string","type":"xsd:string","yellow":"xsd:string"}}, _self.AlarmExpression);
    _self.StorageDrsPodConfigInfo = merge({"type":"StorageDrsPodConfigInfo","properties":{"defaultIntraVmAffinity":"xsd:boolean","defaultVmBehavior":"xsd:string","enabled":"xsd:boolean","ioLoadBalanceConfig":_self.StorageDrsIoLoadBalanceConfig,"ioLoadBalanceEnabled":"xsd:boolean","loadBalanceInterval":"xsd:int","option":_self.OptionValue,"rule":_self.ClusterRuleInfo,"spaceLoadBalanceConfig":_self.StorageDrsSpaceLoadBalanceConfig}}, _self.DynamicData);
    _self.StorageDrsOptionSpec = merge({"type":"StorageDrsOptionSpec","properties":{"option":_self.OptionValue}}, _self.ArrayUpdateSpec);
    _self.VirtualDiskAntiAffinityRuleSpec = merge({"type":"VirtualDiskAntiAffinityRuleSpec","properties":{"diskId":"xsd:int[]"}}, _self.ClusterRuleInfo);
    _self.StorageIOAllocationInfo = merge({"type":"StorageIOAllocationInfo","properties":{"limit":"xsd:long","reservation":"xsd:int","shares":_self.SharesInfo}}, _self.DynamicData);
    _self.StorageIOAllocationOption = merge({"type":"StorageIOAllocationOption","properties":{"limitOption":_self.LongOption,"sharesOption":_self.SharesOption}}, _self.DynamicData);
    _self.StorageIORMConfigOption = merge({"type":"StorageIORMConfigOption","properties":{"congestionThresholdOption":_self.IntOption,"enabledOption":_self.BoolOption,"statsCollectionEnabledOption":_self.BoolOption}}, _self.DynamicData);
    _self.TaskFilterSpec = merge({"type":"TaskFilterSpec","properties":{"alarm":_self.ManagedObjectReference,"entity":_self.TaskFilterSpecByEntity,"eventChainId":"xsd:int[]","parentTaskKey":"xsd:string[]","rootTaskKey":"xsd:string[]","scheduledTask":_self.ManagedObjectReference,"state":_self.TaskInfoState,"tag":"xsd:string[]","time":_self.TaskFilterSpecByTime,"userName":_self.TaskFilterSpecByUsername}}, _self.DynamicData);
    _self.TemplateConfigFileInfo = merge({"type":"TemplateConfigFileInfo"}, _self.VmConfigFileInfo);
    _self.VAppConfigInfo = merge({"type":"VAppConfigInfo","properties":{"annotation":"xsd:string","entityConfig":_self.VAppEntityConfigInfo,"instanceUuid":"xsd:string","managedBy":_self.ManagedByInfo}}, _self.VmConfigInfo);
    _self.VAppOvfSectionSpec = merge({"type":"VAppOvfSectionSpec","properties":{"info":_self.VAppOvfSectionInfo}}, _self.ArrayUpdateSpec);
    _self.VAppProductSpec = merge({"type":"VAppProductSpec","properties":{"info":_self.VAppProductInfo}}, _self.ArrayUpdateSpec);
    _self.VAppPropertySpec = merge({"type":"VAppPropertySpec","properties":{"info":_self.VAppPropertyInfo}}, _self.ArrayUpdateSpec);
    _self.VirtualCdromAtapiBackingInfo = merge({"type":"VirtualCdromAtapiBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualCdromIsoBackingInfo = merge({"type":"VirtualCdromIsoBackingInfo"}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualCdromPassthroughBackingInfo = merge({"type":"VirtualCdromPassthroughBackingInfo","properties":{"exclusive":"xsd:boolean"}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualCdromRemoteAtapiBackingInfo = merge({"type":"VirtualCdromRemoteAtapiBackingInfo"}, _self.VirtualDeviceRemoteDeviceBackingInfo);
    _self.VirtualCdromRemotePassthroughBackingInfo = merge({"type":"VirtualCdromRemotePassthroughBackingInfo","properties":{"exclusive":"xsd:boolean"}}, _self.VirtualDeviceRemoteDeviceBackingInfo);
    _self.VirtualController = merge({"type":"VirtualController","properties":{"busNumber":"xsd:int","device":"xsd:int[]"}}, _self.VirtualDevice);
    _self.VirtualDeviceConfigSpec = merge({"type":"VirtualDeviceConfigSpec","properties":{"device":_self.VirtualDevice,"fileOperation":_self.VirtualDeviceConfigSpecFileOperation,"operation":_self.VirtualDeviceConfigSpecOperation,"profile":_self.VirtualMachineProfileSpec}}, _self.DynamicData);
    _self.VirtualDeviceConnectOption = merge({"type":"VirtualDeviceConnectOption","properties":{"allowGuestControl":_self.BoolOption,"startConnected":_self.BoolOption}}, _self.DynamicData);
    _self.VirtualDeviceDeviceBackingOption = merge({"type":"VirtualDeviceDeviceBackingOption","properties":{"autoDetectAvailable":_self.BoolOption}}, _self.VirtualDeviceBackingOption);
    _self.VirtualDeviceOption = merge({"type":"VirtualDeviceOption","properties":{"autoAssignController":_self.BoolOption,"backingOption":_self.VirtualDeviceBackingOption,"busSlotOption":_self.VirtualDeviceBusSlotOption,"connectOption":_self.VirtualDeviceConnectOption,"controllerType":"xsd:string","defaultBackingOptionIndex":"xsd:int","deprecated":"xsd:boolean","hotRemoveSupported":"xsd:boolean","licensingLimit":"xsd:string[]","plugAndPlay":"xsd:boolean","type":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDeviceRemoteDeviceBackingOption = merge({"type":"VirtualDeviceRemoteDeviceBackingOption","properties":{"autoDetectAvailable":_self.BoolOption}}, _self.VirtualDeviceBackingOption);
    _self.VirtualDisk = merge({"type":"VirtualDisk","properties":{"capacityInBytes":"xsd:long","capacityInKB":"xsd:long","diskObjectId":"xsd:string","shares":_self.SharesInfo,"storageIOAllocation":_self.StorageIOAllocationInfo,"vFlashCacheConfigInfo":_self.VirtualDiskVFlashCacheConfigInfo}}, _self.VirtualDevice);
    _self.VirtualDiskConfigSpec = merge({"type":"VirtualDiskConfigSpec","properties":{"migrateCache":"xsd:boolean"}}, _self.VirtualDeviceConfigSpec);
    _self.VirtualDiskPartitionedRawDiskVer2BackingInfo = merge({"type":"VirtualDiskPartitionedRawDiskVer2BackingInfo","properties":{"partition":"xsd:int[]"}}, _self.VirtualDiskRawDiskVer2BackingInfo);
    _self.VirtualEthernetCard = merge({"type":"VirtualEthernetCard","properties":{"addressType":"xsd:string","macAddress":"xsd:string","wakeOnLanEnabled":"xsd:boolean"}}, _self.VirtualDevice);
    _self.VirtualEthernetCardDistributedVirtualPortBackingInfo = merge({"type":"VirtualEthernetCardDistributedVirtualPortBackingInfo","properties":{"port":_self.DistributedVirtualSwitchPortConnection}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualEthernetCardLegacyNetworkBackingOption = merge({"type":"VirtualEthernetCardLegacyNetworkBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualEthernetCardNetworkBackingOption = merge({"type":"VirtualEthernetCardNetworkBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualFloppy = merge({"type":"VirtualFloppy"}, _self.VirtualDevice);
    _self.VirtualFloppyDeviceBackingOption = merge({"type":"VirtualFloppyDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualFloppyOption = merge({"type":"VirtualFloppyOption"}, _self.VirtualDeviceOption);
    _self.VirtualFloppyRemoteDeviceBackingOption = merge({"type":"VirtualFloppyRemoteDeviceBackingOption"}, _self.VirtualDeviceRemoteDeviceBackingOption);
    _self.VirtualHardware = merge({"type":"VirtualHardware","properties":{"device":_self.VirtualDevice,"memoryMB":"xsd:int","numCoresPerSocket":"xsd:int","numCPU":"xsd:int","virtualICH7MPresent":"xsd:boolean","virtualSMCPresent":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualIDEController = merge({"type":"VirtualIDEController"}, _self.VirtualController);
    _self.VirtualKeyboard = merge({"type":"VirtualKeyboard"}, _self.VirtualDevice);
    _self.VirtualKeyboardOption = merge({"type":"VirtualKeyboardOption"}, _self.VirtualDeviceOption);
    _self.VirtualMachineFileLayout = merge({"type":"VirtualMachineFileLayout","properties":{"configFile":"xsd:string[]","disk":_self.VirtualMachineFileLayoutDiskLayout,"logFile":"xsd:string[]","snapshot":_self.VirtualMachineFileLayoutSnapshotLayout,"swapFile":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineStorageInfo = merge({"type":"VirtualMachineStorageInfo","properties":{"perDatastoreUsage":_self.VirtualMachineUsageOnDatastore,"timestamp":"xsd:dateTime"}}, _self.DynamicData);
    _self.VirtualMachineBootOptions = merge({"type":"VirtualMachineBootOptions","properties":{"bootDelay":"xsd:long","bootOrder":_self.VirtualMachineBootOptionsBootableDevice,"bootRetryDelay":"xsd:long","bootRetryEnabled":"xsd:boolean","enterBIOSSetup":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineCpuIdInfoSpec = merge({"type":"VirtualMachineCpuIdInfoSpec","properties":{"info":_self.HostCpuIdInfo}}, _self.ArrayUpdateSpec);
    _self.VmConfigSpec = merge({"type":"VmConfigSpec","properties":{"eula":"xsd:string[]","installBootRequired":"xsd:boolean","installBootStopDelay":"xsd:int","ipAssignment":_self.VAppIPAssignmentInfo,"ovfEnvironmentTransport":"xsd:string[]","ovfSection":_self.VAppOvfSectionSpec,"product":_self.VAppProductSpec,"property":_self.VAppPropertySpec}}, _self.DynamicData);
    _self.VirtualMachineDefinedProfileSpec = merge({"type":"VirtualMachineDefinedProfileSpec","properties":{"profileData":_self.VirtualMachineProfileRawData,"profileId":"xsd:string"}}, _self.VirtualMachineProfileSpec);
    _self.VirtualMachineDeviceRuntimeInfo = merge({"type":"VirtualMachineDeviceRuntimeInfo","properties":{"key":"xsd:int","runtimeState":_self.VirtualMachineDeviceRuntimeInfoDeviceRuntimeState}}, _self.DynamicData);
    _self.VirtualMachineDiskDeviceInfo = merge({"type":"VirtualMachineDiskDeviceInfo","properties":{"capacity":"xsd:long","vm":_self.ManagedObjectReference}}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineFileLayoutExDiskLayout = merge({"type":"VirtualMachineFileLayoutExDiskLayout","properties":{"chain":_self.VirtualMachineFileLayoutExDiskUnit,"key":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineFileLayoutExSnapshotLayout = merge({"type":"VirtualMachineFileLayoutExSnapshotLayout","properties":{"dataKey":"xsd:int","disk":_self.VirtualMachineFileLayoutExDiskLayout,"key":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.VirtualMachineVideoCard = merge({"type":"VirtualMachineVideoCard","properties":{"enable3DSupport":"xsd:boolean","numDisplays":"xsd:int","use3dRenderer":"xsd:string","useAutoDetect":"xsd:boolean","videoRamSizeInKB":"xsd:long"}}, _self.VirtualDevice);
    _self.VirtualMachineVMCIDevice = merge({"type":"VirtualMachineVMCIDevice","properties":{"allowUnrestrictedCommunication":"xsd:boolean","id":"xsd:long"}}, _self.VirtualDevice);
    _self.VirtualMachineVMCIDeviceOption = merge({"type":"VirtualMachineVMCIDeviceOption","properties":{"allowUnrestrictedCommunication":_self.BoolOption}}, _self.VirtualDeviceOption);
    _self.VirtualMachineVMIROM = merge({"type":"VirtualMachineVMIROM"}, _self.VirtualDevice);
    _self.VirtualParallelPort = merge({"type":"VirtualParallelPort"}, _self.VirtualDevice);
    _self.VirtualParallelPortDeviceBackingOption = merge({"type":"VirtualParallelPortDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualParallelPortOption = merge({"type":"VirtualParallelPortOption"}, _self.VirtualDeviceOption);
    _self.VirtualPCIController = merge({"type":"VirtualPCIController"}, _self.VirtualController);
    _self.VirtualPCIPassthrough = merge({"type":"VirtualPCIPassthrough"}, _self.VirtualDevice);
    _self.VirtualPCIPassthroughDeviceBackingOption = merge({"type":"VirtualPCIPassthroughDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualPCIPassthroughOption = merge({"type":"VirtualPCIPassthroughOption"}, _self.VirtualDeviceOption);
    _self.VirtualPCNet32 = merge({"type":"VirtualPCNet32"}, _self.VirtualEthernetCard);
    _self.VirtualPointingDevice = merge({"type":"VirtualPointingDevice"}, _self.VirtualDevice);
    _self.VirtualPointingDeviceOption = merge({"type":"VirtualPointingDeviceOption"}, _self.VirtualDeviceOption);
    _self.VirtualPS2Controller = merge({"type":"VirtualPS2Controller"}, _self.VirtualController);
    _self.VirtualSATAController = merge({"type":"VirtualSATAController"}, _self.VirtualController);
    _self.VirtualSCSIController = merge({"type":"VirtualSCSIController","properties":{"hotAddRemove":"xsd:boolean","scsiCtlrUnitNumber":"xsd:int","sharedBus":_self.VirtualSCSISharing}}, _self.VirtualController);
    _self.VirtualSCSIPassthrough = merge({"type":"VirtualSCSIPassthrough"}, _self.VirtualDevice);
    _self.VirtualSCSIPassthroughDeviceBackingOption = merge({"type":"VirtualSCSIPassthroughDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualSCSIPassthroughOption = merge({"type":"VirtualSCSIPassthroughOption"}, _self.VirtualDeviceOption);
    _self.VirtualSerialPort = merge({"type":"VirtualSerialPort","properties":{"yieldOnPoll":"xsd:boolean"}}, _self.VirtualDevice);
    _self.VirtualSerialPortDeviceBackingOption = merge({"type":"VirtualSerialPortDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualSerialPortOption = merge({"type":"VirtualSerialPortOption","properties":{"yieldOnPoll":_self.BoolOption}}, _self.VirtualDeviceOption);
    _self.VirtualSIOController = merge({"type":"VirtualSIOController"}, _self.VirtualController);
    _self.VirtualSoundCard = merge({"type":"VirtualSoundCard"}, _self.VirtualDevice);
    _self.VirtualSoundCardDeviceBackingOption = merge({"type":"VirtualSoundCardDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualSoundCardOption = merge({"type":"VirtualSoundCardOption"}, _self.VirtualDeviceOption);
    _self.VirtualSriovEthernetCard = merge({"type":"VirtualSriovEthernetCard","properties":{"allowGuestOSMtuChange":"xsd:boolean","sriovBacking":_self.VirtualSriovEthernetCardSriovBackingInfo}}, _self.VirtualEthernetCard);
    _self.VirtualUSB = merge({"type":"VirtualUSB","properties":{"connected":"xsd:boolean","family":"xsd:string[]","product":"xsd:int","speed":"xsd:string[]","vendor":"xsd:int"}}, _self.VirtualDevice);
    _self.VirtualUSBController = merge({"type":"VirtualUSBController","properties":{"autoConnectDevices":"xsd:boolean","ehciEnabled":"xsd:boolean"}}, _self.VirtualController);
    _self.VirtualUSBOption = merge({"type":"VirtualUSBOption"}, _self.VirtualDeviceOption);
    _self.VirtualUSBRemoteClientBackingOption = merge({"type":"VirtualUSBRemoteClientBackingOption"}, _self.VirtualDeviceRemoteDeviceBackingOption);
    _self.VirtualUSBRemoteHostBackingOption = merge({"type":"VirtualUSBRemoteHostBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualUSBUSBBackingOption = merge({"type":"VirtualUSBUSBBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualUSBXHCIController = merge({"type":"VirtualUSBXHCIController","properties":{"autoConnectDevices":"xsd:boolean"}}, _self.VirtualController);
    _self.VirtualVideoCardOption = merge({"type":"VirtualVideoCardOption","properties":{"numDisplays":_self.IntOption,"support3D":_self.BoolOption,"use3dRendererSupported":_self.BoolOption,"useAutoDetect":_self.BoolOption,"videoRamSizeInKB":_self.LongOption}}, _self.VirtualDeviceOption);
    _self.VirtualVMIROMOption = merge({"type":"VirtualVMIROMOption"}, _self.VirtualDeviceOption);
    _self.VirtualVmxnet = merge({"type":"VirtualVmxnet"}, _self.VirtualEthernetCard);
    _self.VirtualVmxnet2 = merge({"type":"VirtualVmxnet2"}, _self.VirtualVmxnet);
    _self.VirtualVmxnet3 = merge({"type":"VirtualVmxnet3"}, _self.VirtualVmxnet);
    _self.VmConfigFileQuery = merge({"type":"VmConfigFileQuery","properties":{"details":_self.VmConfigFileQueryFlags,"filter":_self.VmConfigFileQueryFilter}}, _self.FileQuery);
    _self.VmDiskFileQuery = merge({"type":"VmDiskFileQuery","properties":{"details":_self.VmDiskFileQueryFlags,"filter":_self.VmDiskFileQueryFilter}}, _self.FileQuery);
    _self.VmfsDatastoreBaseOption = merge({"type":"VmfsDatastoreBaseOption","properties":{"layout":_self.HostDiskPartitionLayout,"partitionFormatChange":"xsd:boolean"}}, _self.DynamicData);
    _self.VmfsDatastoreCreateSpec = merge({"type":"VmfsDatastoreCreateSpec","properties":{"extent":_self.HostScsiDiskPartition,"partition":_self.HostDiskPartitionSpec,"vmfs":_self.HostVmfsSpec}}, _self.VmfsDatastoreSpec);
    _self.VmfsDatastoreExpandSpec = merge({"type":"VmfsDatastoreExpandSpec","properties":{"extent":_self.HostScsiDiskPartition,"partition":_self.HostDiskPartitionSpec}}, _self.VmfsDatastoreSpec);
    _self.VmfsDatastoreExtendSpec = merge({"type":"VmfsDatastoreExtendSpec","properties":{"extent":_self.HostScsiDiskPartition,"partition":_self.HostDiskPartitionSpec}}, _self.VmfsDatastoreSpec);
    _self.VmfsDatastoreInfo = merge({"type":"VmfsDatastoreInfo","properties":{"maxPhysicalRDMFileSize":"xsd:long","maxVirtualRDMFileSize":"xsd:long","vmfs":_self.HostVmfsVolume}}, _self.DatastoreInfo);
    _self.VmfsDatastoreMultipleExtentOption = merge({"type":"VmfsDatastoreMultipleExtentOption","properties":{"vmfsExtent":_self.HostDiskPartitionBlockRange}}, _self.VmfsDatastoreBaseOption);
    _self.VmfsDatastoreOption = merge({"type":"VmfsDatastoreOption","properties":{"info":_self.VmfsDatastoreBaseOption,"spec":_self.VmfsDatastoreSpec}}, _self.DynamicData);
    _self.VmfsDatastoreSingleExtentOption = merge({"type":"VmfsDatastoreSingleExtentOption","properties":{"vmfsExtent":_self.HostDiskPartitionBlockRange}}, _self.VmfsDatastoreBaseOption);
    _self.VmwareDistributedVirtualSwitchPvlanSpec = merge({"type":"VmwareDistributedVirtualSwitchPvlanSpec","properties":{"pvlanId":"xsd:int"}}, _self.VmwareDistributedVirtualSwitchVlanSpec);
    _self.VmwareDistributedVirtualSwitchTrunkVlanSpec = merge({"type":"VmwareDistributedVirtualSwitchTrunkVlanSpec","properties":{"vlanId":_self.NumericRange}}, _self.VmwareDistributedVirtualSwitchVlanSpec);
    _self.VmwareDistributedVirtualSwitchVlanIdSpec = merge({"type":"VmwareDistributedVirtualSwitchVlanIdSpec","properties":{"vlanId":"xsd:int"}}, _self.VmwareDistributedVirtualSwitchVlanSpec);
    _self.VMwareVspanSession = merge({"type":"VMwareVspanSession","properties":{"description":"xsd:string","destinationPort":_self.VMwareVspanPort,"enabled":"xsd:boolean","encapsulationVlanId":"xsd:int","key":"xsd:string","mirroredPacketLength":"xsd:int","name":"xsd:string","normalTrafficAllowed":"xsd:boolean","samplingRate":"xsd:int","sessionType":"xsd:string","sourcePortReceived":_self.VMwareVspanPort,"sourcePortTransmitted":_self.VMwareVspanPort,"stripOriginalVlan":"xsd:boolean"}}, _self.DynamicData);
    _self.VMwareDVSVspanConfigSpec = merge({"type":"VMwareDVSVspanConfigSpec","properties":{"operation":"xsd:string","vspanSession":_self.VMwareVspanSession}}, _self.DynamicData);
    _self.VMwareDVSHealthCheckCapability = merge({"type":"VMwareDVSHealthCheckCapability","properties":{"teamingSupported":"xsd:boolean","vlanMtuSupported":"xsd:boolean"}}, _self.DVSHealthCheckCapability);
    _self.VMwareDVSHealthCheckConfig = merge({"type":"VMwareDVSHealthCheckConfig"}, _self.DVSHealthCheckConfig);
    _self.VMwareDvsLagVlanConfig = merge({"type":"VMwareDvsLagVlanConfig","properties":{"vlanId":_self.NumericRange}}, _self.DynamicData);
    _self.VMwareDVSMtuHealthCheckResult = merge({"type":"VMwareDVSMtuHealthCheckResult","properties":{"mtuMismatch":"xsd:boolean","vlanNotSupportSwitchMtu":_self.NumericRange,"vlanSupportSwitchMtu":_self.NumericRange}}, _self.HostMemberUplinkHealthCheckResult);
    _self.VMwareDVSPortgroupPolicy = merge({"type":"VMwareDVSPortgroupPolicy","properties":{"ipfixOverrideAllowed":"xsd:boolean","securityPolicyOverrideAllowed":"xsd:boolean","uplinkTeamingOverrideAllowed":"xsd:boolean","vlanOverrideAllowed":"xsd:boolean"}}, _self.DVPortgroupPolicy);
    _self.VMwareUplinkLacpPolicy = merge({"type":"VMwareUplinkLacpPolicy","properties":{"enable":_self.BoolPolicy,"mode":_self.StringPolicy}}, _self.InheritablePolicy);
    _self.VMwareDVSTeamingHealthCheckConfig = merge({"type":"VMwareDVSTeamingHealthCheckConfig"}, _self.VMwareDVSHealthCheckConfig);
    _self.VMwareDVSTeamingHealthCheckResult = merge({"type":"VMwareDVSTeamingHealthCheckResult","properties":{"teamingStatus":"xsd:string"}}, _self.HostMemberHealthCheckResult);
    _self.VMwareDVSVlanHealthCheckResult = merge({"type":"VMwareDVSVlanHealthCheckResult","properties":{"trunkedVlan":_self.NumericRange,"untrunkedVlan":_self.NumericRange}}, _self.HostMemberUplinkHealthCheckResult);
    _self.VMwareDVSVlanMtuHealthCheckConfig = merge({"type":"VMwareDVSVlanMtuHealthCheckConfig"}, _self.VMwareDVSHealthCheckConfig);
    _self.VsanHostClusterStatusState = merge({"type":"VsanHostClusterStatusState","properties":{"completion":_self.VsanHostClusterStatusStateCompletionEstimate,"state":"xsd:string"}}, _self.DynamicData);
    _self.VsanHostConfigInfoNetworkInfoPortConfig = merge({"type":"VsanHostConfigInfoNetworkInfoPortConfig","properties":{"device":"xsd:string","ipConfig":_self.VsanHostIpConfig}}, _self.DynamicData);
    _self.AlarmInfo = merge({"type":"AlarmInfo","properties":{"alarm":_self.ManagedObjectReference,"creationEventId":"xsd:int","entity":_self.ManagedObjectReference,"key":"xsd:string","lastModifiedTime":"xsd:dateTime","lastModifiedUser":"xsd:string"}}, _self.AlarmSpec);
    _self.ManagedEntityEventArgument = merge({"type":"ManagedEntityEventArgument","properties":{"entity":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.TypeDescription = merge({"type":"TypeDescription","properties":{"key":"xsd:string"}}, _self.Description);
    _self.ElementDescription = merge({"type":"ElementDescription","properties":{"key":"xsd:string"}}, _self.Description);
    _self.AlarmEventArgument = merge({"type":"AlarmEventArgument","properties":{"alarm":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.AlarmTriggeringAction = merge({"type":"AlarmTriggeringAction","properties":{"action":_self.Action,"green2yellow":"xsd:boolean","red2yellow":"xsd:boolean","transitionSpecs":_self.AlarmTriggeringActionTransitionSpec,"yellow2green":"xsd:boolean","yellow2red":"xsd:boolean"}}, _self.AlarmAction);
    _self.ProfileDeferredPolicyOptionParameter = merge({"type":"ProfileDeferredPolicyOptionParameter","properties":{"inputPath":_self.ProfilePropertyPath,"parameter":_self.KeyAnyValue}}, _self.DynamicData);
    _self.AnswerFileOptionsCreateSpec = merge({"type":"AnswerFileOptionsCreateSpec","properties":{"userInput":_self.ProfileDeferredPolicyOptionParameter}}, _self.AnswerFileCreateSpec);
    _self.AnswerFileStatusError = merge({"type":"AnswerFileStatusError","properties":{"errMsg":_self.LocalizableMessage,"userInputPath":_self.ProfilePropertyPath}}, _self.DynamicData);
    _self.AnswerFileStatusResult = merge({"type":"AnswerFileStatusResult","properties":{"checkedTime":"xsd:dateTime","error":_self.AnswerFileStatusError,"host":_self.ManagedObjectReference,"status":"xsd:string"}}, _self.DynamicData);
    _self.ProfilePolicy = merge({"type":"ProfilePolicy","properties":{"id":"xsd:string","policyOption":_self.PolicyOption}}, _self.DynamicData);
    _self.AuthorizationDescription = merge({"type":"AuthorizationDescription","properties":{"privilege":_self.ElementDescription,"privilegeGroup":_self.ElementDescription}}, _self.DynamicData);
    _self.AuthorizationRole = merge({"type":"AuthorizationRole","properties":{"info":_self.Description,"name":"xsd:string","privilege":"xsd:string[]","roleId":"xsd:int","system":"xsd:boolean"}}, _self.DynamicData);
    _self.EVCMode = merge({"type":"EVCMode","properties":{"featureCapability":_self.HostFeatureCapability,"featureMask":_self.HostFeatureMask,"featureRequirement":_self.VirtualMachineFeatureRequirement,"guaranteedCPUFeatures":_self.HostCpuIdInfo,"track":"xsd:string[]","vendor":"xsd:string","vendorTier":"xsd:int"}}, _self.ElementDescription);
    _self.ChoiceOption = merge({"type":"ChoiceOption","properties":{"choiceInfo":_self.ElementDescription,"defaultIndex":"xsd:int"}}, _self.OptionType);
    _self.ClusterAffinityRuleSpec = merge({"type":"ClusterAffinityRuleSpec","properties":{"vm":_self.ManagedObjectReference}}, _self.ClusterRuleInfo);
    _self.ClusterAntiAffinityRuleSpec = merge({"type":"ClusterAntiAffinityRuleSpec","properties":{"vm":_self.ManagedObjectReference}}, _self.ClusterRuleInfo);
    _self.ClusterDrsRecommendation = merge({"type":"ClusterDrsRecommendation","properties":{"key":"xsd:string","migrationList":_self.ClusterDrsMigration,"rating":"xsd:int","reason":"xsd:string","reasonText":"xsd:string"}}, _self.DynamicData);
    _self.ClusterComputeResourceSummary = merge({"type":"ClusterComputeResourceSummary","properties":{"admissionControlInfo":_self.ClusterDasAdmissionControlInfo,"currentBalance":"xsd:int","currentEVCModeKey":"xsd:string","currentFailoverLevel":"xsd:int","dasData":_self.ClusterDasData,"numVmotions":"xsd:int","targetBalance":"xsd:int"}}, _self.ComputeResourceSummary);
    _self.ClusterDrsConfigInfo = merge({"type":"ClusterDrsConfigInfo","properties":{"defaultVmBehavior":_self.DrsBehavior,"enabled":"xsd:boolean","enableVmBehaviorOverrides":"xsd:boolean","option":_self.OptionValue,"vmotionRate":"xsd:int"}}, _self.DynamicData);
    _self.ClusterDpmConfigInfo = merge({"type":"ClusterDpmConfigInfo","properties":{"defaultDpmBehavior":_self.DpmBehavior,"enabled":"xsd:boolean","hostPowerActionRate":"xsd:int","option":_self.OptionValue}}, _self.DynamicData);
    _self.FolderEventArgument = merge({"type":"FolderEventArgument","properties":{"folder":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.ClusterDasAamHostInfo = merge({"type":"ClusterDasAamHostInfo","properties":{"hostDasState":_self.ClusterDasAamNodeState,"primaryHosts":"xsd:string[]"}}, _self.ClusterDasHostInfo);
    _self.ClusterDasAdvancedRuntimeInfo = merge({"type":"ClusterDasAdvancedRuntimeInfo","properties":{"dasHostInfo":_self.ClusterDasHostInfo,"heartbeatDatastoreInfo":_self.DasHeartbeatDatastoreInfo}}, _self.DynamicData);
    _self.ClusterDasVmSettings = merge({"type":"ClusterDasVmSettings","properties":{"isolationResponse":"xsd:string","restartPriority":"xsd:string","vmToolsMonitoringSettings":_self.ClusterVmToolsMonitoringSettings}}, _self.DynamicData);
    _self.ClusterDasFailoverLevelAdvancedRuntimeInfo = merge({"type":"ClusterDasFailoverLevelAdvancedRuntimeInfo","properties":{"hostSlots":_self.ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots,"slotInfo":_self.ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo,"totalGoodHosts":"xsd:int","totalHosts":"xsd:int","totalSlots":"xsd:int","totalVms":"xsd:int","unreservedSlots":"xsd:int","usedSlots":"xsd:int","vmsRequiringMultipleSlots":_self.ClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots}}, _self.ClusterDasAdvancedRuntimeInfo);
    _self.ClusterFailoverHostAdmissionControlInfo = merge({"type":"ClusterFailoverHostAdmissionControlInfo","properties":{"hostStatus":_self.ClusterFailoverHostAdmissionControlInfoHostStatus}}, _self.ClusterDasAdmissionControlInfo);
    _self.ClusterFailoverLevelAdmissionControlPolicy = merge({"type":"ClusterFailoverLevelAdmissionControlPolicy","properties":{"failoverLevel":"xsd:int","slotPolicy":_self.ClusterSlotPolicy}}, _self.ClusterDasAdmissionControlPolicy);
    _self.ComplianceProfile = merge({"type":"ComplianceProfile","properties":{"expression":_self.ProfileExpression,"rootExpression":"xsd:string"}}, _self.DynamicData);
    _self.ClusterProfileConfigInfo = merge({"type":"ClusterProfileConfigInfo","properties":{"complyProfile":_self.ComplianceProfile}}, _self.ProfileConfigInfo);
    _self.ClusterProfileConfigSpec = merge({"type":"ClusterProfileConfigSpec"}, _self.ClusterProfileCreateSpec);
    _self.CompositePolicyOption = merge({"type":"CompositePolicyOption","properties":{"option":_self.PolicyOption}}, _self.PolicyOption);
    _self.ComputeResourceEventArgument = merge({"type":"ComputeResourceEventArgument","properties":{"computeResource":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.VirtualMachineDatastoreInfo = merge({"type":"VirtualMachineDatastoreInfo","properties":{"capability":_self.DatastoreCapability,"datastore":_self.DatastoreSummary,"maxFileSize":"xsd:long","maxVirtualDiskCapacity":"xsd:long","mode":"xsd:string","vStorageSupport":"xsd:string"}}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineIdeDiskDeviceInfo = merge({"type":"VirtualMachineIdeDiskDeviceInfo","properties":{"partitionTable":_self.VirtualMachineIdeDiskDevicePartitionInfo}}, _self.VirtualMachineDiskDeviceInfo);
    _self.VirtualCdrom = merge({"type":"VirtualCdrom"}, _self.VirtualDevice);
    _self.CustomFieldDef = merge({"type":"CustomFieldDef","properties":{"fieldDefPrivileges":_self.PrivilegePolicyDef,"fieldInstancePrivileges":_self.PrivilegePolicyDef,"key":"xsd:int","managedObjectType":"xsd:string","name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.CustomFieldsManager = {"type":"CustomFieldsManager","properties":{"field":_self.CustomFieldDef},"methods":{"AddCustomFieldDef":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","moType":"xsd:string","fieldDefPolicy":"PrivilegePolicyDef","fieldPolicy":"PrivilegePolicyDef"},"returns":"CustomFieldDef"},"RemoveCustomFieldDef":{"params":{"_this":"ManagedObjectReference","key":"xsd:int"},"returns":null},"RenameCustomFieldDef":{"params":{"_this":"ManagedObjectReference","key":"xsd:int","name":"xsd:string"},"returns":null},"SetField":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","key":"xsd:int","value":"xsd:string"},"returns":null}}};
    _self.CustomFieldStringValue = merge({"type":"CustomFieldStringValue","properties":{"value":"xsd:string"}}, _self.CustomFieldValue);
    _self.CustomizationAutoIpV6Generator = merge({"type":"CustomizationAutoIpV6Generator"}, _self.CustomizationIpV6Generator);
    _self.CustomizationCustomIpGenerator = merge({"type":"CustomizationCustomIpGenerator","properties":{"argument":"xsd:string"}}, _self.CustomizationIpGenerator);
    _self.CustomizationCustomIpV6Generator = merge({"type":"CustomizationCustomIpV6Generator","properties":{"argument":"xsd:string"}}, _self.CustomizationIpV6Generator);
    _self.CustomizationCustomName = merge({"type":"CustomizationCustomName","properties":{"argument":"xsd:string"}}, _self.CustomizationName);
    _self.CustomizationDhcpIpGenerator = merge({"type":"CustomizationDhcpIpGenerator"}, _self.CustomizationIpGenerator);
    _self.CustomizationDhcpIpV6Generator = merge({"type":"CustomizationDhcpIpV6Generator"}, _self.CustomizationIpV6Generator);
    _self.CustomizationFixedIp = merge({"type":"CustomizationFixedIp","properties":{"ipAddress":"xsd:string"}}, _self.CustomizationIpGenerator);
    _self.CustomizationFixedIpV6 = merge({"type":"CustomizationFixedIpV6","properties":{"ipAddress":"xsd:string","subnetMask":"xsd:int"}}, _self.CustomizationIpV6Generator);
    _self.CustomizationFixedName = merge({"type":"CustomizationFixedName","properties":{"name":"xsd:string"}}, _self.CustomizationName);
    _self.CustomizationGuiUnattended = merge({"type":"CustomizationGuiUnattended","properties":{"autoLogon":"xsd:boolean","autoLogonCount":"xsd:int","password":_self.CustomizationPassword,"timeZone":"xsd:int"}}, _self.DynamicData);
    _self.CustomizationIPSettingsIpV6AddressSpec = merge({"type":"CustomizationIPSettingsIpV6AddressSpec","properties":{"gateway":"xsd:string[]","ip":_self.CustomizationIpV6Generator}}, _self.DynamicData);
    _self.CustomizationLinuxOptions = merge({"type":"CustomizationLinuxOptions"}, _self.CustomizationOptions);
    _self.CustomizationLinuxPrep = merge({"type":"CustomizationLinuxPrep","properties":{"domain":"xsd:string","hostName":_self.CustomizationName,"hwClockUTC":"xsd:boolean","timeZone":"xsd:string"}}, _self.CustomizationIdentitySettings);
    _self.CustomizationSysprep = merge({"type":"CustomizationSysprep","properties":{"guiRunOnce":_self.CustomizationGuiRunOnce,"guiUnattended":_self.CustomizationGuiUnattended,"identification":_self.CustomizationIdentification,"licenseFilePrintData":_self.CustomizationLicenseFilePrintData,"userData":_self.CustomizationUserData}}, _self.CustomizationIdentitySettings);
    _self.HostEventArgument = merge({"type":"HostEventArgument","properties":{"host":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.DatabaseSizeParam = merge({"type":"DatabaseSizeParam","properties":{"inventoryDesc":_self.InventoryDescription,"perfStatsDesc":_self.PerformanceStatisticsDescription}}, _self.DynamicData);
    _self.DatacenterEventArgument = merge({"type":"DatacenterEventArgument","properties":{"datacenter":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.DatastoreHostMount = merge({"type":"DatastoreHostMount","properties":{"key":_self.ManagedObjectReference,"mountInfo":_self.HostMountInfo}}, _self.DynamicData);
    _self.DatastoreEventArgument = merge({"type":"DatastoreEventArgument","properties":{"datastore":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.DatastoreOption = merge({"type":"DatastoreOption","properties":{"unsupportedVolumes":_self.VirtualMachineDatastoreVolumeOption}}, _self.DynamicData);
    _self.DVSRuntimeInfo = merge({"type":"DVSRuntimeInfo","properties":{"hostMemberRuntime":_self.HostMemberRuntimeInfo}}, _self.DynamicData);
    _self.DVSSummary = merge({"type":"DVSSummary","properties":{"contact":_self.DVSContactInfo,"description":"xsd:string","host":_self.ManagedObjectReference,"hostMember":_self.ManagedObjectReference,"name":"xsd:string","numHosts":"xsd:int","numPorts":"xsd:int","portgroupName":"xsd:string[]","productInfo":_self.DistributedVirtualSwitchProductSpec,"uuid":"xsd:string","vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.DistributedVirtualSwitchHostMemberConfigInfo = merge({"type":"DistributedVirtualSwitchHostMemberConfigInfo","properties":{"backing":_self.DistributedVirtualSwitchHostMemberBacking,"host":_self.ManagedObjectReference,"maxProxySwitchPorts":"xsd:int","vendorSpecificConfig":_self.DistributedVirtualSwitchKeyedOpaqueBlob}}, _self.DynamicData);
    _self.DistributedVirtualSwitchHostMemberPnicBacking = merge({"type":"DistributedVirtualSwitchHostMemberPnicBacking","properties":{"pnicSpec":_self.DistributedVirtualSwitchHostMemberPnicSpec}}, _self.DistributedVirtualSwitchHostMemberBacking);
    _self.DistributedVirtualSwitchManagerHostArrayFilter = merge({"type":"DistributedVirtualSwitchManagerHostArrayFilter","properties":{"host":_self.ManagedObjectReference}}, _self.DistributedVirtualSwitchManagerHostDvsFilterSpec);
    _self.DistributedVirtualSwitchManagerHostContainerFilter = merge({"type":"DistributedVirtualSwitchManagerHostContainerFilter","properties":{"hostContainer":_self.DistributedVirtualSwitchManagerHostContainer}}, _self.DistributedVirtualSwitchManagerHostDvsFilterSpec);
    _self.DVSTrafficShapingPolicy = merge({"type":"DVSTrafficShapingPolicy","properties":{"averageBandwidth":_self.LongPolicy,"burstSize":_self.LongPolicy,"enabled":_self.BoolPolicy,"peakBandwidth":_self.LongPolicy}}, _self.InheritablePolicy);
    _self.DVPortStatus = merge({"type":"DVPortStatus","properties":{"blocked":"xsd:boolean","linkPeer":"xsd:string","linkUp":"xsd:boolean","macAddress":"xsd:string","mtu":"xsd:int","statusDetail":"xsd:string","trunkingMode":"xsd:boolean","vlanIds":_self.NumericRange,"vmDirectPathGen2Active":"xsd:boolean","vmDirectPathGen2InactiveReasonExtended":"xsd:string","vmDirectPathGen2InactiveReasonNetwork":"xsd:string[]","vmDirectPathGen2InactiveReasonOther":"xsd:string[]"}}, _self.DynamicData);
    _self.DvsAcceptNetworkRuleAction = merge({"type":"DvsAcceptNetworkRuleAction"}, _self.DvsNetworkRuleAction);
    _self.DVSFeatureCapability = merge({"type":"DVSFeatureCapability","properties":{"backupRestoreCapability":_self.DVSBackupRestoreCapability,"healthCheckCapability":_self.DVSHealthCheckCapability,"networkFilterSupported":"xsd:boolean","networkResourceManagementCapability":_self.DVSNetworkResourceManagementCapability,"networkResourceManagementSupported":"xsd:boolean","networkResourcePoolHighShareValue":"xsd:int","nicTeamingPolicy":"xsd:string[]","rollbackCapability":_self.DVSRollbackCapability,"vmDirectPathGen2Supported":"xsd:boolean"}}, _self.DynamicData);
    _self.DvsCopyNetworkRuleAction = merge({"type":"DvsCopyNetworkRuleAction"}, _self.DvsNetworkRuleAction);
    _self.DvsDropNetworkRuleAction = merge({"type":"DvsDropNetworkRuleAction"}, _self.DvsNetworkRuleAction);
    _self.DvsEventArgument = merge({"type":"DvsEventArgument","properties":{"dvs":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.DVSFailureCriteria = merge({"type":"DVSFailureCriteria","properties":{"checkBeacon":_self.BoolPolicy,"checkDuplex":_self.BoolPolicy,"checkErrorPercent":_self.BoolPolicy,"checkSpeed":_self.StringPolicy,"fullDuplex":_self.BoolPolicy,"percentage":_self.IntPolicy,"speed":_self.IntPolicy}}, _self.InheritablePolicy);
    _self.DvsFilterConfig = merge({"type":"DvsFilterConfig","properties":{"agentName":"xsd:string","key":"xsd:string","onFailure":"xsd:string","parameters":_self.DvsFilterParameter,"slotNumber":"xsd:string"}}, _self.InheritablePolicy);
    _self.DvsFilterConfigSpec = merge({"type":"DvsFilterConfigSpec","properties":{"operation":"xsd:string"}}, _self.DvsFilterConfig);
    _self.SingleIp = merge({"type":"SingleIp","properties":{"address":"xsd:string"}}, _self.IpAddress);
    _self.DvsOutOfSyncHostArgument = merge({"type":"DvsOutOfSyncHostArgument","properties":{"configParamters":"xsd:string[]","outOfSyncHost":_self.HostEventArgument}}, _self.DynamicData);
    _self.DvsIpNetworkRuleQualifier = merge({"type":"DvsIpNetworkRuleQualifier","properties":{"destinationAddress":_self.IpAddress,"destinationIpPort":_self.DvsIpPort,"protocol":_self.IntExpression,"sourceAddress":_self.IpAddress,"sourceIpPort":_self.DvsIpPort,"tcpFlags":_self.IntExpression}}, _self.DvsNetworkRuleQualifier);
    _self.DvsLogNetworkRuleAction = merge({"type":"DvsLogNetworkRuleAction"}, _self.DvsNetworkRuleAction);
    _self.DvsMacNetworkRuleQualifier = merge({"type":"DvsMacNetworkRuleQualifier","properties":{"destinationAddress":_self.MacAddress,"protocol":_self.IntExpression,"sourceAddress":_self.MacAddress,"vlanId":_self.IntExpression}}, _self.DvsNetworkRuleQualifier);
    _self.DvsMacRewriteNetworkRuleAction = merge({"type":"DvsMacRewriteNetworkRuleAction","properties":{"rewriteMac":"xsd:string"}}, _self.DvsNetworkRuleAction);
    _self.DVSNetworkResourcePoolAllocationInfo = merge({"type":"DVSNetworkResourcePoolAllocationInfo","properties":{"limit":"xsd:long","priorityTag":"xsd:int","shares":_self.SharesInfo}}, _self.DynamicData);
    _self.DVSNetworkResourcePoolConfigSpec = merge({"type":"DVSNetworkResourcePoolConfigSpec","properties":{"allocationInfo":_self.DVSNetworkResourcePoolAllocationInfo,"configVersion":"xsd:string","description":"xsd:string","key":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.DvsSystemTrafficNetworkRuleQualifier = merge({"type":"DvsSystemTrafficNetworkRuleQualifier","properties":{"typeOfSystemTraffic":_self.StringExpression}}, _self.DvsNetworkRuleQualifier);
    _self.DvsTrafficRuleset = merge({"type":"DvsTrafficRuleset","properties":{"enabled":"xsd:boolean","key":"xsd:string","precedence":"xsd:int","rules":_self.DvsTrafficRule}}, _self.DynamicData);
    _self.EnumDescription = merge({"type":"EnumDescription","properties":{"key":"xsd:string","tags":_self.ElementDescription}}, _self.DynamicData);
    _self.EventArgDesc = merge({"type":"EventArgDesc","properties":{"description":_self.ElementDescription,"name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.EventDescription = merge({"type":"EventDescription","properties":{"category":_self.ElementDescription,"enumeratedTypes":_self.EnumDescription,"eventInfo":_self.EventDescriptionEventDetail}}, _self.DynamicData);
    _self.ExtendedElementDescription = merge({"type":"ExtendedElementDescription","properties":{"messageArg":_self.KeyAnyValue,"messageCatalogKeyPrefix":"xsd:string"}}, _self.ElementDescription);
    _self.ExtensibleManagedObject = {"type":"ExtensibleManagedObject","properties":{"availableField":_self.CustomFieldDef,"value":_self.CustomFieldValue},"methods":{"setCustomValue":{"params":{"_this":"ManagedObjectReference","key":"xsd:string","value":"xsd:string"},"returns":null}}};
    _self.Extension = merge({"type":"Extension","properties":{"client":_self.ExtensionClientInfo,"company":"xsd:string","description":_self.Description,"eventList":_self.ExtensionEventTypeInfo,"extendedProductInfo":_self.ExtExtendedProductInfo,"faultList":_self.ExtensionFaultTypeInfo,"healthInfo":_self.ExtensionHealthInfo,"key":"xsd:string","lastHeartbeatTime":"xsd:dateTime","managedEntityInfo":_self.ExtManagedEntityInfo,"ovfConsumerInfo":_self.ExtensionOvfConsumerInfo,"privilegeList":_self.ExtensionPrivilegeInfo,"resourceList":_self.ExtensionResourceInfo,"server":_self.ExtensionServerInfo,"shownInSolutionManager":"xsd:boolean","solutionManagerInfo":_self.ExtSolutionManagerInfo,"subjectName":"xsd:string","taskList":_self.ExtensionTaskTypeInfo,"type":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionManager = {"type":"ExtensionManager","properties":{"extensionList":_self.Extension},"methods":{"FindExtension":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string"},"returns":"Extension"},"GetPublicKey":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"QueryExtensionIpAllocationUsage":{"params":{"_this":"ManagedObjectReference","extensionKeys":"xsd:string"},"returns":"ExtensionManagerIpAllocationUsage"},"QueryManagedBy":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string"},"returns":"ManagedObjectReference"},"RegisterExtension":{"params":{"_this":"ManagedObjectReference","extension":"Extension"},"returns":null},"SetExtensionCertificate":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string","certificatePem":"xsd:string"},"returns":null},"SetPublicKey":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string","publicKey":"xsd:string"},"returns":null},"UnregisterExtension":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string"},"returns":null},"UpdateExtension":{"params":{"_this":"ManagedObjectReference","extension":"Extension"},"returns":null}}};
    _self.NetIpConfigInfo = merge({"type":"NetIpConfigInfo","properties":{"autoConfigurationEnabled":"xsd:boolean","dhcp":_self.NetDhcpConfigInfo,"ipAddress":_self.NetIpConfigInfoIpAddress}}, _self.DynamicData);
    _self.GuestOsDescriptor = merge({"type":"GuestOsDescriptor","properties":{"cpuFeatureMask":_self.HostCpuIdInfo,"family":"xsd:string","fullName":"xsd:string","ich7mRecommended":"xsd:boolean","id":"xsd:string","numSupportedCoresPerSocket":"xsd:int","numSupportedPhysicalSockets":"xsd:int","recommended3D":"xsd:boolean","recommendedCdromController":"xsd:string","recommendedColorDepth":"xsd:int","recommendedDiskController":"xsd:string","recommendedDiskSizeMB":"xsd:int","recommendedEthernetCard":"xsd:string","recommendedFirmware":"xsd:string","recommendedMemMB":"xsd:int","recommendedSCSIController":"xsd:string","recommendedUSBController":"xsd:string","smcRecommended":"xsd:boolean","smcRequired":"xsd:boolean","supportedDiskControllerList":"xsd:string[]","supportedEthernetCard":"xsd:string[]","supportedFirmware":"xsd:string[]","supportedForCreate":"xsd:boolean","supportedMaxCPUs":"xsd:int","supportedMaxMemMB":"xsd:int","supportedMinMemMB":"xsd:int","supportedNumDisks":"xsd:int","supportedUSBControllerList":"xsd:string[]","supportLevel":"xsd:string","supports3D":"xsd:boolean","supportsCpuHotAdd":"xsd:boolean","supportsCpuHotRemove":"xsd:boolean","supportsMemoryHotAdd":"xsd:boolean","supportsSlaveDisk":"xsd:boolean","supportsVMI":"xsd:boolean","supportsWakeOnLan":"xsd:boolean","usbRecommended":"xsd:boolean","vRAMSizeInKB":_self.IntOption}}, _self.DynamicData);
    _self.NetIpRouteConfigInfo = merge({"type":"NetIpRouteConfigInfo","properties":{"ipRoute":_self.NetIpRouteConfigInfoIpRoute}}, _self.DynamicData);
    _self.HostAuthenticationManager = {"type":"HostAuthenticationManager","properties":{"info":_self.HostAuthenticationManagerInfo,"supportedStore":_self.ManagedObjectReference},"methods":{}};
    _self.HostAutoStartManager = {"type":"HostAutoStartManager","properties":{"config":_self.HostAutoStartManagerConfig},"methods":{"AutoStartPowerOff":{"params":{"_this":"ManagedObjectReference"},"returns":null},"AutoStartPowerOn":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ReconfigureAutostart":{"params":{"_this":"ManagedObjectReference","spec":"HostAutoStartManagerConfig"},"returns":null}}};
    _self.HostFileSystemVolumeInfo = merge({"type":"HostFileSystemVolumeInfo","properties":{"mountInfo":_self.HostFileSystemMountInfo,"volumeTypeList":"xsd:string[]"}}, _self.DynamicData);
    _self.HostFirewallInfo = merge({"type":"HostFirewallInfo","properties":{"defaultPolicy":_self.HostFirewallDefaultPolicy,"ruleset":_self.HostFirewallRuleset}}, _self.DynamicData);
    _self.OptionDef = merge({"type":"OptionDef","properties":{"optionType":_self.OptionType}}, _self.ElementDescription);
    _self.HostServiceInfo = merge({"type":"HostServiceInfo","properties":{"service":_self.HostService}}, _self.DynamicData);
    _self.HostVirtualNicManagerNicTypeSelection = merge({"type":"HostVirtualNicManagerNicTypeSelection","properties":{"nicType":"xsd:string[]","vnic":_self.HostVirtualNicConnection}}, _self.DynamicData);
    _self.HostCpuSchedulerSystem = merge({"type":"HostCpuSchedulerSystem","properties":{"hyperthreadInfo":_self.HostHyperThreadScheduleInfo},"methods":{"DisableHyperThreading":{"params":{"_this":"ManagedObjectReference"},"returns":null},"EnableHyperThreading":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostDiagnosticPartitionCreateSpec = merge({"type":"HostDiagnosticPartitionCreateSpec","properties":{"active":"xsd:boolean","diagnosticType":"xsd:string","id":_self.HostScsiDiskPartition,"partition":_self.HostDiskPartitionSpec,"storageType":"xsd:string"}}, _self.DynamicData);
    _self.HostScsiDisk = merge({"type":"HostScsiDisk","properties":{"capacity":_self.HostDiskDimensionsLba,"devicePath":"xsd:string","ssd":"xsd:boolean"}}, _self.ScsiLun);
    _self.HostDnsConfigSpec = merge({"type":"HostDnsConfigSpec","properties":{"virtualNicConnection":_self.HostVirtualNicConnection}}, _self.HostDnsConfig);
    _self.HostFibreChannelOverEthernetTargetTransport = merge({"type":"HostFibreChannelOverEthernetTargetTransport","properties":{"fcfMac":"xsd:string","vlanId":"xsd:int","vnportMac":"xsd:string"}}, _self.HostFibreChannelTargetTransport);
    _self.HostFirewallConfigRuleSetConfig = merge({"type":"HostFirewallConfigRuleSetConfig","properties":{"allowedHosts":_self.HostFirewallRulesetIpList,"enabled":"xsd:boolean","rulesetId":"xsd:string"}}, _self.DynamicData);
    _self.HostFirewallSystem = merge({"type":"HostFirewallSystem","properties":{"firewallInfo":_self.HostFirewallInfo},"methods":{"DisableRuleset":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"EnableRuleset":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"RefreshFirewall":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UpdateDefaultPolicy":{"params":{"_this":"ManagedObjectReference","defaultPolicy":"HostFirewallDefaultPolicy"},"returns":null},"UpdateRuleset":{"params":{"_this":"ManagedObjectReference","id":"xsd:string","spec":"HostFirewallRulesetRulesetSpec"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostGraphicsManager = merge({"type":"HostGraphicsManager","properties":{"graphicsInfo":_self.HostGraphicsInfo},"methods":{"IsSharedGraphicsActive":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:boolean"},"RefreshGraphicsManager":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostHardwareElementInfo = merge({"type":"HostHardwareElementInfo","properties":{"name":"xsd:string","status":_self.ElementDescription}}, _self.DynamicData);
    _self.HostStorageElementInfo = merge({"type":"HostStorageElementInfo","properties":{"operationalInfo":_self.HostStorageOperationalInfo}}, _self.HostHardwareElementInfo);
    _self.HostSystemIdentificationInfo = merge({"type":"HostSystemIdentificationInfo","properties":{"identifierType":_self.ElementDescription,"identifierValue":"xsd:string"}}, _self.DynamicData);
    _self.HostInternetScsiHbaSendTarget = merge({"type":"HostInternetScsiHbaSendTarget","properties":{"address":"xsd:string","advancedOptions":_self.HostInternetScsiHbaParamValue,"authenticationProperties":_self.HostInternetScsiHbaAuthenticationProperties,"digestProperties":_self.HostInternetScsiHbaDigestProperties,"parent":"xsd:string","port":"xsd:int","supportedAdvancedOptions":_self.OptionDef}}, _self.DynamicData);
    _self.HostInternetScsiHbaStaticTarget = merge({"type":"HostInternetScsiHbaStaticTarget","properties":{"address":"xsd:string","advancedOptions":_self.HostInternetScsiHbaParamValue,"authenticationProperties":_self.HostInternetScsiHbaAuthenticationProperties,"digestProperties":_self.HostInternetScsiHbaDigestProperties,"discoveryMethod":"xsd:string","iScsiName":"xsd:string","parent":"xsd:string","port":"xsd:int","supportedAdvancedOptions":_self.OptionDef}}, _self.DynamicData);
    _self.HostInternetScsiHbaTargetSet = merge({"type":"HostInternetScsiHbaTargetSet","properties":{"sendTargets":_self.HostInternetScsiHbaSendTarget,"staticTargets":_self.HostInternetScsiHbaStaticTarget}}, _self.DynamicData);
    _self.HostIpConfig = merge({"type":"HostIpConfig","properties":{"dhcp":"xsd:boolean","ipAddress":"xsd:string","ipV6Config":_self.HostIpConfigIpV6AddressConfiguration,"subnetMask":"xsd:string"}}, _self.DynamicData);
    _self.HostMemorySystem = merge({"type":"HostMemorySystem","properties":{"consoleReservationInfo":_self.ServiceConsoleReservationInfo,"virtualMachineReservationInfo":_self.VirtualMachineMemoryReservationInfo},"methods":{"ReconfigureServiceConsoleReservation":{"params":{"_this":"ManagedObjectReference","cfgBytes":"xsd:long"},"returns":null},"ReconfigureVirtualMachineReservation":{"params":{"_this":"ManagedObjectReference","spec":"VirtualMachineMemoryReservationSpec"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostMultipathInfoLogicalUnit = merge({"type":"HostMultipathInfoLogicalUnit","properties":{"id":"xsd:string","key":"xsd:string","lun":"xsd:string","path":_self.HostMultipathInfoPath,"policy":_self.HostMultipathInfoLogicalUnitPolicy,"storageArrayTypePolicy":_self.HostMultipathInfoLogicalUnitStorageArrayTypePolicy}}, _self.DynamicData);
    _self.HostNatService = merge({"type":"HostNatService","properties":{"key":"xsd:string","spec":_self.HostNatServiceSpec}}, _self.DynamicData);
    _self.HostProxySwitchConfig = merge({"type":"HostProxySwitchConfig","properties":{"changeOperation":"xsd:string","spec":_self.HostProxySwitchSpec,"uuid":"xsd:string"}}, _self.DynamicData);
    _self.HostProxySwitch = merge({"type":"HostProxySwitch","properties":{"configNumPorts":"xsd:int","dvsName":"xsd:string","dvsUuid":"xsd:string","hostLag":_self.HostProxySwitchHostLagConfig,"key":"xsd:string","mtu":"xsd:int","networkReservationSupported":"xsd:boolean","numPorts":"xsd:int","numPortsAvailable":"xsd:int","pnic":"xsd:string[]","spec":_self.HostProxySwitchSpec,"uplinkPort":_self.KeyValue}}, _self.DynamicData);
    _self.HostNetworkPolicy = merge({"type":"HostNetworkPolicy","properties":{"nicTeaming":_self.HostNicTeamingPolicy,"offloadPolicy":_self.HostNetOffloadCapabilities,"security":_self.HostNetworkSecurityPolicy,"shapingPolicy":_self.HostNetworkTrafficShapingPolicy}}, _self.DynamicData);
    _self.HostNumericSensorInfo = merge({"type":"HostNumericSensorInfo","properties":{"baseUnits":"xsd:string","currentReading":"xsd:long","healthState":_self.ElementDescription,"name":"xsd:string","rateUnits":"xsd:string","sensorType":"xsd:string","unitModifier":"xsd:int"}}, _self.DynamicData);
    _self.HostPatchManagerResult = merge({"type":"HostPatchManagerResult","properties":{"status":_self.HostPatchManagerStatus,"version":"xsd:string","xmlResult":"xsd:string"}}, _self.DynamicData);
    _self.HostPathSelectionPolicyOption = merge({"type":"HostPathSelectionPolicyOption","properties":{"policy":_self.ElementDescription}}, _self.DynamicData);
    _self.HostPciPassthruSystem = merge({"type":"HostPciPassthruSystem","properties":{"pciPassthruInfo":_self.HostPciPassthruInfo},"methods":{"Refresh":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UpdatePassthruConfig":{"params":{"_this":"ManagedObjectReference","config":"HostPciPassthruConfig"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostPortGroupSpec = merge({"type":"HostPortGroupSpec","properties":{"name":"xsd:string","policy":_self.HostNetworkPolicy,"vlanId":"xsd:int","vswitchName":"xsd:string"}}, _self.DynamicData);
    _self.HostScsiTopologyInterface = merge({"type":"HostScsiTopologyInterface","properties":{"adapter":"xsd:string","key":"xsd:string","target":_self.HostScsiTopologyTarget}}, _self.DynamicData);
    _self.HostServiceSystem = merge({"type":"HostServiceSystem","properties":{"serviceInfo":_self.HostServiceInfo},"methods":{"RefreshServices":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RestartService":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"StartService":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"StopService":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"UninstallService":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"UpdateServicePolicy":{"params":{"_this":"ManagedObjectReference","id":"xsd:string","policy":"xsd:string"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostStorageArrayTypePolicyOption = merge({"type":"HostStorageArrayTypePolicyOption","properties":{"policy":_self.ElementDescription}}, _self.DynamicData);
    _self.ResourceConfigSpec = merge({"type":"ResourceConfigSpec","properties":{"changeVersion":"xsd:string","cpuAllocation":_self.ResourceAllocationInfo,"entity":_self.ManagedObjectReference,"lastModified":"xsd:dateTime","memoryAllocation":_self.ResourceAllocationInfo}}, _self.DynamicData);
    _self.HostTpmAttestationReport = merge({"type":"HostTpmAttestationReport","properties":{"tpmEvents":_self.HostTpmEventLogEntry,"tpmLogReliable":"xsd:boolean","tpmPcrValues":_self.HostTpmDigestInfo}}, _self.DynamicData);
    _self.HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption = merge({"type":"HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption","properties":{"blockSizeInKBOption":_self.LongOption,"cacheConsistencyType":_self.ChoiceOption,"cacheMode":_self.ChoiceOption,"maxDiskSizeInKB":"xsd:long","minSupportedModuleVersion":"xsd:string","reservationInMBOption":_self.LongOption,"vFlashModule":"xsd:string","vFlashModuleVersion":"xsd:string"}}, _self.DynamicData);
    _self.HostVirtualNicSpec = merge({"type":"HostVirtualNicSpec","properties":{"distributedVirtualPort":_self.DistributedVirtualSwitchPortConnection,"ip":_self.HostIpConfig,"mac":"xsd:string","mtu":"xsd:int","netStackInstanceKey":"xsd:string","portgroup":"xsd:string","tsoEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostVirtualSwitchSpec = merge({"type":"HostVirtualSwitchSpec","properties":{"bridge":_self.HostVirtualSwitchBridge,"mtu":"xsd:int","numPorts":"xsd:int","policy":_self.HostNetworkPolicy}}, _self.DynamicData);
    _self.HourlyTaskScheduler = merge({"type":"HourlyTaskScheduler","properties":{"minute":"xsd:int"}}, _self.RecurrentTaskScheduler);
    _self.HttpNfcLeaseInfo = merge({"type":"HttpNfcLeaseInfo","properties":{"deviceUrl":_self.HttpNfcLeaseDeviceUrl,"entity":_self.ManagedObjectReference,"hostMap":_self.HttpNfcLeaseDatastoreLeaseInfo,"lease":_self.ManagedObjectReference,"leaseTimeout":"xsd:int","totalDiskCapacityInKB":"xsd:long"}}, _self.DynamicData);
    _self.NetIpRouteConfigSpec = merge({"type":"NetIpRouteConfigSpec","properties":{"ipRoute":_self.NetIpRouteConfigSpecIpRouteSpec}}, _self.DynamicData);
    _self.OptionManager = {"type":"OptionManager","properties":{"setting":_self.OptionValue,"supportedOption":_self.OptionDef},"methods":{"QueryOptions":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"OptionValue"},"UpdateOptions":{"params":{"_this":"ManagedObjectReference","changedValue":"OptionValue"},"returns":null}}};
    _self.OvfResourceMap = merge({"type":"OvfResourceMap","properties":{"datastore":_self.ManagedObjectReference,"parent":_self.ManagedObjectReference,"resourceSpec":_self.ResourceConfigSpec,"source":"xsd:string"}}, _self.DynamicData);
    _self.OvfManager = {"type":"OvfManager","properties":{"ovfExportOption":_self.OvfOptionInfo,"ovfImportOption":_self.OvfOptionInfo},"methods":{"CreateDescriptor":{"params":{"_this":"ManagedObjectReference","objP":"ManagedObjectReferencetoaManagedEntity","cdp":"OvfCreateDescriptorParams"},"returns":"OvfCreateDescriptorResult"},"CreateImportSpec":{"params":{"_this":"ManagedObjectReference","ovfDescriptor":"xsd:string","resourcePoolP":"ManagedObjectReferencetoaResourcePool","datastoreP":"ManagedObjectReferencetoaDatastore","cisp":"OvfCreateImportSpecParams"},"returns":"OvfCreateImportSpecResult"},"ParseDescriptor":{"params":{"_this":"ManagedObjectReference","ovfDescriptor":"xsd:string","pdp":"OvfParseDescriptorParams"},"returns":"OvfParseDescriptorResult"},"ValidateHost":{"params":{"_this":"ManagedObjectReference","ovfDescriptor":"xsd:string","host":"ManagedObjectReferencetoaHostSystem","vhp":"OvfValidateHostParams"},"returns":"OvfValidateHostResult"}}};
    _self.ParaVirtualSCSIController = merge({"type":"ParaVirtualSCSIController"}, _self.VirtualSCSIController);
    _self.PerfCounterInfo = merge({"type":"PerfCounterInfo","properties":{"associatedCounterId":"xsd:int[]","groupInfo":_self.ElementDescription,"key":"xsd:int","level":"xsd:int","nameInfo":_self.ElementDescription,"perDeviceLevel":"xsd:int","rollupType":_self.PerfSummaryType,"statsType":_self.PerfStatsType,"unitInfo":_self.ElementDescription}}, _self.DynamicData);
    _self.PerformanceDescription = merge({"type":"PerformanceDescription","properties":{"counterType":_self.ElementDescription,"statsType":_self.ElementDescription}}, _self.DynamicData);
    _self.PerformanceManager = {"type":"PerformanceManager","properties":{"description":_self.PerformanceDescription,"historicalInterval":_self.PerfInterval,"perfCounter":_self.PerfCounterInfo},"methods":{"CreatePerfInterval":{"params":{"_this":"ManagedObjectReference","intervalId":"PerfInterval"},"returns":null},"QueryAvailablePerfMetric":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReference","beginTime":"xsd:dateTime","endTime":"xsd:dateTime","intervalId":"xsd:int"},"returns":"PerfMetricId"},"QueryPerf":{"params":{"_this":"ManagedObjectReference","querySpec":"PerfQuerySpec"},"returns":"PerfEntityMetricBase"},"QueryPerfComposite":{"params":{"_this":"ManagedObjectReference","querySpec":"PerfQuerySpec"},"returns":"PerfCompositeMetric"},"QueryPerfCounter":{"params":{"_this":"ManagedObjectReference","counterId":"xsd:int"},"returns":"PerfCounterInfo"},"QueryPerfCounterByLevel":{"params":{"_this":"ManagedObjectReference","level":"xsd:int"},"returns":"PerfCounterInfo"},"QueryPerfProviderSummary":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReference"},"returns":"PerfProviderSummary"},"RemovePerfInterval":{"params":{"_this":"ManagedObjectReference","samplePeriod":"xsd:int"},"returns":null},"ResetCounterLevelMapping":{"params":{"_this":"ManagedObjectReference","counters":"xsd:int"},"returns":null},"UpdateCounterLevelMapping":{"params":{"_this":"ManagedObjectReference","counterLevelMap":"PerformanceManagerCounterLevelMapping"},"returns":null},"UpdatePerfInterval":{"params":{"_this":"ManagedObjectReference","interval":"PerfInterval"},"returns":null}}};
    _self.PhysicalNicSpec = merge({"type":"PhysicalNicSpec","properties":{"ip":_self.HostIpConfig,"linkSpeed":_self.PhysicalNicLinkInfo}}, _self.DynamicData);
    _self.ProfileDescriptionSection = merge({"type":"ProfileDescriptionSection","properties":{"description":_self.ExtendedElementDescription,"message":_self.LocalizableMessage}}, _self.DynamicData);
    _self.ProfileParameterMetadata = merge({"type":"ProfileParameterMetadata","properties":{"defaultValue":"xsd:anyType","id":_self.ExtendedElementDescription,"optional":"xsd:boolean","type":"xsd:string"}}, _self.DynamicData);
    _self.ProfilePolicyOptionMetadata = merge({"type":"ProfilePolicyOptionMetadata","properties":{"id":_self.ExtendedElementDescription,"parameter":_self.ProfileParameterMetadata}}, _self.DynamicData);
    _self.PropertyFilter = {"type":"PropertyFilter","properties":{"partialUpdates":"xsd:boolean","spec":_self.PropertyFilterSpec},"methods":{"DestroyPropertyFilter":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.ResourceAllocationOption = merge({"type":"ResourceAllocationOption","properties":{"sharesOption":_self.SharesOption}}, _self.DynamicData);
    _self.ResourceConfigOption = merge({"type":"ResourceConfigOption","properties":{"cpuAllocationOption":_self.ResourceAllocationOption,"memoryAllocationOption":_self.ResourceAllocationOption}}, _self.DynamicData);
    _self.ResourcePoolSummary = merge({"type":"ResourcePoolSummary","properties":{"config":_self.ResourceConfigSpec,"configuredMemoryMB":"xsd:int","name":"xsd:string","quickStats":_self.ResourcePoolQuickStats,"runtime":_self.ResourcePoolRuntimeInfo}}, _self.DynamicData);
    _self.ScheduledTaskDetail = merge({"type":"ScheduledTaskDetail","properties":{"frequency":"xsd:string"}}, _self.TypeDescription);
    _self.StorageDrsVmConfigInfo = merge({"type":"StorageDrsVmConfigInfo","properties":{"behavior":"xsd:string","enabled":"xsd:boolean","intraVmAffinity":"xsd:boolean","intraVmAntiAffinity":_self.VirtualDiskAntiAffinityRuleSpec,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.StorageDrsPodConfigSpec = merge({"type":"StorageDrsPodConfigSpec","properties":{"defaultIntraVmAffinity":"xsd:boolean","defaultVmBehavior":"xsd:string","enabled":"xsd:boolean","ioLoadBalanceConfig":_self.StorageDrsIoLoadBalanceConfig,"ioLoadBalanceEnabled":"xsd:boolean","loadBalanceInterval":"xsd:int","option":_self.StorageDrsOptionSpec,"rule":_self.ClusterRuleSpec,"spaceLoadBalanceConfig":_self.StorageDrsSpaceLoadBalanceConfig}}, _self.DynamicData);
    _self.StorageDrsVmConfigSpec = merge({"type":"StorageDrsVmConfigSpec","properties":{"info":_self.StorageDrsVmConfigInfo}}, _self.ArrayUpdateSpec);
    _self.VmPodConfigForPlacement = merge({"type":"VmPodConfigForPlacement","properties":{"disk":_self.PodDiskLocator,"interVmRule":_self.ClusterRuleInfo,"storagePod":_self.ManagedObjectReference,"vmConfig":_self.StorageDrsVmConfigInfo}}, _self.DynamicData);
    _self.VirtualMachineRelocateSpec = merge({"type":"VirtualMachineRelocateSpec","properties":{"datastore":_self.ManagedObjectReference,"deviceChange":_self.VirtualDeviceConfigSpec,"disk":_self.VirtualMachineRelocateSpecDiskLocator,"diskMoveType":"xsd:string","host":_self.ManagedObjectReference,"pool":_self.ManagedObjectReference,"profile":_self.VirtualMachineProfileSpec,"transform":_self.VirtualMachineRelocateTransformation}}, _self.DynamicData);
    _self.StoragePlacementAction = merge({"type":"StoragePlacementAction","properties":{"destination":_self.ManagedObjectReference,"ioLatencyBefore":"xsd:float","relocateSpec":_self.VirtualMachineRelocateSpec,"spaceUtilAfter":"xsd:float","spaceUtilBefore":"xsd:float","vm":_self.ManagedObjectReference}}, _self.ClusterAction);
    _self.TaskDescription = merge({"type":"TaskDescription","properties":{"methodInfo":_self.ElementDescription,"reason":_self.TypeDescription,"state":_self.ElementDescription}}, _self.DynamicData);
    _self.TaskManager = {"type":"TaskManager","properties":{"description":_self.TaskDescription,"maxCollector":"xsd:int","recentTask":_self.ManagedObjectReference},"methods":{"CreateCollectorForTasks":{"params":{"_this":"ManagedObjectReference","filter":"TaskFilterSpec"},"returns":"ManagedObjectReference"},"CreateTask":{"params":{"_this":"ManagedObjectReference","obj":"ManagedObjectReference","taskTypeId":"xsd:string","initiatedBy":"xsd:string","cancelable":"xsd:boolean","parentTaskKey":"xsd:string"},"returns":"TaskInfo"}}};
    _self.TemplateConfigFileQuery = merge({"type":"TemplateConfigFileQuery"}, _self.VmConfigFileQuery);
    _self.UserInputRequiredParameterMetadata = merge({"type":"UserInputRequiredParameterMetadata","properties":{"userInputParameter":_self.ProfileParameterMetadata}}, _self.ProfilePolicyOptionMetadata);
    _self.VAppCloneSpecResourceMap = merge({"type":"VAppCloneSpecResourceMap","properties":{"location":_self.ManagedObjectReference,"parent":_self.ManagedObjectReference,"resourceSpec":_self.ResourceConfigSpec,"source":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.VAppConfigSpec = merge({"type":"VAppConfigSpec","properties":{"annotation":"xsd:string","entityConfig":_self.VAppEntityConfigInfo,"instanceUuid":"xsd:string","managedBy":_self.ManagedByInfo}}, _self.VmConfigSpec);
    _self.VirtualAHCIController = merge({"type":"VirtualAHCIController"}, _self.VirtualSATAController);
    _self.VirtualAppSummary = merge({"type":"VirtualAppSummary","properties":{"installBootRequired":"xsd:boolean","instanceUuid":"xsd:string","product":_self.VAppProductInfo,"suspended":"xsd:boolean","vAppState":_self.VirtualAppVAppState}}, _self.ResourcePoolSummary);
    _self.VirtualBusLogicController = merge({"type":"VirtualBusLogicController"}, _self.VirtualSCSIController);
    _self.VirtualCdromAtapiBackingOption = merge({"type":"VirtualCdromAtapiBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualCdromOption = merge({"type":"VirtualCdromOption"}, _self.VirtualDeviceOption);
    _self.VirtualCdromPassthroughBackingOption = merge({"type":"VirtualCdromPassthroughBackingOption","properties":{"exclusive":_self.BoolOption}}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualCdromRemoteAtapiBackingOption = merge({"type":"VirtualCdromRemoteAtapiBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualCdromRemotePassthroughBackingOption = merge({"type":"VirtualCdromRemotePassthroughBackingOption","properties":{"exclusive":_self.BoolOption}}, _self.VirtualDeviceRemoteDeviceBackingOption);
    _self.VirtualControllerOption = merge({"type":"VirtualControllerOption","properties":{"devices":_self.IntOption,"supportedDevice":"xsd:string[]"}}, _self.VirtualDeviceOption);
    _self.VirtualDeviceFileBackingOption = merge({"type":"VirtualDeviceFileBackingOption","properties":{"fileNameExtensions":_self.ChoiceOption}}, _self.VirtualDeviceBackingOption);
    _self.VirtualDeviceURIBackingOption = merge({"type":"VirtualDeviceURIBackingOption","properties":{"directions":_self.ChoiceOption}}, _self.VirtualDeviceBackingOption);
    _self.VirtualDiskDeltaDiskFormatsSupported = merge({"type":"VirtualDiskDeltaDiskFormatsSupported","properties":{"datastoreType":"xsd:string","deltaDiskFormat":_self.ChoiceOption}}, _self.DynamicData);
    _self.VirtualDiskFlatVer1BackingOption = merge({"type":"VirtualDiskFlatVer1BackingOption","properties":{"diskMode":_self.ChoiceOption,"growable":"xsd:boolean","split":_self.BoolOption,"writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskFlatVer2BackingOption = merge({"type":"VirtualDiskFlatVer2BackingOption","properties":{"deltaDiskFormat":_self.ChoiceOption,"deltaDiskFormatsSupported":_self.VirtualDiskDeltaDiskFormatsSupported,"diskMode":_self.ChoiceOption,"eagerlyScrub":_self.BoolOption,"growable":"xsd:boolean","hotGrowable":"xsd:boolean","split":_self.BoolOption,"thinProvisioned":_self.BoolOption,"uuid":"xsd:boolean","writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskOptionVFlashCacheConfigOption = merge({"type":"VirtualDiskOptionVFlashCacheConfigOption","properties":{"blockSizeInKB":_self.LongOption,"cacheConsistencyType":_self.ChoiceOption,"cacheMode":_self.ChoiceOption,"reservationInMB":_self.LongOption}}, _self.DynamicData);
    _self.VirtualDiskRawDiskMappingVer1BackingOption = merge({"type":"VirtualDiskRawDiskMappingVer1BackingOption","properties":{"compatibilityMode":_self.ChoiceOption,"descriptorFileNameExtensions":_self.ChoiceOption,"diskMode":_self.ChoiceOption,"uuid":"xsd:boolean"}}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualDiskRawDiskVer2BackingOption = merge({"type":"VirtualDiskRawDiskVer2BackingOption","properties":{"descriptorFileNameExtensions":_self.ChoiceOption,"uuid":"xsd:boolean"}}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualDiskSeSparseBackingOption = merge({"type":"VirtualDiskSeSparseBackingOption","properties":{"deltaDiskFormatsSupported":_self.VirtualDiskDeltaDiskFormatsSupported,"diskMode":_self.ChoiceOption,"growable":"xsd:boolean","hotGrowable":"xsd:boolean","uuid":"xsd:boolean","writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskSparseVer1BackingOption = merge({"type":"VirtualDiskSparseVer1BackingOption","properties":{"diskModes":_self.ChoiceOption,"growable":"xsd:boolean","split":_self.BoolOption,"writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskSparseVer2BackingOption = merge({"type":"VirtualDiskSparseVer2BackingOption","properties":{"diskMode":_self.ChoiceOption,"growable":"xsd:boolean","hotGrowable":"xsd:boolean","split":_self.BoolOption,"uuid":"xsd:boolean","writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualE1000 = merge({"type":"VirtualE1000"}, _self.VirtualEthernetCard);
    _self.VirtualE1000e = merge({"type":"VirtualE1000e"}, _self.VirtualEthernetCard);
    _self.VirtualEnsoniq1371 = merge({"type":"VirtualEnsoniq1371"}, _self.VirtualSoundCard);
    _self.VirtualEnsoniq1371Option = merge({"type":"VirtualEnsoniq1371Option"}, _self.VirtualSoundCardOption);
    _self.VirtualEthernetCardOption = merge({"type":"VirtualEthernetCardOption","properties":{"macType":_self.ChoiceOption,"supportedOUI":_self.ChoiceOption,"vmDirectPathGen2Supported":"xsd:boolean","wakeOnLanEnabled":_self.BoolOption}}, _self.VirtualDeviceOption);
    _self.VirtualFloppyImageBackingOption = merge({"type":"VirtualFloppyImageBackingOption"}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualHardwareOption = merge({"type":"VirtualHardwareOption","properties":{"deviceListReadonly":"xsd:boolean","hwVersion":"xsd:int","licensingLimit":"xsd:string[]","memoryMB":_self.LongOption,"numCoresPerSocket":_self.IntOption,"numCPU":"xsd:int[]","numCpuReadonly":"xsd:boolean","numIDEControllers":_self.IntOption,"numPCIControllers":_self.IntOption,"numPS2Controllers":_self.IntOption,"numSIOControllers":_self.IntOption,"numSupportedWwnNodes":_self.IntOption,"numSupportedWwnPorts":_self.IntOption,"numUSBControllers":_self.IntOption,"numUSBXHCIControllers":_self.IntOption,"resourceConfigOption":_self.ResourceConfigOption,"virtualDeviceOption":_self.VirtualDeviceOption}}, _self.DynamicData);
    _self.VirtualHdAudioCard = merge({"type":"VirtualHdAudioCard"}, _self.VirtualSoundCard);
    _self.VirtualHdAudioCardOption = merge({"type":"VirtualHdAudioCardOption"}, _self.VirtualSoundCardOption);
    _self.VirtualIDEControllerOption = merge({"type":"VirtualIDEControllerOption","properties":{"numIDECdroms":_self.IntOption,"numIDEDisks":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualLsiLogicController = merge({"type":"VirtualLsiLogicController"}, _self.VirtualSCSIController);
    _self.VirtualLsiLogicSASController = merge({"type":"VirtualLsiLogicSASController"}, _self.VirtualSCSIController);
    _self.VirtualMachineFileLayoutEx = merge({"type":"VirtualMachineFileLayoutEx","properties":{"disk":_self.VirtualMachineFileLayoutExDiskLayout,"file":_self.VirtualMachineFileLayoutExFileInfo,"snapshot":_self.VirtualMachineFileLayoutExSnapshotLayout,"timestamp":"xsd:dateTime"}}, _self.DynamicData);
    _self.VirtualMachineConfigOption = merge({"type":"VirtualMachineConfigOption","properties":{"capabilities":_self.VirtualMachineCapability,"datastore":_self.DatastoreOption,"defaultDevice":_self.VirtualDevice,"description":"xsd:string","guestOSDefaultIndex":"xsd:int","guestOSDescriptor":_self.GuestOsDescriptor,"hardwareOptions":_self.VirtualHardwareOption,"supportedMonitorType":"xsd:string[]","supportedOvfEnvironmentTransport":"xsd:string[]","supportedOvfInstallTransport":"xsd:string[]","version":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineQuestionInfo = merge({"type":"VirtualMachineQuestionInfo","properties":{"choice":_self.ChoiceOption,"id":"xsd:string","message":_self.VirtualMachineMessage,"text":"xsd:string"}}, _self.DynamicData);
    _self.VirtualParallelPortFileBackingOption = merge({"type":"VirtualParallelPortFileBackingOption"}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualPCIControllerOption = merge({"type":"VirtualPCIControllerOption","properties":{"numEthernetCards":_self.IntOption,"numParaVirtualSCSIControllers":_self.IntOption,"numPCIPassthroughDevices":_self.IntOption,"numSasSCSIControllers":_self.IntOption,"numSATAControllers":_self.IntOption,"numSCSIControllers":_self.IntOption,"numSoundCards":_self.IntOption,"numVideoCards":_self.IntOption,"numVmciDevices":_self.IntOption,"numVmiRoms":_self.IntOption,"numVmxnet3EthernetCards":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualPCNet32Option = merge({"type":"VirtualPCNet32Option","properties":{"supportsMorphing":"xsd:boolean"}}, _self.VirtualEthernetCardOption);
    _self.VirtualPointingDeviceBackingOption = merge({"type":"VirtualPointingDeviceBackingOption","properties":{"hostPointingDevice":_self.ChoiceOption}}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualPS2ControllerOption = merge({"type":"VirtualPS2ControllerOption","properties":{"numKeyboards":_self.IntOption,"numPointingDevices":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualSATAControllerOption = merge({"type":"VirtualSATAControllerOption","properties":{"numSATACdroms":_self.IntOption,"numSATADisks":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualSCSIControllerOption = merge({"type":"VirtualSCSIControllerOption","properties":{"defaultSharedIndex":"xsd:int","hotAddRemove":_self.BoolOption,"numSCSICdroms":_self.IntOption,"numSCSIDisks":_self.IntOption,"numSCSIPassthrough":_self.IntOption,"scsiCtlrUnitNumber":"xsd:int","sharing":_self.VirtualSCSISharing}}, _self.VirtualControllerOption);
    _self.VirtualSerialPortFileBackingOption = merge({"type":"VirtualSerialPortFileBackingOption"}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualSerialPortPipeBackingOption = merge({"type":"VirtualSerialPortPipeBackingOption","properties":{"endpoint":_self.ChoiceOption,"noRxLoss":_self.BoolOption}}, _self.VirtualDevicePipeBackingOption);
    _self.VirtualSerialPortURIBackingOption = merge({"type":"VirtualSerialPortURIBackingOption"}, _self.VirtualDeviceURIBackingOption);
    _self.VirtualSIOControllerOption = merge({"type":"VirtualSIOControllerOption","properties":{"numFloppyDrives":_self.IntOption,"numParallelPorts":_self.IntOption,"numSerialPorts":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualSoundBlaster16 = merge({"type":"VirtualSoundBlaster16"}, _self.VirtualSoundCard);
    _self.VirtualSoundBlaster16Option = merge({"type":"VirtualSoundBlaster16Option"}, _self.VirtualSoundCardOption);
    _self.VirtualSriovEthernetCardOption = merge({"type":"VirtualSriovEthernetCardOption"}, _self.VirtualEthernetCardOption);
    _self.VirtualUSBControllerOption = merge({"type":"VirtualUSBControllerOption","properties":{"autoConnectDevices":_self.BoolOption,"ehciSupported":_self.BoolOption,"supportedSpeeds":"xsd:string[]"}}, _self.VirtualControllerOption);
    _self.VirtualUSBXHCIControllerOption = merge({"type":"VirtualUSBXHCIControllerOption","properties":{"autoConnectDevices":_self.BoolOption,"supportedSpeeds":"xsd:string[]"}}, _self.VirtualControllerOption);
    _self.VirtualVmxnetOption = merge({"type":"VirtualVmxnetOption"}, _self.VirtualEthernetCardOption);
    _self.VmfsDatastoreAllExtentOption = merge({"type":"VmfsDatastoreAllExtentOption"}, _self.VmfsDatastoreSingleExtentOption);
    _self.VMwareDvsLacpGroupConfig = merge({"type":"VMwareDvsLacpGroupConfig","properties":{"ipfix":_self.VMwareDvsLagIpfixConfig,"key":"xsd:string","loadbalanceAlgorithm":"xsd:string","mode":"xsd:string","name":"xsd:string","uplinkName":"xsd:string[]","uplinkNum":"xsd:int","uplinkPortKey":"xsd:string[]","vlan":_self.VMwareDvsLagVlanConfig}}, _self.DynamicData);
    _self.VMwareDVSFeatureCapability = merge({"type":"VMwareDVSFeatureCapability","properties":{"ipfixSupported":"xsd:boolean","lacpCapability":_self.VMwareDvsLacpCapability,"lldpSupported":"xsd:boolean","vspanCapability":_self.VMwareDVSVspanCapability,"vspanSupported":"xsd:boolean"}}, _self.DVSFeatureCapability);
    _self.VMwareDvsLacpGroupSpec = merge({"type":"VMwareDvsLacpGroupSpec","properties":{"lacpGroupConfig":_self.VMwareDvsLacpGroupConfig,"operation":"xsd:string"}}, _self.DynamicData);
    _self.VmwareUplinkPortTeamingPolicy = merge({"type":"VmwareUplinkPortTeamingPolicy","properties":{"failureCriteria":_self.DVSFailureCriteria,"notifySwitches":_self.BoolPolicy,"policy":_self.StringPolicy,"reversePolicy":_self.BoolPolicy,"rollingOrder":_self.BoolPolicy,"uplinkPortOrder":_self.VMwareUplinkPortOrderPolicy}}, _self.InheritablePolicy);
    _self.VsanHostClusterStatus = merge({"type":"VsanHostClusterStatus","properties":{"health":"xsd:string","memberUuid":"xsd:string[]","nodeState":_self.VsanHostClusterStatusState,"nodeUuid":"xsd:string","uuid":"xsd:string"}}, _self.DynamicData);
    _self.VsanHostConfigInfoNetworkInfo = merge({"type":"VsanHostConfigInfoNetworkInfo","properties":{"port":_self.VsanHostConfigInfoNetworkInfoPortConfig}}, _self.DynamicData);
    _self.VsanHostDiskMapping = merge({"type":"VsanHostDiskMapping","properties":{"nonSsd":_self.HostScsiDisk,"ssd":_self.HostScsiDisk}}, _self.DynamicData);
    _self.Alarm = merge({"type":"Alarm","properties":{"info":_self.AlarmInfo},"methods":{"ReconfigureAlarm":{"params":{"_this":"ManagedObjectReference","spec":"AlarmSpec"},"returns":null},"RemoveAlarm":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.AlarmDescription = merge({"type":"AlarmDescription","properties":{"action":_self.TypeDescription,"datastoreConnectionState":_self.ElementDescription,"entityStatus":_self.ElementDescription,"expr":_self.TypeDescription,"hostSystemConnectionState":_self.ElementDescription,"hostSystemPowerState":_self.ElementDescription,"metricOperator":_self.ElementDescription,"stateOperator":_self.ElementDescription,"virtualMachineGuestHeartbeatStatus":_self.ElementDescription,"virtualMachinePowerState":_self.ElementDescription}}, _self.DynamicData);
    _self.AlarmManager = {"type":"AlarmManager","properties":{"defaultExpression":_self.AlarmExpression,"description":_self.AlarmDescription},"methods":{"AcknowledgeAlarm":{"params":{"_this":"ManagedObjectReference","alarmP":"ManagedObjectReferencetoaAlarm","entityP":"ManagedObjectReferencetoaManagedEntity"},"returns":null},"AreAlarmActionsEnabled":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity"},"returns":"xsd:boolean"},"CreateAlarm":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","spec":"AlarmSpec"},"returns":"ManagedObjectReference"},"EnableAlarmActions":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","enabled":"xsd:boolean"},"returns":null},"GetAlarm":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"GetAlarmState":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity"},"returns":"AlarmState"}}};
    _self.AnswerFile = merge({"type":"AnswerFile","properties":{"createdTime":"xsd:dateTime","modifiedTime":"xsd:dateTime","userInput":_self.ProfileDeferredPolicyOptionParameter}}, _self.DynamicData);
    _self.AuthorizationManager = {"type":"AuthorizationManager","properties":{"description":_self.AuthorizationDescription,"privilegeList":_self.AuthorizationPrivilege,"roleList":_self.AuthorizationRole},"methods":{"AddAuthorizationRole":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","privIds":"xsd:string"},"returns":"xsd:int"},"HasPrivilegeOnEntities":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","sessionId":"xsd:string","privId":"xsd:string"},"returns":"EntityPrivilege"},"HasPrivilegeOnEntity":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","sessionId":"xsd:string","privId":"xsd:string"},"returns":"xsd:boolean"},"MergePermissions":{"params":{"_this":"ManagedObjectReference","srcRoleId":"xsd:int","dstRoleId":"xsd:int"},"returns":null},"RemoveAuthorizationRole":{"params":{"_this":"ManagedObjectReference","roleId":"xsd:int","failIfUsed":"xsd:boolean"},"returns":null},"RemoveEntityPermission":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","user":"xsd:string","isGroup":"xsd:boolean"},"returns":null},"ResetEntityPermissions":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","permission":"Permission"},"returns":null},"RetrieveAllPermissions":{"params":{"_this":"ManagedObjectReference"},"returns":"Permission"},"RetrieveEntityPermissions":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","inherited":"xsd:boolean"},"returns":"Permission"},"RetrieveRolePermissions":{"params":{"_this":"ManagedObjectReference","roleId":"xsd:int"},"returns":"Permission"},"SetEntityPermissions":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","permission":"Permission"},"returns":null},"UpdateAuthorizationRole":{"params":{"_this":"ManagedObjectReference","roleId":"xsd:int","newName":"xsd:string","privIds":"xsd:string"},"returns":null}}};
    _self.Capability = merge({"type":"Capability","properties":{"multiHostSupported":"xsd:boolean","networkBackupAndRestoreSupported":"xsd:boolean","provisioningSupported":"xsd:boolean","supportedEVCMode":_self.EVCMode,"userShellAccessSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.ClusterDasConfigInfo = merge({"type":"ClusterDasConfigInfo","properties":{"admissionControlEnabled":"xsd:boolean","admissionControlPolicy":_self.ClusterDasAdmissionControlPolicy,"defaultVmSettings":_self.ClusterDasVmSettings,"enabled":"xsd:boolean","failoverLevel":"xsd:int","hBDatastoreCandidatePolicy":"xsd:string","heartbeatDatastore":_self.ManagedObjectReference,"hostMonitoring":"xsd:string","option":_self.OptionValue,"vmMonitoring":"xsd:string"}}, _self.DynamicData);
    _self.ClusterDasVmConfigInfo = merge({"type":"ClusterDasVmConfigInfo","properties":{"dasSettings":_self.ClusterDasVmSettings,"key":_self.ManagedObjectReference,"powerOffOnIsolation":"xsd:boolean","restartPriority":_self.DasVmPriority}}, _self.DynamicData);
    _self.ClusterDasVmConfigSpec = merge({"type":"ClusterDasVmConfigSpec","properties":{"info":_self.ClusterDasVmConfigInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterProfileCompleteConfigSpec = merge({"type":"ClusterProfileCompleteConfigSpec","properties":{"complyProfile":_self.ComplianceProfile}}, _self.ClusterProfileConfigSpec);
    _self.ClusterProfileConfigServiceCreateSpec = merge({"type":"ClusterProfileConfigServiceCreateSpec","properties":{"serviceType":"xsd:string[]"}}, _self.ClusterProfileConfigSpec);
    _self.VirtualMachineScsiDiskDeviceInfo = merge({"type":"VirtualMachineScsiDiskDeviceInfo","properties":{"disk":_self.HostScsiDisk,"lunNumber":"xsd:int","transportHint":"xsd:string"}}, _self.VirtualMachineDiskDeviceInfo);
    _self.VirtualMachineVFlashModuleInfo = merge({"type":"VirtualMachineVFlashModuleInfo","properties":{"vFlashModule":_self.HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption}}, _self.VirtualMachineTargetInfo);
    _self.CustomizationIPSettings = merge({"type":"CustomizationIPSettings","properties":{"dnsDomain":"xsd:string","dnsServerList":"xsd:string[]","gateway":"xsd:string[]","ip":_self.CustomizationIpGenerator,"ipV6Spec":_self.CustomizationIPSettingsIpV6AddressSpec,"netBIOS":_self.CustomizationNetBIOSMode,"primaryWINS":"xsd:string","secondaryWINS":"xsd:string","subnetMask":"xsd:string"}}, _self.DynamicData);
    _self.DailyTaskScheduler = merge({"type":"DailyTaskScheduler","properties":{"hour":"xsd:int"}}, _self.HourlyTaskScheduler);
    _self.Event = merge({"type":"Event","properties":{"chainId":"xsd:int","changeTag":"xsd:string","computeResource":_self.ComputeResourceEventArgument,"createdTime":"xsd:dateTime","datacenter":_self.DatacenterEventArgument,"ds":_self.DatastoreEventArgument,"dvs":_self.DvsEventArgument,"fullFormattedMessage":"xsd:string","host":_self.HostEventArgument,"key":"xsd:int","net":_self.NetworkEventArgument,"userName":"xsd:string","vm":_self.VmEventArgument}}, _self.DynamicData);
    _self.DatacenterEvent = merge({"type":"DatacenterEvent"}, _self.Event);
    _self.DatacenterRenamedEvent = merge({"type":"DatacenterRenamedEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.DatacenterEvent);
    _self.DatastoreEvent = merge({"type":"DatastoreEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.Event);
    _self.DatastoreFileEvent = merge({"type":"DatastoreFileEvent","properties":{"targetFile":"xsd:string"}}, _self.DatastoreEvent);
    _self.DatastoreFileMovedEvent = merge({"type":"DatastoreFileMovedEvent","properties":{"sourceDatastore":_self.DatastoreEventArgument,"sourceFile":"xsd:string"}}, _self.DatastoreFileEvent);
    _self.DatastoreIORMReconfiguredEvent = merge({"type":"DatastoreIORMReconfiguredEvent"}, _self.DatastoreEvent);
    _self.DatastoreRenamedEvent = merge({"type":"DatastoreRenamedEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.DatastoreEvent);
    _self.DVPortState = merge({"type":"DVPortState","properties":{"runtimeInfo":_self.DVPortStatus,"stats":_self.DistributedVirtualSwitchPortStatistics,"vendorSpecificState":_self.DistributedVirtualSwitchKeyedOpaqueBlob}}, _self.DynamicData);
    _self.DVSCapability = merge({"type":"DVSCapability","properties":{"compatibleHostComponentProductInfo":_self.DistributedVirtualSwitchHostProductSpec,"dvPortGroupOperationSupported":"xsd:boolean","dvPortOperationSupported":"xsd:boolean","dvsOperationSupported":"xsd:boolean","featuresSupported":_self.DVSFeatureCapability}}, _self.DynamicData);
    _self.DVSNetworkResourcePool = merge({"type":"DVSNetworkResourcePool","properties":{"allocationInfo":_self.DVSNetworkResourcePoolAllocationInfo,"configVersion":"xsd:string","description":"xsd:string","key":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.DistributedVirtualSwitchHostMember = merge({"type":"DistributedVirtualSwitchHostMember","properties":{"config":_self.DistributedVirtualSwitchHostMemberConfigInfo,"productInfo":_self.DistributedVirtualSwitchProductSpec,"runtimeState":_self.DistributedVirtualSwitchHostMemberRuntimeState,"status":"xsd:string","statusDetail":"xsd:string","uplinkPortKey":"xsd:string[]"}}, _self.DynamicData);
    _self.DVPortgroupEvent = merge({"type":"DVPortgroupEvent"}, _self.Event);
    _self.DVPortgroupRenamedEvent = merge({"type":"DVPortgroupRenamedEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.DVPortgroupEvent);
    _self.DvsFilterPolicy = merge({"type":"DvsFilterPolicy","properties":{"filterConfig":_self.DvsFilterConfig}}, _self.InheritablePolicy);
    _self.DvsEvent = merge({"type":"DvsEvent"}, _self.Event);
    _self.DvsGreEncapNetworkRuleAction = merge({"type":"DvsGreEncapNetworkRuleAction","properties":{"encapsulationIp":_self.SingleIp}}, _self.DvsNetworkRuleAction);
    _self.DvsHostBackInSyncEvent = merge({"type":"DvsHostBackInSyncEvent","properties":{"hostBackInSync":_self.HostEventArgument}}, _self.DvsEvent);
    _self.DvsHostJoinedEvent = merge({"type":"DvsHostJoinedEvent","properties":{"hostJoined":_self.HostEventArgument}}, _self.DvsEvent);
    _self.DvsHostLeftEvent = merge({"type":"DvsHostLeftEvent","properties":{"hostLeft":_self.HostEventArgument}}, _self.DvsEvent);
    _self.DvsHostStatusUpdated = merge({"type":"DvsHostStatusUpdated","properties":{"hostMember":_self.HostEventArgument,"newStatus":"xsd:string","newStatusDetail":"xsd:string","oldStatus":"xsd:string","oldStatusDetail":"xsd:string"}}, _self.DvsEvent);
    _self.DvsHostWentOutOfSyncEvent = merge({"type":"DvsHostWentOutOfSyncEvent","properties":{"hostOutOfSync":_self.DvsOutOfSyncHostArgument}}, _self.DvsEvent);
    _self.DvsImportEvent = merge({"type":"DvsImportEvent","properties":{"importType":"xsd:string"}}, _self.DvsEvent);
    _self.DvsMergedEvent = merge({"type":"DvsMergedEvent","properties":{"destinationDvs":_self.DvsEventArgument,"sourceDvs":_self.DvsEventArgument}}, _self.DvsEvent);
    _self.DvsPortBlockedEvent = merge({"type":"DvsPortBlockedEvent","properties":{"portKey":"xsd:string","runtimeInfo":_self.DVPortStatus,"statusDetail":"xsd:string"}}, _self.DvsEvent);
    _self.DvsPortConnectedEvent = merge({"type":"DvsPortConnectedEvent","properties":{"connectee":_self.DistributedVirtualSwitchPortConnectee,"portKey":"xsd:string"}}, _self.DvsEvent);
    _self.DvsPortCreatedEvent = merge({"type":"DvsPortCreatedEvent","properties":{"portKey":"xsd:string[]"}}, _self.DvsEvent);
    _self.DvsPortDeletedEvent = merge({"type":"DvsPortDeletedEvent","properties":{"portKey":"xsd:string[]"}}, _self.DvsEvent);
    _self.DvsPortDisconnectedEvent = merge({"type":"DvsPortDisconnectedEvent","properties":{"connectee":_self.DistributedVirtualSwitchPortConnectee,"portKey":"xsd:string"}}, _self.DvsEvent);
    _self.DvsPortEnteredPassthruEvent = merge({"type":"DvsPortEnteredPassthruEvent","properties":{"portKey":"xsd:string","runtimeInfo":_self.DVPortStatus}}, _self.DvsEvent);
    _self.DvsPortExitedPassthruEvent = merge({"type":"DvsPortExitedPassthruEvent","properties":{"portKey":"xsd:string","runtimeInfo":_self.DVPortStatus}}, _self.DvsEvent);
    _self.DvsPortJoinPortgroupEvent = merge({"type":"DvsPortJoinPortgroupEvent","properties":{"portgroupKey":"xsd:string","portgroupName":"xsd:string","portKey":"xsd:string"}}, _self.DvsEvent);
    _self.DvsPortLeavePortgroupEvent = merge({"type":"DvsPortLeavePortgroupEvent","properties":{"portgroupKey":"xsd:string","portgroupName":"xsd:string","portKey":"xsd:string"}}, _self.DvsEvent);
    _self.DvsPortLinkDownEvent = merge({"type":"DvsPortLinkDownEvent","properties":{"portKey":"xsd:string","runtimeInfo":_self.DVPortStatus}}, _self.DvsEvent);
    _self.DvsPortLinkUpEvent = merge({"type":"DvsPortLinkUpEvent","properties":{"portKey":"xsd:string","runtimeInfo":_self.DVPortStatus}}, _self.DvsEvent);
    _self.DvsPortReconfiguredEvent = merge({"type":"DvsPortReconfiguredEvent","properties":{"portKey":"xsd:string[]"}}, _self.DvsEvent);
    _self.DvsPortRuntimeChangeEvent = merge({"type":"DvsPortRuntimeChangeEvent","properties":{"portKey":"xsd:string","runtimeInfo":_self.DVPortStatus}}, _self.DvsEvent);
    _self.DvsPortUnblockedEvent = merge({"type":"DvsPortUnblockedEvent","properties":{"portKey":"xsd:string","runtimeInfo":_self.DVPortStatus}}, _self.DvsEvent);
    _self.DvsPortVendorSpecificStateChangeEvent = merge({"type":"DvsPortVendorSpecificStateChangeEvent","properties":{"portKey":"xsd:string"}}, _self.DvsEvent);
    _self.DvsRenamedEvent = merge({"type":"DvsRenamedEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.DvsEvent);
    _self.DvsRestoreEvent = merge({"type":"DvsRestoreEvent"}, _self.DvsEvent);
    _self.DvsTrafficFilterConfig = merge({"type":"DvsTrafficFilterConfig","properties":{"trafficRuleset":_self.DvsTrafficRuleset}}, _self.DvsFilterConfig);
    _self.DvsTrafficFilterConfigSpec = merge({"type":"DvsTrafficFilterConfigSpec","properties":{"operation":"xsd:string"}}, _self.DvsTrafficFilterConfig);
    _self.DvsUpgradeAvailableEvent = merge({"type":"DvsUpgradeAvailableEvent","properties":{"productInfo":_self.DistributedVirtualSwitchProductSpec}}, _self.DvsEvent);
    _self.DvsUpgradedEvent = merge({"type":"DvsUpgradedEvent","properties":{"productInfo":_self.DistributedVirtualSwitchProductSpec}}, _self.DvsEvent);
    _self.DvsUpgradeInProgressEvent = merge({"type":"DvsUpgradeInProgressEvent","properties":{"productInfo":_self.DistributedVirtualSwitchProductSpec}}, _self.DvsEvent);
    _self.DvsUpgradeRejectedEvent = merge({"type":"DvsUpgradeRejectedEvent","properties":{"productInfo":_self.DistributedVirtualSwitchProductSpec}}, _self.DvsEvent);
    _self.EventHistoryCollector = merge({"type":"EventHistoryCollector","properties":{"latestPage":_self.Event},"methods":{"ReadNextEvents":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":"Event"},"ReadPreviousEvents":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":"Event"}}}, _self.HistoryCollector);
    _self.EventManager = {"type":"EventManager","properties":{"description":_self.EventDescription,"latestEvent":_self.Event,"maxCollector":"xsd:int"},"methods":{"CreateCollectorForEvents":{"params":{"_this":"ManagedObjectReference","filter":"EventFilterSpec"},"returns":"ManagedObjectReference"},"LogUserEvent":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","msg":"xsd:string"},"returns":null},"PostEvent":{"params":{"_this":"ManagedObjectReference","eventToPost":"Event","taskInfo":"TaskInfo"},"returns":null},"QueryEvents":{"params":{"_this":"ManagedObjectReference","filter":"EventFilterSpec"},"returns":"Event"},"RetrieveArgumentDescription":{"params":{"_this":"ManagedObjectReference","eventTypeId":"xsd:string"},"returns":"EventArgDesc"}}};
    _self.GeneralEvent = merge({"type":"GeneralEvent","properties":{"message":"xsd:string"}}, _self.Event);
    _self.GeneralHostErrorEvent = merge({"type":"GeneralHostErrorEvent"}, _self.GeneralEvent);
    _self.GeneralHostInfoEvent = merge({"type":"GeneralHostInfoEvent"}, _self.GeneralEvent);
    _self.GeneralHostWarningEvent = merge({"type":"GeneralHostWarningEvent"}, _self.GeneralEvent);
    _self.GeneralUserEvent = merge({"type":"GeneralUserEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.GeneralEvent);
    _self.GeneralVmErrorEvent = merge({"type":"GeneralVmErrorEvent"}, _self.GeneralEvent);
    _self.GeneralVmInfoEvent = merge({"type":"GeneralVmInfoEvent"}, _self.GeneralEvent);
    _self.GeneralVmWarningEvent = merge({"type":"GeneralVmWarningEvent"}, _self.GeneralEvent);
    _self.GuestStackInfo = merge({"type":"GuestStackInfo","properties":{"dhcpConfig":_self.NetDhcpConfigInfo,"dnsConfig":_self.NetDnsConfigInfo,"ipRouteConfig":_self.NetIpRouteConfigInfo,"ipStackConfig":_self.KeyValue}}, _self.DynamicData);
    _self.GuestNicInfo = merge({"type":"GuestNicInfo","properties":{"connected":"xsd:boolean","deviceConfigId":"xsd:int","dnsConfig":_self.NetDnsConfigInfo,"ipAddress":"xsd:string[]","ipConfig":_self.NetIpConfigInfo,"macAddress":"xsd:string","netBIOSConfig":_self.NetBIOSConfigInfo,"network":"xsd:string"}}, _self.DynamicData);
    _self.HealthStatusChangedEvent = merge({"type":"HealthStatusChangedEvent","properties":{"componentId":"xsd:string","componentName":"xsd:string","newStatus":"xsd:string","oldStatus":"xsd:string"}}, _self.Event);
    _self.HostHardwareStatusInfo = merge({"type":"HostHardwareStatusInfo","properties":{"cpuStatusInfo":_self.HostHardwareElementInfo,"memoryStatusInfo":_self.HostHardwareElementInfo,"storageStatusInfo":_self.HostStorageElementInfo}}, _self.DynamicData);
    _self.HostSystemHealthInfo = merge({"type":"HostSystemHealthInfo","properties":{"numericSensorInfo":_self.HostNumericSensorInfo}}, _self.DynamicData);
    _self.HostFirewallConfig = merge({"type":"HostFirewallConfig","properties":{"defaultBlockingPolicy":_self.HostFirewallDefaultPolicy,"rule":_self.HostFirewallConfigRuleSetConfig}}, _self.DynamicData);
    _self.HostDiagnosticPartitionCreateDescription = merge({"type":"HostDiagnosticPartitionCreateDescription","properties":{"diskUuid":"xsd:string","layout":_self.HostDiskPartitionLayout,"spec":_self.HostDiagnosticPartitionCreateSpec}}, _self.DynamicData);
    _self.HostDiagnosticPartitionCreateOption = merge({"type":"HostDiagnosticPartitionCreateOption","properties":{"diagnosticType":"xsd:string","disk":_self.HostScsiDisk,"storageType":"xsd:string"}}, _self.DynamicData);
    _self.HostEvent = merge({"type":"HostEvent"}, _self.Event);
    _self.HostGetShortNameFailedEvent = merge({"type":"HostGetShortNameFailedEvent"}, _self.HostEvent);
    _self.HostSystemInfo = merge({"type":"HostSystemInfo","properties":{"model":"xsd:string","otherIdentifyingInfo":_self.HostSystemIdentificationInfo,"uuid":"xsd:string","vendor":"xsd:string"}}, _self.DynamicData);
    _self.HostHardwareSummary = merge({"type":"HostHardwareSummary","properties":{"cpuMhz":"xsd:int","cpuModel":"xsd:string","memorySize":"xsd:long","model":"xsd:string","numCpuCores":"xsd:short","numCpuPkgs":"xsd:short","numCpuThreads":"xsd:short","numHBAs":"xsd:int","numNics":"xsd:int","otherIdentifyingInfo":_self.HostSystemIdentificationInfo,"uuid":"xsd:string","vendor":"xsd:string"}}, _self.DynamicData);
    _self.HostInAuditModeEvent = merge({"type":"HostInAuditModeEvent"}, _self.HostEvent);
    _self.HostInternetScsiHba = merge({"type":"HostInternetScsiHba","properties":{"advancedOptions":_self.HostInternetScsiHbaParamValue,"authenticationCapabilities":_self.HostInternetScsiHbaAuthenticationCapabilities,"authenticationProperties":_self.HostInternetScsiHbaAuthenticationProperties,"canBeDisabled":"xsd:boolean","configuredSendTarget":_self.HostInternetScsiHbaSendTarget,"configuredStaticTarget":_self.HostInternetScsiHbaStaticTarget,"currentSpeedMb":"xsd:int","digestCapabilities":_self.HostInternetScsiHbaDigestCapabilities,"digestProperties":_self.HostInternetScsiHbaDigestProperties,"discoveryCapabilities":_self.HostInternetScsiHbaDiscoveryCapabilities,"discoveryProperties":_self.HostInternetScsiHbaDiscoveryProperties,"ipCapabilities":_self.HostInternetScsiHbaIPCapabilities,"ipProperties":_self.HostInternetScsiHbaIPProperties,"iScsiAlias":"xsd:string","iScsiName":"xsd:string","isSoftwareBased":"xsd:boolean","maxSpeedMb":"xsd:int","networkBindingSupport":_self.HostInternetScsiHbaNetworkBindingSupportType,"supportedAdvancedOptions":_self.OptionDef}}, _self.HostHostBusAdapter);
    _self.HostInventoryUnreadableEvent = merge({"type":"HostInventoryUnreadableEvent"}, _self.Event);
    _self.HostIpChangedEvent = merge({"type":"HostIpChangedEvent","properties":{"newIP":"xsd:string","oldIP":"xsd:string"}}, _self.HostEvent);
    _self.HostIpInconsistentEvent = merge({"type":"HostIpInconsistentEvent","properties":{"ipAddress":"xsd:string","ipAddress2":"xsd:string"}}, _self.HostEvent);
    _self.HostIpToShortNameFailedEvent = merge({"type":"HostIpToShortNameFailedEvent"}, _self.HostEvent);
    _self.HostMultipathInfo = merge({"type":"HostMultipathInfo","properties":{"lun":_self.HostMultipathInfoLogicalUnit}}, _self.DynamicData);
    _self.HostVirtualNicConfig = merge({"type":"HostVirtualNicConfig","properties":{"changeOperation":"xsd:string","device":"xsd:string","portgroup":"xsd:string","spec":_self.HostVirtualNicSpec}}, _self.DynamicData);
    _self.PhysicalNicConfig = merge({"type":"PhysicalNicConfig","properties":{"device":"xsd:string","spec":_self.PhysicalNicSpec}}, _self.DynamicData);
    _self.HostPortGroupConfig = merge({"type":"HostPortGroupConfig","properties":{"changeOperation":"xsd:string","spec":_self.HostPortGroupSpec}}, _self.DynamicData);
    _self.HostVirtualSwitchConfig = merge({"type":"HostVirtualSwitchConfig","properties":{"changeOperation":"xsd:string","name":"xsd:string","spec":_self.HostVirtualSwitchSpec}}, _self.DynamicData);
    _self.HostVirtualNic = merge({"type":"HostVirtualNic","properties":{"device":"xsd:string","key":"xsd:string","port":"xsd:string","portgroup":"xsd:string","spec":_self.HostVirtualNicSpec}}, _self.DynamicData);
    _self.PhysicalNic = merge({"type":"PhysicalNic","properties":{"autoNegotiateSupported":"xsd:boolean","device":"xsd:string","driver":"xsd:string","fcoeConfiguration":_self.FcoeConfig,"key":"xsd:string","linkSpeed":_self.PhysicalNicLinkInfo,"mac":"xsd:string","pci":"xsd:string","resourcePoolSchedulerAllowed":"xsd:boolean","resourcePoolSchedulerDisallowedReason":"xsd:string[]","spec":_self.PhysicalNicSpec,"validLinkSpecification":_self.PhysicalNicLinkInfo,"vmDirectPathGen2Supported":"xsd:boolean","vmDirectPathGen2SupportedMode":"xsd:string","wakeOnLanSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.HostPortGroup = merge({"type":"HostPortGroup","properties":{"computedPolicy":_self.HostNetworkPolicy,"key":"xsd:string","port":_self.HostPortGroupPort,"spec":_self.HostPortGroupSpec,"vswitch":"xsd:string"}}, _self.DynamicData);
    _self.HostVirtualSwitch = merge({"type":"HostVirtualSwitch","properties":{"key":"xsd:string","mtu":"xsd:int","name":"xsd:string","numPorts":"xsd:int","numPortsAvailable":"xsd:int","pnic":"xsd:string[]","portgroup":"xsd:string[]","spec":_self.HostVirtualSwitchSpec}}, _self.DynamicData);
    _self.HostNonCompliantEvent = merge({"type":"HostNonCompliantEvent"}, _self.HostEvent);
    _self.HostProfileAppliedEvent = merge({"type":"HostProfileAppliedEvent","properties":{"profile":_self.ProfileEventArgument}}, _self.HostEvent);
    _self.HostReconnectionFailedEvent = merge({"type":"HostReconnectionFailedEvent"}, _self.HostEvent);
    _self.HostRemovedEvent = merge({"type":"HostRemovedEvent"}, _self.HostEvent);
    _self.HostScsiTopology = merge({"type":"HostScsiTopology","properties":{"adapter":_self.HostScsiTopologyInterface}}, _self.DynamicData);
    _self.HostShortNameToIpFailedEvent = merge({"type":"HostShortNameToIpFailedEvent","properties":{"shortName":"xsd:string"}}, _self.HostEvent);
    _self.HostShutdownEvent = merge({"type":"HostShutdownEvent","properties":{"reason":"xsd:string"}}, _self.HostEvent);
    _self.HostUpgradeFailedEvent = merge({"type":"HostUpgradeFailedEvent"}, _self.HostEvent);
    _self.HostUserWorldSwapNotEnabledEvent = merge({"type":"HostUserWorldSwapNotEnabledEvent"}, _self.HostEvent);
    _self.HostVFlashManagerVFlashCacheConfigInfo = merge({"type":"HostVFlashManagerVFlashCacheConfigInfo","properties":{"defaultVFlashModule":"xsd:string","swapCacheReservationInGB":"xsd:long","vFlashModuleConfigOption":_self.HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption}}, _self.DynamicData);
    _self.VirtualNicManagerNetConfig = merge({"type":"VirtualNicManagerNetConfig","properties":{"candidateVnic":_self.HostVirtualNic,"multiSelectAllowed":"xsd:boolean","nicType":"xsd:string","selectedVnic":"xsd:string[]"}}, _self.DynamicData);
    _self.HostVMotionNetConfig = merge({"type":"HostVMotionNetConfig","properties":{"candidateVnic":_self.HostVirtualNic,"selectedVnic":"xsd:string"}}, _self.DynamicData);
    _self.HostVMotionSystem = merge({"type":"HostVMotionSystem","properties":{"ipConfig":_self.HostIpConfig,"netConfig":_self.HostVMotionNetConfig},"methods":{"DeselectVnic":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SelectVnic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":null},"UpdateIpConfig":{"params":{"_this":"ManagedObjectReference","ipConfig":"HostIpConfig"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostVnicConnectedToCustomizedDVPortEvent = merge({"type":"HostVnicConnectedToCustomizedDVPortEvent","properties":{"vnic":_self.VnicPortArgument}}, _self.HostEvent);
    _self.HostWwnChangedEvent = merge({"type":"HostWwnChangedEvent","properties":{"newNodeWwns":"xsd:long[]","newPortWwns":"xsd:long[]","oldNodeWwns":"xsd:long[]","oldPortWwns":"xsd:long[]"}}, _self.HostEvent);
    _self.HostWwnConflictEvent = merge({"type":"HostWwnConflictEvent","properties":{"conflictedHosts":_self.HostEventArgument,"conflictedVms":_self.VmEventArgument,"wwn":"xsd:long"}}, _self.HostEvent);
    _self.IScsiBootFailureEvent = merge({"type":"IScsiBootFailureEvent"}, _self.HostEvent);
    _self.LicenseEvent = merge({"type":"LicenseEvent"}, _self.Event);
    _self.LicenseExpiredEvent = merge({"type":"LicenseExpiredEvent","properties":{"feature":_self.LicenseFeatureInfo}}, _self.Event);
    _self.LicenseNonComplianceEvent = merge({"type":"LicenseNonComplianceEvent","properties":{"url":"xsd:string"}}, _self.LicenseEvent);
    _self.LicenseRestrictedEvent = merge({"type":"LicenseRestrictedEvent"}, _self.LicenseEvent);
    _self.LicenseServerAvailableEvent = merge({"type":"LicenseServerAvailableEvent","properties":{"licenseServer":"xsd:string"}}, _self.LicenseEvent);
    _self.LicenseServerUnavailableEvent = merge({"type":"LicenseServerUnavailableEvent","properties":{"licenseServer":"xsd:string"}}, _self.LicenseEvent);
    _self.LocalDatastoreCreatedEvent = merge({"type":"LocalDatastoreCreatedEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.LocalTSMEnabledEvent = merge({"type":"LocalTSMEnabledEvent"}, _self.HostEvent);
    _self.LockerMisconfiguredEvent = merge({"type":"LockerMisconfiguredEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.Event);
    _self.LockerReconfiguredEvent = merge({"type":"LockerReconfiguredEvent","properties":{"newDatastore":_self.DatastoreEventArgument,"oldDatastore":_self.DatastoreEventArgument}}, _self.Event);
    _self.ManagedEntity = merge({"type":"ManagedEntity","properties":{"alarmActionsEnabled":"xsd:boolean","configIssue":_self.Event,"configStatus":_self.ManagedEntityStatus,"customValue":_self.CustomFieldValue,"declaredAlarmState":_self.AlarmState,"disabledMethod":"xsd:string[]","effectiveRole":"xsd:int[]","name":"xsd:string","overallStatus":_self.ManagedEntityStatus,"parent":_self.ManagedObjectReference,"permission":_self.Permission,"recentTask":_self.ManagedObjectReference,"tag":_self.Tag,"triggeredAlarmState":_self.AlarmState},"methods":{"Destroy_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"Reload":{"params":{"_this":"ManagedObjectReference"},"returns":null},"Rename_Task":{"params":{"_this":"ManagedObjectReference","newName":"xsd:string"},"returns":"ManagedObjectReference"}}}, _self.ExtensibleManagedObject);
    _self.MonthlyTaskScheduler = merge({"type":"MonthlyTaskScheduler"}, _self.DailyTaskScheduler);
    _self.NASDatastoreCreatedEvent = merge({"type":"NASDatastoreCreatedEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.Network = merge({"type":"Network","properties":{"host":_self.ManagedObjectReference,"name":"xsd:string","summary":_self.NetworkSummary,"vm":_self.ManagedObjectReference},"methods":{"DestroyNetwork":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ManagedEntity);
    _self.NetworkRollbackEvent = merge({"type":"NetworkRollbackEvent","properties":{"methodName":"xsd:string","transactionId":"xsd:string"}}, _self.Event);
    _self.NoDatastoresConfiguredEvent = merge({"type":"NoDatastoresConfiguredEvent"}, _self.HostEvent);
    _self.NoLicenseEvent = merge({"type":"NoLicenseEvent","properties":{"feature":_self.LicenseFeatureInfo}}, _self.LicenseEvent);
    _self.NonVIWorkloadDetectedOnDatastoreEvent = merge({"type":"NonVIWorkloadDetectedOnDatastoreEvent"}, _self.DatastoreEvent);
    _self.OpaqueNetwork = merge({"type":"OpaqueNetwork","methods":{}}, _self.Network);
    _self.OutOfSyncDvsHost = merge({"type":"OutOfSyncDvsHost","properties":{"hostOutOfSync":_self.DvsOutOfSyncHostArgument}}, _self.DvsEvent);
    _self.ParaVirtualSCSIControllerOption = merge({"type":"ParaVirtualSCSIControllerOption"}, _self.VirtualSCSIControllerOption);
    _self.StorageDrsConfigInfo = merge({"type":"StorageDrsConfigInfo","properties":{"podConfig":_self.StorageDrsPodConfigInfo,"vmConfig":_self.StorageDrsVmConfigInfo}}, _self.DynamicData);
    _self.ProfileDescription = merge({"type":"ProfileDescription","properties":{"section":_self.ProfileDescriptionSection}}, _self.DynamicData);
    _self.ProfileCompositePolicyOptionMetadata = merge({"type":"ProfileCompositePolicyOptionMetadata","properties":{"option":"xsd:string[]"}}, _self.ProfilePolicyOptionMetadata);
    _self.ProfileEvent = merge({"type":"ProfileEvent","properties":{"profile":_self.ProfileEventArgument}}, _self.Event);
    _self.ProfileExpressionMetadata = merge({"type":"ProfileExpressionMetadata","properties":{"expressionId":_self.ExtendedElementDescription,"parameter":_self.ProfileParameterMetadata}}, _self.DynamicData);
    _self.ProfilePolicyMetadata = merge({"type":"ProfilePolicyMetadata","properties":{"id":_self.ExtendedElementDescription,"possibleOption":_self.ProfilePolicyOptionMetadata}}, _self.DynamicData);
    _self.ProfileReferenceHostChangedEvent = merge({"type":"ProfileReferenceHostChangedEvent","properties":{"referenceHost":_self.ManagedObjectReference}}, _self.ProfileEvent);
    _self.ProfileRemovedEvent = merge({"type":"ProfileRemovedEvent"}, _self.ProfileEvent);
    _self.RecoveryEvent = merge({"type":"RecoveryEvent","properties":{"dvsUuid":"xsd:string","hostName":"xsd:string","portKey":"xsd:string","vnic":"xsd:string"}}, _self.DvsEvent);
    _self.RemoteTSMEnabledEvent = merge({"type":"RemoteTSMEnabledEvent"}, _self.HostEvent);
    _self.ResourcePool = merge({"type":"ResourcePool","properties":{"childConfiguration":_self.ResourceConfigSpec,"config":_self.ResourceConfigSpec,"owner":_self.ManagedObjectReference,"resourcePool":_self.ManagedObjectReference,"runtime":_self.ResourcePoolRuntimeInfo,"summary":_self.ResourcePoolSummary,"vm":_self.ManagedObjectReference},"methods":{"CreateChildVM_Task":{"params":{"_this":"ManagedObjectReference","config":"VirtualMachineConfigSpec","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"CreateResourcePool":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","spec":"ResourceConfigSpec"},"returns":"ManagedObjectReference"},"CreateVApp":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","resSpec":"ResourceConfigSpec","configSpec":"VAppConfigSpec","vmFolder":"ManagedObjectReferencetoaFolder"},"returns":"ManagedObjectReference"},"DestroyChildren":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ImportVApp":{"params":{"_this":"ManagedObjectReference","spec":"ImportSpec","folderP":"ManagedObjectReferencetoaFolder","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"MoveIntoResourcePool":{"params":{"_this":"ManagedObjectReference","list":"ManagedObjectReferencetoaManagedEntity"},"returns":null},"QueryResourceConfigOption":{"params":{"_this":"ManagedObjectReference"},"returns":"ResourceConfigOption"},"RefreshRuntime":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RegisterChildVM_Task":{"params":{"_this":"ManagedObjectReference","path":"xsd:string","name":"xsd:string","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"UpdateChildResourceConfiguration":{"params":{"_this":"ManagedObjectReference","spec":"ResourceConfigSpec"},"returns":null},"UpdateConfig":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","config":"ResourceConfigSpec"},"returns":null}}}, _self.ManagedEntity);
    _self.ResourcePoolEvent = merge({"type":"ResourcePoolEvent","properties":{"resourcePool":_self.ResourcePoolEventArgument}}, _self.Event);
    _self.ResourcePoolMovedEvent = merge({"type":"ResourcePoolMovedEvent","properties":{"newParent":_self.ResourcePoolEventArgument,"oldParent":_self.ResourcePoolEventArgument}}, _self.ResourcePoolEvent);
    _self.ResourcePoolReconfiguredEvent = merge({"type":"ResourcePoolReconfiguredEvent"}, _self.ResourcePoolEvent);
    _self.ResourceViolatedEvent = merge({"type":"ResourceViolatedEvent"}, _self.ResourcePoolEvent);
    _self.RollbackEvent = merge({"type":"RollbackEvent","properties":{"hostName":"xsd:string","methodName":"xsd:string"}}, _self.DvsEvent);
    _self.ScheduledTaskDescription = merge({"type":"ScheduledTaskDescription","properties":{"action":_self.TypeDescription,"dayOfWeek":_self.ElementDescription,"schedulerInfo":_self.ScheduledTaskDetail,"state":_self.ElementDescription,"weekOfMonth":_self.ElementDescription}}, _self.DynamicData);
    _self.ScheduledTaskEvent = merge({"type":"ScheduledTaskEvent","properties":{"entity":_self.ManagedEntityEventArgument,"scheduledTask":_self.ScheduledTaskEventArgument}}, _self.Event);
    _self.ScheduledTaskManager = {"type":"ScheduledTaskManager","properties":{"description":_self.ScheduledTaskDescription,"scheduledTask":_self.ManagedObjectReference},"methods":{"CreateObjectScheduledTask":{"params":{"_this":"ManagedObjectReference","objP":"ManagedObjectReference","spec":"ScheduledTaskSpec"},"returns":"ManagedObjectReference"},"CreateScheduledTask":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","spec":"ScheduledTaskSpec"},"returns":"ManagedObjectReference"},"RetrieveEntityScheduledTask":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"RetrieveObjectScheduledTask":{"params":{"_this":"ManagedObjectReference","obj":"ManagedObjectReference"},"returns":"ManagedObjectReference"}}};
    _self.ScheduledTaskReconfiguredEvent = merge({"type":"ScheduledTaskReconfiguredEvent"}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskRemovedEvent = merge({"type":"ScheduledTaskRemovedEvent"}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskStartedEvent = merge({"type":"ScheduledTaskStartedEvent"}, _self.ScheduledTaskEvent);
    _self.ServerLicenseExpiredEvent = merge({"type":"ServerLicenseExpiredEvent","properties":{"product":"xsd:string"}}, _self.LicenseEvent);
    _self.ServiceInstance = {"type":"ServiceInstance","properties":{"capability":_self.Capability,"content":_self.ServiceContent,"serverClock":"xsd:dateTime"},"methods":{"CurrentTime":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:dateTime"},"QueryVMotionCompatibility":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","host":"ManagedObjectReferencetoaHostSystem","compatibility":"xsd:string"},"returns":"HostVMotionCompatibility"},"RetrieveProductComponents":{"params":{"_this":"ManagedObjectReference"},"returns":"ProductComponentInfo"},"RetrieveServiceContent":{"params":{"_this":"ManagedObjectReference"},"returns":"ServiceContent"},"ValidateMigration":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","state":"VirtualMachinePowerState","testType":"xsd:string","pool":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem"},"returns":"Event"}}};
    _self.SessionEvent = merge({"type":"SessionEvent"}, _self.Event);
    _self.SessionTerminatedEvent = merge({"type":"SessionTerminatedEvent","properties":{"sessionId":"xsd:string","terminatedUsername":"xsd:string"}}, _self.SessionEvent);
    _self.StorageDrsConfigSpec = merge({"type":"StorageDrsConfigSpec","properties":{"podConfigSpec":_self.StorageDrsPodConfigSpec,"vmConfigSpec":_self.StorageDrsVmConfigSpec}}, _self.DynamicData);
    _self.StorageDrsPodSelectionSpec = merge({"type":"StorageDrsPodSelectionSpec","properties":{"initialVmConfig":_self.VmPodConfigForPlacement,"storagePod":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.StorageMigrationAction = merge({"type":"StorageMigrationAction","properties":{"destination":_self.ManagedObjectReference,"ioLatencyDstBefore":"xsd:float","ioLatencySrcBefore":"xsd:float","relocateSpec":_self.VirtualMachineRelocateSpec,"sizeTransferred":"xsd:long","source":_self.ManagedObjectReference,"spaceUtilDstAfter":"xsd:float","spaceUtilDstBefore":"xsd:float","spaceUtilSrcAfter":"xsd:float","spaceUtilSrcBefore":"xsd:float","vm":_self.ManagedObjectReference}}, _self.ClusterAction);
    _self.TemplateUpgradeEvent = merge({"type":"TemplateUpgradeEvent","properties":{"legacyTemplate":"xsd:string"}}, _self.Event);
    _self.TimedOutHostOperationEvent = merge({"type":"TimedOutHostOperationEvent"}, _self.HostEvent);
    _self.UnlicensedVirtualMachinesEvent = merge({"type":"UnlicensedVirtualMachinesEvent","properties":{"available":"xsd:int","unlicensed":"xsd:int"}}, _self.LicenseEvent);
    _self.UnlicensedVirtualMachinesFoundEvent = merge({"type":"UnlicensedVirtualMachinesFoundEvent","properties":{"available":"xsd:int"}}, _self.LicenseEvent);
    _self.UpdatedAgentBeingRestartedEvent = merge({"type":"UpdatedAgentBeingRestartedEvent"}, _self.HostEvent);
    _self.UpgradeEvent = merge({"type":"UpgradeEvent","properties":{"message":"xsd:string"}}, _self.Event);
    _self.UserAssignedToGroup = merge({"type":"UserAssignedToGroup","properties":{"group":"xsd:string","userLogin":"xsd:string"}}, _self.HostEvent);
    _self.UserLoginSessionEvent = merge({"type":"UserLoginSessionEvent","properties":{"ipAddress":"xsd:string","locale":"xsd:string","sessionId":"xsd:string","userAgent":"xsd:string"}}, _self.SessionEvent);
    _self.UserLogoutSessionEvent = merge({"type":"UserLogoutSessionEvent","properties":{"callCount":"xsd:long","ipAddress":"xsd:string","loginTime":"xsd:dateTime","sessionId":"xsd:string","userAgent":"xsd:string"}}, _self.SessionEvent);
    _self.UserPasswordChanged = merge({"type":"UserPasswordChanged","properties":{"userLogin":"xsd:string"}}, _self.HostEvent);
    _self.UserUnassignedFromGroup = merge({"type":"UserUnassignedFromGroup","properties":{"group":"xsd:string","userLogin":"xsd:string"}}, _self.HostEvent);
    _self.UserUpgradeEvent = merge({"type":"UserUpgradeEvent"}, _self.UpgradeEvent);
    _self.VAppCloneSpec = merge({"type":"VAppCloneSpec","properties":{"host":_self.ManagedObjectReference,"location":_self.ManagedObjectReference,"networkMapping":_self.VAppCloneSpecNetworkMappingPair,"property":_self.KeyValue,"provisioning":"xsd:string","resourceMapping":_self.VAppCloneSpecResourceMap,"resourceSpec":_self.ResourceConfigSpec,"vmFolder":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.VcAgentUninstalledEvent = merge({"type":"VcAgentUninstalledEvent"}, _self.HostEvent);
    _self.VcAgentUninstallFailedEvent = merge({"type":"VcAgentUninstallFailedEvent","properties":{"reason":"xsd:string"}}, _self.HostEvent);
    _self.VcAgentUpgradedEvent = merge({"type":"VcAgentUpgradedEvent"}, _self.HostEvent);
    _self.VcAgentUpgradeFailedEvent = merge({"type":"VcAgentUpgradeFailedEvent","properties":{"reason":"xsd:string"}}, _self.HostEvent);
    _self.VimAccountPasswordChangedEvent = merge({"type":"VimAccountPasswordChangedEvent"}, _self.HostEvent);
    _self.VirtualAHCIControllerOption = merge({"type":"VirtualAHCIControllerOption"}, _self.VirtualSATAControllerOption);
    _self.VirtualApp = merge({"type":"VirtualApp","properties":{"childLink":_self.VirtualAppLinkInfo,"datastore":_self.ManagedObjectReference,"network":_self.ManagedObjectReference,"parentFolder":_self.ManagedObjectReference,"parentVApp":_self.ManagedObjectReference,"vAppConfig":_self.VAppConfigInfo},"methods":{"CloneVApp_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","target":"ManagedObjectReferencetoaResourcePool","spec":"VAppCloneSpec"},"returns":"ManagedObjectReference"},"ExportVApp":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"PowerOffVApp_Task":{"params":{"_this":"ManagedObjectReference","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"PowerOnVApp_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"SuspendVApp_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"unregisterVApp_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"UpdateLinkedChildren":{"params":{"_this":"ManagedObjectReference","addChangeSet":"VirtualAppLinkInfo","removeSet":"ManagedObjectReferencetoaManagedEntity"},"returns":null},"UpdateVAppConfig":{"params":{"_this":"ManagedObjectReference","spec":"VAppConfigSpec"},"returns":null}}}, _self.ResourcePool);
    _self.VirtualBusLogicControllerOption = merge({"type":"VirtualBusLogicControllerOption"}, _self.VirtualSCSIControllerOption);
    _self.VirtualCdromIsoBackingOption = merge({"type":"VirtualCdromIsoBackingOption"}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskOption = merge({"type":"VirtualDiskOption","properties":{"capacityInKB":_self.LongOption,"ioAllocationOption":_self.StorageIOAllocationOption,"vFlashCacheConfigOption":_self.VirtualDiskOptionVFlashCacheConfigOption}}, _self.VirtualDeviceOption);
    _self.VirtualDiskPartitionedRawDiskVer2BackingOption = merge({"type":"VirtualDiskPartitionedRawDiskVer2BackingOption"}, _self.VirtualDiskRawDiskVer2BackingOption);
    _self.VirtualE1000eOption = merge({"type":"VirtualE1000eOption"}, _self.VirtualEthernetCardOption);
    _self.VirtualE1000Option = merge({"type":"VirtualE1000Option"}, _self.VirtualEthernetCardOption);
    _self.VirtualLsiLogicControllerOption = merge({"type":"VirtualLsiLogicControllerOption"}, _self.VirtualSCSIControllerOption);
    _self.VirtualLsiLogicSASControllerOption = merge({"type":"VirtualLsiLogicSASControllerOption"}, _self.VirtualSCSIControllerOption);
    _self.VirtualMachineRuntimeInfo = merge({"type":"VirtualMachineRuntimeInfo","properties":{"bootTime":"xsd:dateTime","cleanPowerOff":"xsd:boolean","connectionState":_self.VirtualMachineConnectionState,"consolidationNeeded":"xsd:boolean","dasVmProtection":_self.VirtualMachineRuntimeInfoDasProtectionState,"device":_self.VirtualMachineDeviceRuntimeInfo,"faultToleranceState":_self.VirtualMachineFaultToleranceState,"featureMask":_self.HostFeatureMask,"featureRequirement":_self.VirtualMachineFeatureRequirement,"host":_self.ManagedObjectReference,"maxCpuUsage":"xsd:int","maxMemoryUsage":"xsd:int","memoryOverhead":"xsd:long","minRequiredEVCModeKey":"xsd:string","needSecondaryReason":"xsd:string","numMksConnections":"xsd:int","offlineFeatureRequirement":_self.VirtualMachineFeatureRequirement,"onlineStandby":"xsd:boolean","powerState":_self.VirtualMachinePowerState,"question":_self.VirtualMachineQuestionInfo,"recordReplayState":_self.VirtualMachineRecordReplayState,"suspendInterval":"xsd:long","suspendTime":"xsd:dateTime","toolsInstallerMounted":"xsd:boolean","vFlashCacheAllocation":"xsd:long"}}, _self.DynamicData);
    _self.VirtualVmxnet2Option = merge({"type":"VirtualVmxnet2Option"}, _self.VirtualVmxnetOption);
    _self.VirtualVmxnet3Option = merge({"type":"VirtualVmxnet3Option"}, _self.VirtualVmxnetOption);
    _self.VmEvent = merge({"type":"VmEvent","properties":{"template":"xsd:boolean"}}, _self.Event);
    _self.VmFailedRelayoutOnVmfs2DatastoreEvent = merge({"type":"VmFailedRelayoutOnVmfs2DatastoreEvent"}, _self.VmEvent);
    _self.VmFailedStartingSecondaryEvent = merge({"type":"VmFailedStartingSecondaryEvent","properties":{"reason":"xsd:string"}}, _self.VmEvent);
    _self.VmFailedUpdatingSecondaryConfig = merge({"type":"VmFailedUpdatingSecondaryConfig"}, _self.VmEvent);
    _self.VmFaultToleranceStateChangedEvent = merge({"type":"VmFaultToleranceStateChangedEvent","properties":{"newState":_self.VirtualMachineFaultToleranceState,"oldState":_self.VirtualMachineFaultToleranceState}}, _self.VmEvent);
    _self.VmFaultToleranceTurnedOffEvent = merge({"type":"VmFaultToleranceTurnedOffEvent"}, _self.VmEvent);
    _self.VmFaultToleranceVmTerminatedEvent = merge({"type":"VmFaultToleranceVmTerminatedEvent","properties":{"reason":"xsd:string"}}, _self.VmEvent);
    _self.VMFSDatastoreCreatedEvent = merge({"type":"VMFSDatastoreCreatedEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.VMFSDatastoreExpandedEvent = merge({"type":"VMFSDatastoreExpandedEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.VMFSDatastoreExtendedEvent = merge({"type":"VMFSDatastoreExtendedEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.VmGuestRebootEvent = merge({"type":"VmGuestRebootEvent"}, _self.VmEvent);
    _self.VmGuestShutdownEvent = merge({"type":"VmGuestShutdownEvent"}, _self.VmEvent);
    _self.VmGuestStandbyEvent = merge({"type":"VmGuestStandbyEvent"}, _self.VmEvent);
    _self.VmInstanceUuidAssignedEvent = merge({"type":"VmInstanceUuidAssignedEvent","properties":{"instanceUuid":"xsd:string"}}, _self.VmEvent);
    _self.VmInstanceUuidChangedEvent = merge({"type":"VmInstanceUuidChangedEvent","properties":{"newInstanceUuid":"xsd:string","oldInstanceUuid":"xsd:string"}}, _self.VmEvent);
    _self.VmInstanceUuidConflictEvent = merge({"type":"VmInstanceUuidConflictEvent","properties":{"conflictedVm":_self.VmEventArgument,"instanceUuid":"xsd:string"}}, _self.VmEvent);
    _self.VmMacAssignedEvent = merge({"type":"VmMacAssignedEvent","properties":{"adapter":"xsd:string","mac":"xsd:string"}}, _self.VmEvent);
    _self.VmMacChangedEvent = merge({"type":"VmMacChangedEvent","properties":{"adapter":"xsd:string","newMac":"xsd:string","oldMac":"xsd:string"}}, _self.VmEvent);
    _self.VmMacConflictEvent = merge({"type":"VmMacConflictEvent","properties":{"conflictedVm":_self.VmEventArgument,"mac":"xsd:string"}}, _self.VmEvent);
    _self.VmMaxFTRestartCountReached = merge({"type":"VmMaxFTRestartCountReached"}, _self.VmEvent);
    _self.VmMaxRestartCountReached = merge({"type":"VmMaxRestartCountReached"}, _self.VmEvent);
    _self.VmMessageErrorEvent = merge({"type":"VmMessageErrorEvent","properties":{"message":"xsd:string","messageInfo":_self.VirtualMachineMessage}}, _self.VmEvent);
    _self.VmMessageEvent = merge({"type":"VmMessageEvent","properties":{"message":"xsd:string","messageInfo":_self.VirtualMachineMessage}}, _self.VmEvent);
    _self.VmMessageWarningEvent = merge({"type":"VmMessageWarningEvent","properties":{"message":"xsd:string","messageInfo":_self.VirtualMachineMessage}}, _self.VmEvent);
    _self.VmMigratedEvent = merge({"type":"VmMigratedEvent","properties":{"sourceDatacenter":_self.DatacenterEventArgument,"sourceDatastore":_self.DatastoreEventArgument,"sourceHost":_self.HostEventArgument}}, _self.VmEvent);
    _self.VmNoCompatibleHostForSecondaryEvent = merge({"type":"VmNoCompatibleHostForSecondaryEvent"}, _self.VmEvent);
    _self.VmNoNetworkAccessEvent = merge({"type":"VmNoNetworkAccessEvent","properties":{"destHost":_self.HostEventArgument}}, _self.VmEvent);
    _self.VmOrphanedEvent = merge({"type":"VmOrphanedEvent"}, _self.VmEvent);
    _self.VMotionLicenseExpiredEvent = merge({"type":"VMotionLicenseExpiredEvent"}, _self.LicenseEvent);
    _self.VmPoweredOffEvent = merge({"type":"VmPoweredOffEvent"}, _self.VmEvent);
    _self.VmPoweredOnEvent = merge({"type":"VmPoweredOnEvent"}, _self.VmEvent);
    _self.VmPoweringOnWithCustomizedDVPortEvent = merge({"type":"VmPoweringOnWithCustomizedDVPortEvent","properties":{"vnic":_self.VnicPortArgument}}, _self.VmEvent);
    _self.VmPowerOffOnIsolationEvent = merge({"type":"VmPowerOffOnIsolationEvent","properties":{"isolatedHost":_self.HostEventArgument}}, _self.VmPoweredOffEvent);
    _self.VmPrimaryFailoverEvent = merge({"type":"VmPrimaryFailoverEvent","properties":{"reason":"xsd:string"}}, _self.VmEvent);
    _self.VmRegisteredEvent = merge({"type":"VmRegisteredEvent"}, _self.VmEvent);
    _self.VmRelayoutSuccessfulEvent = merge({"type":"VmRelayoutSuccessfulEvent"}, _self.VmEvent);
    _self.VmRelayoutUpToDateEvent = merge({"type":"VmRelayoutUpToDateEvent"}, _self.VmEvent);
    _self.VmReloadFromPathEvent = merge({"type":"VmReloadFromPathEvent","properties":{"configPath":"xsd:string"}}, _self.VmEvent);
    _self.VmReloadFromPathFailedEvent = merge({"type":"VmReloadFromPathFailedEvent","properties":{"configPath":"xsd:string"}}, _self.VmEvent);
    _self.VmRelocateSpecEvent = merge({"type":"VmRelocateSpecEvent"}, _self.VmEvent);
    _self.VmRemoteConsoleConnectedEvent = merge({"type":"VmRemoteConsoleConnectedEvent"}, _self.VmEvent);
    _self.VmRemoteConsoleDisconnectedEvent = merge({"type":"VmRemoteConsoleDisconnectedEvent"}, _self.VmEvent);
    _self.VmRemovedEvent = merge({"type":"VmRemovedEvent"}, _self.VmEvent);
    _self.VmRenamedEvent = merge({"type":"VmRenamedEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.VmEvent);
    _self.VmRequirementsExceedCurrentEVCModeEvent = merge({"type":"VmRequirementsExceedCurrentEVCModeEvent"}, _self.VmEvent);
    _self.VmResettingEvent = merge({"type":"VmResettingEvent"}, _self.VmEvent);
    _self.VmResourcePoolMovedEvent = merge({"type":"VmResourcePoolMovedEvent","properties":{"newParent":_self.ResourcePoolEventArgument,"oldParent":_self.ResourcePoolEventArgument}}, _self.VmEvent);
    _self.VmResourceReallocatedEvent = merge({"type":"VmResourceReallocatedEvent"}, _self.VmEvent);
    _self.VmRestartedOnAlternateHostEvent = merge({"type":"VmRestartedOnAlternateHostEvent","properties":{"sourceHost":_self.HostEventArgument}}, _self.VmPoweredOnEvent);
    _self.VmResumingEvent = merge({"type":"VmResumingEvent"}, _self.VmEvent);
    _self.VmSecondaryAddedEvent = merge({"type":"VmSecondaryAddedEvent"}, _self.VmEvent);
    _self.VmSecondaryDisabledEvent = merge({"type":"VmSecondaryDisabledEvent"}, _self.VmEvent);
    _self.VmSecondaryEnabledEvent = merge({"type":"VmSecondaryEnabledEvent"}, _self.VmEvent);
    _self.VmSecondaryStartedEvent = merge({"type":"VmSecondaryStartedEvent"}, _self.VmEvent);
    _self.VmShutdownOnIsolationEvent = merge({"type":"VmShutdownOnIsolationEvent","properties":{"isolatedHost":_self.HostEventArgument,"shutdownResult":"xsd:string"}}, _self.VmPoweredOffEvent);
    _self.VmStartingEvent = merge({"type":"VmStartingEvent"}, _self.VmEvent);
    _self.VmStartingSecondaryEvent = merge({"type":"VmStartingSecondaryEvent"}, _self.VmEvent);
    _self.VmStartRecordingEvent = merge({"type":"VmStartRecordingEvent"}, _self.VmEvent);
    _self.VmStartReplayingEvent = merge({"type":"VmStartReplayingEvent"}, _self.VmEvent);
    _self.VmStaticMacConflictEvent = merge({"type":"VmStaticMacConflictEvent","properties":{"conflictedVm":_self.VmEventArgument,"mac":"xsd:string"}}, _self.VmEvent);
    _self.VmStoppingEvent = merge({"type":"VmStoppingEvent"}, _self.VmEvent);
    _self.VmSuspendedEvent = merge({"type":"VmSuspendedEvent"}, _self.VmEvent);
    _self.VmSuspendingEvent = merge({"type":"VmSuspendingEvent"}, _self.VmEvent);
    _self.VmTimedoutStartingSecondaryEvent = merge({"type":"VmTimedoutStartingSecondaryEvent","properties":{"timeout":"xsd:long"}}, _self.VmEvent);
    _self.VmUnsupportedStartingEvent = merge({"type":"VmUnsupportedStartingEvent","properties":{"guestId":"xsd:string"}}, _self.VmStartingEvent);
    _self.VmUpgradeCompleteEvent = merge({"type":"VmUpgradeCompleteEvent","properties":{"version":"xsd:string"}}, _self.VmEvent);
    _self.VmUpgradeFailedEvent = merge({"type":"VmUpgradeFailedEvent"}, _self.VmEvent);
    _self.VmUpgradingEvent = merge({"type":"VmUpgradingEvent","properties":{"version":"xsd:string"}}, _self.VmEvent);
    _self.VmUuidAssignedEvent = merge({"type":"VmUuidAssignedEvent","properties":{"uuid":"xsd:string"}}, _self.VmEvent);
    _self.VmUuidChangedEvent = merge({"type":"VmUuidChangedEvent","properties":{"newUuid":"xsd:string","oldUuid":"xsd:string"}}, _self.VmEvent);
    _self.VmUuidConflictEvent = merge({"type":"VmUuidConflictEvent","properties":{"conflictedVm":_self.VmEventArgument,"uuid":"xsd:string"}}, _self.VmEvent);
    _self.VmWwnAssignedEvent = merge({"type":"VmWwnAssignedEvent","properties":{"nodeWwns":"xsd:long[]","portWwns":"xsd:long[]"}}, _self.VmEvent);
    _self.VmWwnChangedEvent = merge({"type":"VmWwnChangedEvent","properties":{"newNodeWwns":"xsd:long[]","newPortWwns":"xsd:long[]","oldNodeWwns":"xsd:long[]","oldPortWwns":"xsd:long[]"}}, _self.VmEvent);
    _self.VmWwnConflictEvent = merge({"type":"VmWwnConflictEvent","properties":{"conflictedHosts":_self.HostEventArgument,"conflictedVms":_self.VmEventArgument,"wwn":"xsd:long"}}, _self.VmEvent);
    _self.VsanHostConfigInfoStorageInfo = merge({"type":"VsanHostConfigInfoStorageInfo","properties":{"autoClaimStorage":"xsd:boolean","diskMapping":_self.VsanHostDiskMapping}}, _self.DynamicData);
    _self.WarningUpgradeEvent = merge({"type":"WarningUpgradeEvent"}, _self.UpgradeEvent);
    _self.WeeklyTaskScheduler = merge({"type":"WeeklyTaskScheduler","properties":{"friday":"xsd:boolean","monday":"xsd:boolean","saturday":"xsd:boolean","sunday":"xsd:boolean","thursday":"xsd:boolean","tuesday":"xsd:boolean","wednesday":"xsd:boolean"}}, _self.DailyTaskScheduler);
    _self.AccountCreatedEvent = merge({"type":"AccountCreatedEvent","properties":{"group":"xsd:boolean","spec":_self.HostAccountSpec}}, _self.HostEvent);
    _self.AccountRemovedEvent = merge({"type":"AccountRemovedEvent","properties":{"account":"xsd:string","group":"xsd:boolean"}}, _self.HostEvent);
    _self.AccountUpdatedEvent = merge({"type":"AccountUpdatedEvent","properties":{"group":"xsd:boolean","spec":_self.HostAccountSpec}}, _self.HostEvent);
    _self.AdminPasswordNotChangedEvent = merge({"type":"AdminPasswordNotChangedEvent"}, _self.HostEvent);
    _self.AlarmEvent = merge({"type":"AlarmEvent","properties":{"alarm":_self.AlarmEventArgument}}, _self.Event);
    _self.AlarmReconfiguredEvent = merge({"type":"AlarmReconfiguredEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmRemovedEvent = merge({"type":"AlarmRemovedEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmScriptCompleteEvent = merge({"type":"AlarmScriptCompleteEvent","properties":{"entity":_self.ManagedEntityEventArgument,"script":"xsd:string"}}, _self.AlarmEvent);
    _self.AlarmSnmpCompletedEvent = merge({"type":"AlarmSnmpCompletedEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmStatusChangedEvent = merge({"type":"AlarmStatusChangedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"from":"xsd:string","source":_self.ManagedEntityEventArgument,"to":"xsd:string"}}, _self.AlarmEvent);
    _self.AllVirtualMachinesLicensedEvent = merge({"type":"AllVirtualMachinesLicensedEvent"}, _self.LicenseEvent);
    _self.AlreadyAuthenticatedSessionEvent = merge({"type":"AlreadyAuthenticatedSessionEvent"}, _self.SessionEvent);
    _self.AuthorizationEvent = merge({"type":"AuthorizationEvent"}, _self.Event);
    _self.BadUsernameSessionEvent = merge({"type":"BadUsernameSessionEvent","properties":{"ipAddress":"xsd:string"}}, _self.SessionEvent);
    _self.CanceledHostOperationEvent = merge({"type":"CanceledHostOperationEvent"}, _self.HostEvent);
    _self.ClusterConfigInfo = merge({"type":"ClusterConfigInfo","properties":{"dasConfig":_self.ClusterDasConfigInfo,"dasVmConfig":_self.ClusterDasVmConfigInfo,"drsConfig":_self.ClusterDrsConfigInfo,"drsVmConfig":_self.ClusterDrsVmConfigInfo,"rule":_self.ClusterRuleInfo}}, _self.DynamicData);
    _self.VsanHostConfigInfo = merge({"type":"VsanHostConfigInfo","properties":{"clusterInfo":_self.VsanHostConfigInfoClusterInfo,"enabled":"xsd:boolean","hostSystem":_self.ManagedObjectReference,"networkInfo":_self.VsanHostConfigInfoNetworkInfo,"storageInfo":_self.VsanHostConfigInfoStorageInfo}}, _self.DynamicData);
    _self.ClusterConfigSpec = merge({"type":"ClusterConfigSpec","properties":{"dasConfig":_self.ClusterDasConfigInfo,"dasVmConfigSpec":_self.ClusterDasVmConfigSpec,"drsConfig":_self.ClusterDrsConfigInfo,"drsVmConfigSpec":_self.ClusterDrsVmConfigSpec,"rulesSpec":_self.ClusterRuleSpec}}, _self.DynamicData);
    _self.ClusterConfigSpecEx = merge({"type":"ClusterConfigSpecEx","properties":{"dasConfig":_self.ClusterDasConfigInfo,"dasVmConfigSpec":_self.ClusterDasVmConfigSpec,"dpmConfig":_self.ClusterDpmConfigInfo,"dpmHostConfigSpec":_self.ClusterDpmHostConfigSpec,"drsConfig":_self.ClusterDrsConfigInfo,"drsVmConfigSpec":_self.ClusterDrsVmConfigSpec,"groupSpec":_self.ClusterGroupSpec,"rulesSpec":_self.ClusterRuleSpec,"vsanConfig":_self.VsanClusterConfigInfo,"vsanHostConfigSpec":_self.VsanHostConfigInfo}}, _self.ComputeResourceConfigSpec);
    _self.ClusterEvent = merge({"type":"ClusterEvent"}, _self.Event);
    _self.ClusterOvercommittedEvent = merge({"type":"ClusterOvercommittedEvent"}, _self.ClusterEvent);
    _self.ClusterReconfiguredEvent = merge({"type":"ClusterReconfiguredEvent"}, _self.ClusterEvent);
    _self.ClusterStatusChangedEvent = merge({"type":"ClusterStatusChangedEvent","properties":{"newStatus":"xsd:string","oldStatus":"xsd:string"}}, _self.ClusterEvent);
    _self.ComputeResource = merge({"type":"ComputeResource","properties":{"configurationEx":_self.ComputeResourceConfigInfo,"datastore":_self.ManagedObjectReference,"environmentBrowser":_self.ManagedObjectReference,"host":_self.ManagedObjectReference,"network":_self.ManagedObjectReference,"resourcePool":_self.ManagedObjectReference,"summary":_self.ComputeResourceSummary},"methods":{"ReconfigureComputeResource_Task":{"params":{"_this":"ManagedObjectReference","spec":"ComputeResourceConfigSpec","modify":"xsd:boolean"},"returns":"ManagedObjectReference"}}}, _self.ManagedEntity);
    _self.CustomFieldEvent = merge({"type":"CustomFieldEvent"}, _self.Event);
    _self.CustomFieldValueChangedEvent = merge({"type":"CustomFieldValueChangedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"fieldKey":"xsd:int","name":"xsd:string","value":"xsd:string"}}, _self.CustomFieldEvent);
    _self.CustomizationAdapterMapping = merge({"type":"CustomizationAdapterMapping","properties":{"adapter":_self.CustomizationIPSettings,"macAddress":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationEvent = merge({"type":"CustomizationEvent","properties":{"logLocation":"xsd:string"}}, _self.VmEvent);
    _self.CustomizationFailed = merge({"type":"CustomizationFailed"}, _self.CustomizationEvent);
    _self.CustomizationLinuxIdentityFailed = merge({"type":"CustomizationLinuxIdentityFailed"}, _self.CustomizationFailed);
    _self.CustomizationNetworkSetupFailed = merge({"type":"CustomizationNetworkSetupFailed"}, _self.CustomizationFailed);
    _self.CustomizationSpec = merge({"type":"CustomizationSpec","properties":{"encryptionKey":"xsd:byte[]","globalIPSettings":_self.CustomizationGlobalIPSettings,"identity":_self.CustomizationIdentitySettings,"nicSettingMap":_self.CustomizationAdapterMapping,"options":_self.CustomizationOptions}}, _self.DynamicData);
    _self.CustomizationSpecItem = merge({"type":"CustomizationSpecItem","properties":{"info":_self.CustomizationSpecInfo,"spec":_self.CustomizationSpec}}, _self.DynamicData);
    _self.CustomizationStartedEvent = merge({"type":"CustomizationStartedEvent"}, _self.CustomizationEvent);
    _self.CustomizationSucceeded = merge({"type":"CustomizationSucceeded"}, _self.CustomizationEvent);
    _self.CustomizationSysprepFailed = merge({"type":"CustomizationSysprepFailed","properties":{"sysprepVersion":"xsd:string","systemVersion":"xsd:string"}}, _self.CustomizationFailed);
    _self.CustomizationUnknownFailure = merge({"type":"CustomizationUnknownFailure"}, _self.CustomizationFailed);
    _self.DasAdmissionControlDisabledEvent = merge({"type":"DasAdmissionControlDisabledEvent"}, _self.ClusterEvent);
    _self.DasAdmissionControlEnabledEvent = merge({"type":"DasAdmissionControlEnabledEvent"}, _self.ClusterEvent);
    _self.DasAgentFoundEvent = merge({"type":"DasAgentFoundEvent"}, _self.ClusterEvent);
    _self.DasAgentUnavailableEvent = merge({"type":"DasAgentUnavailableEvent"}, _self.ClusterEvent);
    _self.DasClusterIsolatedEvent = merge({"type":"DasClusterIsolatedEvent"}, _self.ClusterEvent);
    _self.DasDisabledEvent = merge({"type":"DasDisabledEvent"}, _self.ClusterEvent);
    _self.DasEnabledEvent = merge({"type":"DasEnabledEvent"}, _self.ClusterEvent);
    _self.DasHostFailedEvent = merge({"type":"DasHostFailedEvent","properties":{"failedHost":_self.HostEventArgument}}, _self.ClusterEvent);
    _self.DasHostIsolatedEvent = merge({"type":"DasHostIsolatedEvent","properties":{"isolatedHost":_self.HostEventArgument}}, _self.ClusterEvent);
    _self.Datacenter = merge({"type":"Datacenter","properties":{"configuration":_self.DatacenterConfigInfo,"datastore":_self.ManagedObjectReference,"datastoreFolder":_self.ManagedObjectReference,"hostFolder":_self.ManagedObjectReference,"network":_self.ManagedObjectReference,"networkFolder":_self.ManagedObjectReference,"vmFolder":_self.ManagedObjectReference},"methods":{"PowerOnMultiVM_Task":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine","option":"OptionValue"},"returns":"ManagedObjectReference"},"QueryConnectionInfo":{"params":{"_this":"ManagedObjectReference","hostname":"xsd:string","port":"xsd:int","username":"xsd:string","password":"xsd:string","sslThumbprint":"xsd:string"},"returns":"HostConnectInfo"},"queryDatacenterConfigOptionDescriptor":{"params":{"_this":"ManagedObjectReference"},"returns":"VirtualMachineConfigOptionDescriptor"},"ReconfigureDatacenter_Task":{"params":{"_this":"ManagedObjectReference","spec":"DatacenterConfigSpec","modify":"xsd:boolean"},"returns":"ManagedObjectReference"}}}, _self.ManagedEntity);
    _self.DatacenterCreatedEvent = merge({"type":"DatacenterCreatedEvent","properties":{"parent":_self.FolderEventArgument}}, _self.DatacenterEvent);
    _self.Datastore = merge({"type":"Datastore","properties":{"browser":_self.ManagedObjectReference,"capability":_self.DatastoreCapability,"host":_self.DatastoreHostMount,"info":_self.DatastoreInfo,"iormConfiguration":_self.StorageIORMInfo,"summary":_self.DatastoreSummary,"vm":_self.ManagedObjectReference},"methods":{"DatastoreEnterMaintenanceMode":{"params":{"_this":"ManagedObjectReference"},"returns":"StoragePlacementResult"},"DatastoreExitMaintenanceMode_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"DestroyDatastore":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RefreshDatastore":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RefreshDatastoreStorageInfo":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RenameDatastore":{"params":{"_this":"ManagedObjectReference","newName":"xsd:string"},"returns":null},"UpdateVirtualMachineFiles_Task":{"params":{"_this":"ManagedObjectReference","mountPathDatastoreMapping":"DatastoreMountPathDatastorePair"},"returns":"ManagedObjectReference"}}}, _self.ManagedEntity);
    _self.DatastoreCapacityIncreasedEvent = merge({"type":"DatastoreCapacityIncreasedEvent","properties":{"newCapacity":"xsd:long","oldCapacity":"xsd:long"}}, _self.DatastoreEvent);
    _self.DatastoreDestroyedEvent = merge({"type":"DatastoreDestroyedEvent"}, _self.DatastoreEvent);
    _self.DatastoreDiscoveredEvent = merge({"type":"DatastoreDiscoveredEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.DatastoreDuplicatedEvent = merge({"type":"DatastoreDuplicatedEvent"}, _self.DatastoreEvent);
    _self.DatastoreFileCopiedEvent = merge({"type":"DatastoreFileCopiedEvent","properties":{"sourceDatastore":_self.DatastoreEventArgument,"sourceFile":"xsd:string"}}, _self.DatastoreFileEvent);
    _self.DatastoreFileDeletedEvent = merge({"type":"DatastoreFileDeletedEvent"}, _self.DatastoreFileEvent);
    _self.DatastorePrincipalConfigured = merge({"type":"DatastorePrincipalConfigured","properties":{"datastorePrincipal":"xsd:string"}}, _self.HostEvent);
    _self.DatastoreRemovedOnHostEvent = merge({"type":"DatastoreRemovedOnHostEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.DatastoreRenamedOnHostEvent = merge({"type":"DatastoreRenamedOnHostEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.HostEvent);
    _self.DrsDisabledEvent = merge({"type":"DrsDisabledEvent"}, _self.ClusterEvent);
    _self.DrsEnabledEvent = merge({"type":"DrsEnabledEvent","properties":{"behavior":"xsd:string"}}, _self.ClusterEvent);
    _self.DrsInvocationFailedEvent = merge({"type":"DrsInvocationFailedEvent"}, _self.ClusterEvent);
    _self.DrsRecoveredFromFailureEvent = merge({"type":"DrsRecoveredFromFailureEvent"}, _self.ClusterEvent);
    _self.DrsResourceConfigureSyncedEvent = merge({"type":"DrsResourceConfigureSyncedEvent"}, _self.HostEvent);
    _self.DrsRuleComplianceEvent = merge({"type":"DrsRuleComplianceEvent"}, _self.VmEvent);
    _self.DrsRuleViolationEvent = merge({"type":"DrsRuleViolationEvent"}, _self.VmEvent);
    _self.DrsVmMigratedEvent = merge({"type":"DrsVmMigratedEvent"}, _self.VmMigratedEvent);
    _self.DrsVmPoweredOnEvent = merge({"type":"DrsVmPoweredOnEvent"}, _self.VmPoweredOnEvent);
    _self.DuplicateIpDetectedEvent = merge({"type":"DuplicateIpDetectedEvent","properties":{"duplicateIP":"xsd:string","macAddress":"xsd:string"}}, _self.HostEvent);
    _self.DvpgImportEvent = merge({"type":"DvpgImportEvent","properties":{"importType":"xsd:string"}}, _self.DVPortgroupEvent);
    _self.DvpgRestoreEvent = merge({"type":"DvpgRestoreEvent"}, _self.DVPortgroupEvent);
    _self.DVPortSetting = merge({"type":"DVPortSetting","properties":{"blocked":_self.BoolPolicy,"filterPolicy":_self.DvsFilterPolicy,"inShapingPolicy":_self.DVSTrafficShapingPolicy,"networkResourcePoolKey":_self.StringPolicy,"outShapingPolicy":_self.DVSTrafficShapingPolicy,"vendorSpecificConfig":_self.DVSVendorSpecificConfig,"vmDirectPathGen2Allowed":_self.BoolPolicy}}, _self.DynamicData);
    _self.DVPortConfigSpec = merge({"type":"DVPortConfigSpec","properties":{"configVersion":"xsd:string","description":"xsd:string","key":"xsd:string","name":"xsd:string","operation":"xsd:string","scope":_self.ManagedObjectReference,"setting":_self.DVPortSetting}}, _self.DynamicData);
    _self.DVPortgroupConfigSpec = merge({"type":"DVPortgroupConfigSpec","properties":{"autoExpand":"xsd:boolean","configVersion":"xsd:string","defaultPortConfig":_self.DVPortSetting,"description":"xsd:string","name":"xsd:string","numPorts":"xsd:int","policy":_self.DVPortgroupPolicy,"portNameFormat":"xsd:string","scope":_self.ManagedObjectReference,"type":"xsd:string","vendorSpecificConfig":_self.DistributedVirtualSwitchKeyedOpaqueBlob}}, _self.DynamicData);
    _self.DVPortgroupCreatedEvent = merge({"type":"DVPortgroupCreatedEvent"}, _self.DVPortgroupEvent);
    _self.DVPortgroupDestroyedEvent = merge({"type":"DVPortgroupDestroyedEvent"}, _self.DVPortgroupEvent);
    _self.DVPortgroupReconfiguredEvent = merge({"type":"DVPortgroupReconfiguredEvent","properties":{"configSpec":_self.DVPortgroupConfigSpec}}, _self.DVPortgroupEvent);
    _self.DVSConfigSpec = merge({"type":"DVSConfigSpec","properties":{"configVersion":"xsd:string","contact":_self.DVSContactInfo,"defaultPortConfig":_self.DVPortSetting,"defaultProxySwitchMaxNumPorts":"xsd:int","description":"xsd:string","extensionKey":"xsd:string","host":_self.DistributedVirtualSwitchHostMemberConfigSpec,"maxPorts":"xsd:int","name":"xsd:string","numStandalonePorts":"xsd:int","policy":_self.DVSPolicy,"switchIpAddress":"xsd:string","uplinkPortgroup":_self.ManagedObjectReference,"uplinkPortPolicy":_self.DVSUplinkPortPolicy,"vendorSpecificConfig":_self.DistributedVirtualSwitchKeyedOpaqueBlob}}, _self.DynamicData);
    _self.DvsCreatedEvent = merge({"type":"DvsCreatedEvent","properties":{"parent":_self.FolderEventArgument}}, _self.DvsEvent);
    _self.DVSCreateSpec = merge({"type":"DVSCreateSpec","properties":{"capability":_self.DVSCapability,"configSpec":_self.DVSConfigSpec,"productInfo":_self.DistributedVirtualSwitchProductSpec}}, _self.DynamicData);
    _self.DvsDestroyedEvent = merge({"type":"DvsDestroyedEvent"}, _self.DvsEvent);
    _self.DvsHealthStatusChangeEvent = merge({"type":"DvsHealthStatusChangeEvent","properties":{"healthResult":_self.HostMemberHealthCheckResult,"switchUuid":"xsd:string"}}, _self.HostEvent);
    _self.DVSHostLocalPortInfo = merge({"type":"DVSHostLocalPortInfo","properties":{"portKey":"xsd:string","setting":_self.DVPortSetting,"switchUuid":"xsd:string","vnic":"xsd:string"}}, _self.DynamicData);
    _self.DvsReconfiguredEvent = merge({"type":"DvsReconfiguredEvent","properties":{"configSpec":_self.DVSConfigSpec}}, _self.DvsEvent);
    _self.EnteredMaintenanceModeEvent = merge({"type":"EnteredMaintenanceModeEvent"}, _self.HostEvent);
    _self.EnteredStandbyModeEvent = merge({"type":"EnteredStandbyModeEvent"}, _self.HostEvent);
    _self.EnteringMaintenanceModeEvent = merge({"type":"EnteringMaintenanceModeEvent"}, _self.HostEvent);
    _self.EnteringStandbyModeEvent = merge({"type":"EnteringStandbyModeEvent"}, _self.HostEvent);
    _self.ErrorUpgradeEvent = merge({"type":"ErrorUpgradeEvent"}, _self.UpgradeEvent);
    _self.ExitedStandbyModeEvent = merge({"type":"ExitedStandbyModeEvent"}, _self.HostEvent);
    _self.ExitingStandbyModeEvent = merge({"type":"ExitingStandbyModeEvent"}, _self.HostEvent);
    _self.ExitMaintenanceModeEvent = merge({"type":"ExitMaintenanceModeEvent"}, _self.HostEvent);
    _self.ExitStandbyModeFailedEvent = merge({"type":"ExitStandbyModeFailedEvent"}, _self.HostEvent);
    _self.ExtendedEvent = merge({"type":"ExtendedEvent","properties":{"data":_self.ExtendedEventPair,"eventTypeId":"xsd:string","managedObject":_self.ManagedObjectReference}}, _self.GeneralEvent);
    _self.FailoverLevelRestored = merge({"type":"FailoverLevelRestored"}, _self.ClusterEvent);
    _self.Folder = merge({"type":"Folder","properties":{"childEntity":_self.ManagedObjectReference,"childType":"xsd:string[]"},"methods":{"AddStandaloneHost_Task":{"params":{"_this":"ManagedObjectReference","spec":"HostConnectSpec","compResSpec":"ComputeResourceConfigSpec","addConnected":"xsd:boolean","license":"xsd:string"},"returns":"ManagedObjectReference"},"CreateCluster":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","spec":"ClusterConfigSpec"},"returns":"ManagedObjectReference"},"CreateClusterEx":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","spec":"ClusterConfigSpecEx"},"returns":"ManagedObjectReference"},"CreateDatacenter":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"ManagedObjectReference"},"CreateDVS_Task":{"params":{"_this":"ManagedObjectReference","spec":"DVSCreateSpec"},"returns":"ManagedObjectReference"},"CreateFolder":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"ManagedObjectReference"},"CreateStoragePod":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"ManagedObjectReference"},"CreateVM_Task":{"params":{"_this":"ManagedObjectReference","config":"VirtualMachineConfigSpec","poolP":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"MoveIntoFolder_Task":{"params":{"_this":"ManagedObjectReference","list":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"RegisterVM_Task":{"params":{"_this":"ManagedObjectReference","path":"xsd:string","name":"xsd:string","asTemplate":"xsd:boolean","poolP":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"UnregisterAndDestroy_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"}}}, _self.ManagedEntity);
    _self.GhostDvsProxySwitchDetectedEvent = merge({"type":"GhostDvsProxySwitchDetectedEvent","properties":{"switchUuid":"xsd:string[]"}}, _self.HostEvent);
    _self.GhostDvsProxySwitchRemovedEvent = merge({"type":"GhostDvsProxySwitchRemovedEvent","properties":{"switchUuid":"xsd:string[]"}}, _self.HostEvent);
    _self.GlobalMessageChangedEvent = merge({"type":"GlobalMessageChangedEvent","properties":{"message":"xsd:string"}}, _self.SessionEvent);
    _self.GuestInfo = merge({"type":"GuestInfo","properties":{"appHeartbeatStatus":"xsd:string","appState":"xsd:string","disk":_self.GuestDiskInfo,"generationInfo":_self.GuestInfoNamespaceGenerationInfo,"guestFamily":"xsd:string","guestFullName":"xsd:string","guestId":"xsd:string","guestOperationsReady":"xsd:boolean","guestState":"xsd:string","hostName":"xsd:string","interactiveGuestOperationsReady":"xsd:boolean","ipAddress":"xsd:string","ipStack":_self.GuestStackInfo,"net":_self.GuestNicInfo,"screen":_self.GuestScreenInfo,"toolsRunningStatus":"xsd:string","toolsStatus":_self.VirtualMachineToolsStatus,"toolsVersion":"xsd:string","toolsVersionStatus":"xsd:string","toolsVersionStatus2":"xsd:string"}}, _self.DynamicData);
    _self.HealthSystemRuntime = merge({"type":"HealthSystemRuntime","properties":{"hardwareStatusInfo":_self.HostHardwareStatusInfo,"systemHealthInfo":_self.HostSystemHealthInfo}}, _self.DynamicData);
    _self.HostAddedEvent = merge({"type":"HostAddedEvent"}, _self.HostEvent);
    _self.HostAddFailedEvent = merge({"type":"HostAddFailedEvent","properties":{"hostname":"xsd:string"}}, _self.HostEvent);
    _self.HostAdminDisableEvent = merge({"type":"HostAdminDisableEvent"}, _self.HostEvent);
    _self.HostAdminEnableEvent = merge({"type":"HostAdminEnableEvent"}, _self.HostEvent);
    _self.HostCnxFailedAccountFailedEvent = merge({"type":"HostCnxFailedAccountFailedEvent"}, _self.HostEvent);
    _self.HostCnxFailedAlreadyManagedEvent = merge({"type":"HostCnxFailedAlreadyManagedEvent","properties":{"serverName":"xsd:string"}}, _self.HostEvent);
    _self.HostCnxFailedBadCcagentEvent = merge({"type":"HostCnxFailedBadCcagentEvent"}, _self.HostEvent);
    _self.HostCnxFailedBadUsernameEvent = merge({"type":"HostCnxFailedBadUsernameEvent"}, _self.HostEvent);
    _self.HostCnxFailedBadVersionEvent = merge({"type":"HostCnxFailedBadVersionEvent"}, _self.HostEvent);
    _self.HostCnxFailedCcagentUpgradeEvent = merge({"type":"HostCnxFailedCcagentUpgradeEvent"}, _self.HostEvent);
    _self.HostCnxFailedEvent = merge({"type":"HostCnxFailedEvent"}, _self.HostEvent);
    _self.HostCnxFailedNetworkErrorEvent = merge({"type":"HostCnxFailedNetworkErrorEvent"}, _self.HostEvent);
    _self.HostCnxFailedNoAccessEvent = merge({"type":"HostCnxFailedNoAccessEvent"}, _self.HostEvent);
    _self.HostCnxFailedNoConnectionEvent = merge({"type":"HostCnxFailedNoConnectionEvent"}, _self.HostEvent);
    _self.HostCnxFailedNoLicenseEvent = merge({"type":"HostCnxFailedNoLicenseEvent"}, _self.HostEvent);
    _self.HostCnxFailedNotFoundEvent = merge({"type":"HostCnxFailedNotFoundEvent"}, _self.HostEvent);
    _self.HostCnxFailedTimeoutEvent = merge({"type":"HostCnxFailedTimeoutEvent"}, _self.HostEvent);
    _self.HostComplianceCheckedEvent = merge({"type":"HostComplianceCheckedEvent","properties":{"profile":_self.ProfileEventArgument}}, _self.HostEvent);
    _self.HostCompliantEvent = merge({"type":"HostCompliantEvent"}, _self.HostEvent);
    _self.HostConfigAppliedEvent = merge({"type":"HostConfigAppliedEvent"}, _self.HostEvent);
    _self.HostNetworkInfo = merge({"type":"HostNetworkInfo","properties":{"atBootIpV6Enabled":"xsd:boolean","consoleIpRouteConfig":_self.HostIpRouteConfig,"consoleVnic":_self.HostVirtualNic,"dhcp":_self.HostDhcpService,"dnsConfig":_self.HostDnsConfig,"ipRouteConfig":_self.HostIpRouteConfig,"ipV6Enabled":"xsd:boolean","nat":_self.HostNatService,"netStackInstance":_self.HostNetStackInstance,"opaqueNetwork":_self.HostOpaqueNetworkInfo,"opaqueSwitch":_self.HostOpaqueSwitch,"pnic":_self.PhysicalNic,"portgroup":_self.HostPortGroup,"proxySwitch":_self.HostProxySwitch,"routeTableInfo":_self.HostIpRouteTableInfo,"vnic":_self.HostVirtualNic,"vswitch":_self.HostVirtualSwitch}}, _self.DynamicData);
    _self.HostStorageDeviceInfo = merge({"type":"HostStorageDeviceInfo","properties":{"hostBusAdapter":_self.HostHostBusAdapter,"multipathInfo":_self.HostMultipathInfo,"plugStoreTopology":_self.HostPlugStoreTopology,"scsiLun":_self.ScsiLun,"scsiTopology":_self.HostScsiTopology,"softwareInternetScsiEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostVFlashManagerVFlashConfigInfo = merge({"type":"HostVFlashManagerVFlashConfigInfo","properties":{"vFlashCacheConfigInfo":_self.HostVFlashManagerVFlashCacheConfigInfo,"vFlashResourceConfigInfo":_self.HostVFlashManagerVFlashResourceConfigInfo}}, _self.DynamicData);
    _self.HostVirtualNicManagerInfo = merge({"type":"HostVirtualNicManagerInfo","properties":{"netConfig":_self.VirtualNicManagerNetConfig}}, _self.DynamicData);
    _self.HostVMotionInfo = merge({"type":"HostVMotionInfo","properties":{"ipConfig":_self.HostIpConfig,"netConfig":_self.HostVMotionNetConfig}}, _self.DynamicData);
    _self.HostNetworkConfig = merge({"type":"HostNetworkConfig","properties":{"consoleIpRouteConfig":_self.HostIpRouteConfig,"consoleVnic":_self.HostVirtualNicConfig,"dhcp":_self.HostDhcpServiceConfig,"dnsConfig":_self.HostDnsConfig,"ipRouteConfig":_self.HostIpRouteConfig,"ipV6Enabled":"xsd:boolean","nat":_self.HostNatServiceConfig,"netStackSpec":_self.HostNetworkConfigNetStackSpec,"pnic":_self.PhysicalNicConfig,"portgroup":_self.HostPortGroupConfig,"proxySwitch":_self.HostProxySwitchConfig,"routeTableConfig":_self.HostIpRouteTableConfig,"vnic":_self.HostVirtualNicConfig,"vswitch":_self.HostVirtualSwitchConfig}}, _self.DynamicData);
    _self.HostConnectedEvent = merge({"type":"HostConnectedEvent"}, _self.HostEvent);
    _self.VirtualMachineSummary = merge({"type":"VirtualMachineSummary","properties":{"config":_self.VirtualMachineConfigSummary,"customValue":_self.CustomFieldValue,"guest":_self.VirtualMachineGuestSummary,"overallStatus":_self.ManagedEntityStatus,"quickStats":_self.VirtualMachineQuickStats,"runtime":_self.VirtualMachineRuntimeInfo,"storage":_self.VirtualMachineStorageSummary,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostConnectionLostEvent = merge({"type":"HostConnectionLostEvent"}, _self.HostEvent);
    _self.HostDasDisabledEvent = merge({"type":"HostDasDisabledEvent"}, _self.HostEvent);
    _self.HostDasDisablingEvent = merge({"type":"HostDasDisablingEvent"}, _self.HostEvent);
    _self.HostDasEnabledEvent = merge({"type":"HostDasEnabledEvent"}, _self.HostEvent);
    _self.HostDasEnablingEvent = merge({"type":"HostDasEnablingEvent"}, _self.HostEvent);
    _self.HostDasErrorEvent = merge({"type":"HostDasErrorEvent","properties":{"message":"xsd:string","reason":"xsd:string"}}, _self.HostEvent);
    _self.HostDasEvent = merge({"type":"HostDasEvent"}, _self.HostEvent);
    _self.HostDasOkEvent = merge({"type":"HostDasOkEvent"}, _self.HostEvent);
    _self.HostDisconnectedEvent = merge({"type":"HostDisconnectedEvent","properties":{"reason":"xsd:string"}}, _self.HostEvent);
    _self.HostEnableAdminFailedEvent = merge({"type":"HostEnableAdminFailedEvent","properties":{"permissions":_self.Permission}}, _self.HostEvent);
    _self.HostExtraNetworksEvent = merge({"type":"HostExtraNetworksEvent","properties":{"ips":"xsd:string"}}, _self.HostDasEvent);
    _self.HostHardwareInfo = merge({"type":"HostHardwareInfo","properties":{"biosInfo":_self.HostBIOSInfo,"cpuFeature":_self.HostCpuIdInfo,"cpuInfo":_self.HostCpuInfo,"cpuPkg":_self.HostCpuPackage,"cpuPowerManagementInfo":_self.HostCpuPowerManagementInfo,"memorySize":"xsd:long","numaInfo":_self.HostNumaInfo,"pciDevice":_self.HostPciDevice,"reliableMemoryInfo":_self.HostReliableMemoryInfo,"smcPresent":"xsd:boolean","systemInfo":_self.HostSystemInfo}}, _self.DynamicData);
    _self.HostHealthStatusSystem = {"type":"HostHealthStatusSystem","properties":{"runtime":_self.HealthSystemRuntime},"methods":{"RefreshHealthStatusSystem":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ResetSystemHealthInfo":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.HostInventoryFullEvent = merge({"type":"HostInventoryFullEvent","properties":{"capacity":"xsd:int"}}, _self.LicenseEvent);
    _self.HostIsolationIpPingFailedEvent = merge({"type":"HostIsolationIpPingFailedEvent","properties":{"isolationIp":"xsd:string"}}, _self.HostDasEvent);
    _self.HostLicenseExpiredEvent = merge({"type":"HostLicenseExpiredEvent"}, _self.LicenseEvent);
    _self.HostRuntimeInfo = merge({"type":"HostRuntimeInfo","properties":{"bootTime":"xsd:dateTime","connectionState":_self.HostSystemConnectionState,"dasHostState":_self.ClusterDasFdmHostState,"healthSystemRuntime":_self.HealthSystemRuntime,"hostMaxVirtualDiskCapacity":"xsd:long","inMaintenanceMode":"xsd:boolean","networkRuntimeInfo":_self.HostRuntimeInfoNetworkRuntimeInfo,"powerState":_self.HostSystemPowerState,"standbyMode":"xsd:string","tpmPcrValues":_self.HostTpmDigestInfo,"vFlashResourceRuntimeInfo":_self.HostVFlashManagerVFlashResourceRunTimeInfo,"vsanRuntimeInfo":_self.VsanHostRuntimeInfo}}, _self.DynamicData);
    _self.HostLocalPortCreatedEvent = merge({"type":"HostLocalPortCreatedEvent","properties":{"hostLocalPort":_self.DVSHostLocalPortInfo}}, _self.DvsEvent);
    _self.HostMissingNetworksEvent = merge({"type":"HostMissingNetworksEvent","properties":{"ips":"xsd:string"}}, _self.HostDasEvent);
    _self.HostMonitoringStateChangedEvent = merge({"type":"HostMonitoringStateChangedEvent","properties":{"state":"xsd:string"}}, _self.ClusterEvent);
    _self.HostNetworkSystem = merge({"type":"HostNetworkSystem","properties":{"capabilities":_self.HostNetCapabilities,"consoleIpRouteConfig":_self.HostIpRouteConfig,"dnsConfig":_self.HostDnsConfig,"ipRouteConfig":_self.HostIpRouteConfig,"networkConfig":_self.HostNetworkConfig,"networkInfo":_self.HostNetworkInfo,"offloadCapabilities":_self.HostNetOffloadCapabilities},"methods":{"AddPortGroup":{"params":{"_this":"ManagedObjectReference","portgrp":"HostPortGroupSpec"},"returns":null},"AddServiceConsoleVirtualNic":{"params":{"_this":"ManagedObjectReference","portgroup":"xsd:string","nic":"HostVirtualNicSpec"},"returns":"xsd:string"},"AddVirtualNic":{"params":{"_this":"ManagedObjectReference","portgroup":"xsd:string","nic":"HostVirtualNicSpec"},"returns":"xsd:string"},"AddVirtualSwitch":{"params":{"_this":"ManagedObjectReference","vswitchName":"xsd:string","spec":"HostVirtualSwitchSpec"},"returns":null},"QueryNetworkHint":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":"PhysicalNicHintInfo"},"RefreshNetworkSystem":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RemovePortGroup":{"params":{"_this":"ManagedObjectReference","pgName":"xsd:string"},"returns":null},"RemoveServiceConsoleVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":null},"RemoveVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":null},"RemoveVirtualSwitch":{"params":{"_this":"ManagedObjectReference","vswitchName":"xsd:string"},"returns":null},"RestartServiceConsoleVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":null},"UpdateConsoleIpRouteConfig":{"params":{"_this":"ManagedObjectReference","config":"HostIpRouteConfig"},"returns":null},"UpdateDnsConfig":{"params":{"_this":"ManagedObjectReference","config":"HostDnsConfig"},"returns":null},"UpdateIpRouteConfig":{"params":{"_this":"ManagedObjectReference","config":"HostIpRouteConfig"},"returns":null},"UpdateIpRouteTableConfig":{"params":{"_this":"ManagedObjectReference","config":"HostIpRouteTableConfig"},"returns":null},"UpdateNetworkConfig":{"params":{"_this":"ManagedObjectReference","config":"HostNetworkConfig","changeMode":"xsd:string"},"returns":"HostNetworkConfigResult"},"UpdatePhysicalNicLinkSpeed":{"params":{"_this":"ManagedObjectReference","device":"xsd:string","linkSpeed":"PhysicalNicLinkInfo"},"returns":null},"UpdatePortGroup":{"params":{"_this":"ManagedObjectReference","pgName":"xsd:string","portgrp":"HostPortGroupSpec"},"returns":null},"UpdateServiceConsoleVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string","nic":"HostVirtualNicSpec"},"returns":null},"UpdateVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string","nic":"HostVirtualNicSpec"},"returns":null},"UpdateVirtualSwitch":{"params":{"_this":"ManagedObjectReference","vswitchName":"xsd:string","spec":"HostVirtualSwitchSpec"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostNoAvailableNetworksEvent = merge({"type":"HostNoAvailableNetworksEvent","properties":{"ips":"xsd:string"}}, _self.HostDasEvent);
    _self.HostNoHAEnabledPortGroupsEvent = merge({"type":"HostNoHAEnabledPortGroupsEvent"}, _self.HostDasEvent);
    _self.HostNoRedundantManagementNetworkEvent = merge({"type":"HostNoRedundantManagementNetworkEvent"}, _self.HostDasEvent);
    _self.HostNotInClusterEvent = merge({"type":"HostNotInClusterEvent"}, _self.HostDasEvent);
    _self.HostOvercommittedEvent = merge({"type":"HostOvercommittedEvent"}, _self.ClusterOvercommittedEvent);
    _self.HostPrimaryAgentNotShortNameEvent = merge({"type":"HostPrimaryAgentNotShortNameEvent","properties":{"primaryAgent":"xsd:string"}}, _self.HostDasEvent);
    _self.HostShortNameInconsistentEvent = merge({"type":"HostShortNameInconsistentEvent","properties":{"shortName":"xsd:string","shortName2":"xsd:string"}}, _self.HostDasEvent);
    _self.HostStatusChangedEvent = merge({"type":"HostStatusChangedEvent"}, _self.ClusterStatusChangedEvent);
    _self.HostStorageSystem = merge({"type":"HostStorageSystem","properties":{"fileSystemVolumeInfo":_self.HostFileSystemVolumeInfo,"multipathStateInfo":_self.HostMultipathStateInfo,"storageDeviceInfo":_self.HostStorageDeviceInfo,"systemFile":"xsd:string[]"},"methods":{"AddInternetScsiSendTargets":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targets":"HostInternetScsiHbaSendTarget"},"returns":null},"AddInternetScsiStaticTargets":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targets":"HostInternetScsiHbaStaticTarget"},"returns":null},"AttachScsiLun":{"params":{"_this":"ManagedObjectReference","lunUuid":"xsd:string"},"returns":null},"AttachVmfsExtent":{"params":{"_this":"ManagedObjectReference","vmfsPath":"xsd:string","extent":"HostScsiDiskPartition"},"returns":null},"ComputeDiskPartitionInfo":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string","layout":"HostDiskPartitionLayout","partitionFormat":"xsd:string"},"returns":"HostDiskPartitionInfo"},"ComputeDiskPartitionInfoForResize":{"params":{"_this":"ManagedObjectReference","partition":"HostScsiDiskPartition","blockRange":"HostDiskPartitionBlockRange","partitionFormat":"xsd:string"},"returns":"HostDiskPartitionInfo"},"DeleteScsiLunState":{"params":{"_this":"ManagedObjectReference","lunCanonicalName":"xsd:string"},"returns":null},"DeleteVffsVolumeState":{"params":{"_this":"ManagedObjectReference","vffsUuid":"xsd:string"},"returns":null},"DeleteVmfsVolumeState":{"params":{"_this":"ManagedObjectReference","vmfsUuid":"xsd:string"},"returns":null},"DestroyVffs":{"params":{"_this":"ManagedObjectReference","vffsPath":"xsd:string"},"returns":null},"DetachScsiLun":{"params":{"_this":"ManagedObjectReference","lunUuid":"xsd:string"},"returns":null},"DisableMultipathPath":{"params":{"_this":"ManagedObjectReference","pathName":"xsd:string"},"returns":null},"DiscoverFcoeHbas":{"params":{"_this":"ManagedObjectReference","fcoeSpec":"FcoeConfigFcoeSpecification"},"returns":null},"EnableMultipathPath":{"params":{"_this":"ManagedObjectReference","pathName":"xsd:string"},"returns":null},"ExpandVmfsExtent":{"params":{"_this":"ManagedObjectReference","vmfsPath":"xsd:string","extent":"HostScsiDiskPartition"},"returns":null},"ExtendVffs":{"params":{"_this":"ManagedObjectReference","vffsPath":"xsd:string","devicePath":"xsd:string","spec":"HostDiskPartitionSpec"},"returns":null},"FormatVffs":{"params":{"_this":"ManagedObjectReference","createSpec":"HostVffsSpec"},"returns":"HostVffsVolume"},"FormatVmfs":{"params":{"_this":"ManagedObjectReference","createSpec":"HostVmfsSpec"},"returns":"HostVmfsVolume"},"MarkForRemoval":{"params":{"_this":"ManagedObjectReference","hbaName":"xsd:string","remove":"xsd:boolean"},"returns":null},"MountVffsVolume":{"params":{"_this":"ManagedObjectReference","vffsUuid":"xsd:string"},"returns":null},"MountVmfsVolume":{"params":{"_this":"ManagedObjectReference","vmfsUuid":"xsd:string"},"returns":null},"QueryAvailableSsds":{"params":{"_this":"ManagedObjectReference","vffsPath":"xsd:string"},"returns":"HostScsiDisk"},"QueryPathSelectionPolicyOptions":{"params":{"_this":"ManagedObjectReference"},"returns":"HostPathSelectionPolicyOption"},"QueryStorageArrayTypePolicyOptions":{"params":{"_this":"ManagedObjectReference"},"returns":"HostStorageArrayTypePolicyOption"},"QueryUnresolvedVmfsVolume":{"params":{"_this":"ManagedObjectReference"},"returns":"HostUnresolvedVmfsVolume"},"RefreshStorageSystem":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RemoveInternetScsiSendTargets":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targets":"HostInternetScsiHbaSendTarget"},"returns":null},"RemoveInternetScsiStaticTargets":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targets":"HostInternetScsiHbaStaticTarget"},"returns":null},"RescanAllHba":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RescanHba":{"params":{"_this":"ManagedObjectReference","hbaDevice":"xsd:string"},"returns":null},"RescanVffs":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RescanVmfs":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ResolveMultipleUnresolvedVmfsVolumes":{"params":{"_this":"ManagedObjectReference","resolutionSpec":"HostUnresolvedVmfsResolutionSpec"},"returns":"HostUnresolvedVmfsResolutionResult"},"ResolveMultipleUnresolvedVmfsVolumesEx_Task":{"params":{"_this":"ManagedObjectReference","resolutionSpec":"HostUnresolvedVmfsResolutionSpec"},"returns":"ManagedObjectReference"},"RetrieveDiskPartitionInfo":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string"},"returns":"HostDiskPartitionInfo"},"SetMultipathLunPolicy":{"params":{"_this":"ManagedObjectReference","lunId":"xsd:string","policy":"HostMultipathInfoLogicalUnitPolicy"},"returns":null},"UnmountForceMountedVmfsVolume":{"params":{"_this":"ManagedObjectReference","vmfsUuid":"xsd:string"},"returns":null},"UnmountVffsVolume":{"params":{"_this":"ManagedObjectReference","vffsUuid":"xsd:string"},"returns":null},"UnmountVmfsVolume":{"params":{"_this":"ManagedObjectReference","vmfsUuid":"xsd:string"},"returns":null},"UpdateDiskPartitions":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string","spec":"HostDiskPartitionSpec"},"returns":null},"UpdateInternetScsiAdvancedOptions":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targetSet":"HostInternetScsiHbaTargetSet","options":"HostInternetScsiHbaParamValue"},"returns":null},"UpdateInternetScsiAlias":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","iScsiAlias":"xsd:string"},"returns":null},"UpdateInternetScsiAuthenticationProperties":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","authenticationProperties":"HostInternetScsiHbaAuthenticationProperties","targetSet":"HostInternetScsiHbaTargetSet"},"returns":null},"UpdateInternetScsiDigestProperties":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targetSet":"HostInternetScsiHbaTargetSet","digestProperties":"HostInternetScsiHbaDigestProperties"},"returns":null},"UpdateInternetScsiDiscoveryProperties":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","discoveryProperties":"HostInternetScsiHbaDiscoveryProperties"},"returns":null},"UpdateInternetScsiIPProperties":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","ipProperties":"HostInternetScsiHbaIPProperties"},"returns":null},"UpdateInternetScsiName":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","iScsiName":"xsd:string"},"returns":null},"UpdateScsiLunDisplayName":{"params":{"_this":"ManagedObjectReference","lunUuid":"xsd:string","displayName":"xsd:string"},"returns":null},"UpdateSoftwareInternetScsiEnabled":{"params":{"_this":"ManagedObjectReference","enabled":"xsd:boolean"},"returns":null},"UpgradeVmfs":{"params":{"_this":"ManagedObjectReference","vmfsPath":"xsd:string"},"returns":null},"UpgradeVmLayout":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostVFlashManager = {"type":"HostVFlashManager","properties":{"vFlashConfigInfo":_self.HostVFlashManagerVFlashConfigInfo},"methods":{"ConfigureVFlashResourceEx_Task":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string"},"returns":"ManagedObjectReference"},"HostConfigureVFlashResource":{"params":{"_this":"ManagedObjectReference","spec":"HostVFlashManagerVFlashResourceConfigSpec"},"returns":null},"HostConfigVFlashCache":{"params":{"_this":"ManagedObjectReference","spec":"HostVFlashManagerVFlashCacheConfigSpec"},"returns":null},"HostGetVFlashModuleDefaultConfig":{"params":{"_this":"ManagedObjectReference","vFlashModule":"xsd:string"},"returns":"VirtualDiskVFlashCacheConfigInfo"},"HostRemoveVFlashResource":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.HostVirtualNicManager = merge({"type":"HostVirtualNicManager","properties":{"info":_self.HostVirtualNicManagerInfo},"methods":{"DeselectVnicForNicType":{"params":{"_this":"ManagedObjectReference","nicType":"xsd:string","device":"xsd:string"},"returns":null},"QueryNetConfig":{"params":{"_this":"ManagedObjectReference","nicType":"xsd:string"},"returns":"VirtualNicManagerNetConfig"},"SelectVnicForNicType":{"params":{"_this":"ManagedObjectReference","nicType":"xsd:string","device":"xsd:string"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostVsanSystem = {"type":"HostVsanSystem","properties":{"config":_self.VsanHostConfigInfo},"methods":{"AddDisks_Task":{"params":{"_this":"ManagedObjectReference","disk":"HostScsiDisk"},"returns":"ManagedObjectReference"},"InitializeDisks_Task":{"params":{"_this":"ManagedObjectReference","mapping":"VsanHostDiskMapping"},"returns":"ManagedObjectReference"},"QueryDisksForVsan":{"params":{"_this":"ManagedObjectReference","canonicalName":"xsd:string"},"returns":"VsanHostDiskResult"},"QueryHostStatus":{"params":{"_this":"ManagedObjectReference"},"returns":"VsanHostClusterStatus"},"RemoveDisk_Task":{"params":{"_this":"ManagedObjectReference","disk":"HostScsiDisk"},"returns":"ManagedObjectReference"},"RemoveDiskMapping_Task":{"params":{"_this":"ManagedObjectReference","mapping":"VsanHostDiskMapping"},"returns":"ManagedObjectReference"},"UpdateVsan_Task":{"params":{"_this":"ManagedObjectReference","config":"VsanHostConfigInfo"},"returns":"ManagedObjectReference"}}};
    _self.IncorrectHostInformationEvent = merge({"type":"IncorrectHostInformationEvent"}, _self.LicenseEvent);
    _self.InfoUpgradeEvent = merge({"type":"InfoUpgradeEvent"}, _self.UpgradeEvent);
    _self.InsufficientFailoverResourcesEvent = merge({"type":"InsufficientFailoverResourcesEvent"}, _self.ClusterEvent);
    _self.InvalidEditionEvent = merge({"type":"InvalidEditionEvent","properties":{"feature":"xsd:string"}}, _self.LicenseEvent);
    _self.MonthlyByDayTaskScheduler = merge({"type":"MonthlyByDayTaskScheduler","properties":{"day":"xsd:int"}}, _self.MonthlyTaskScheduler);
    _self.MonthlyByWeekdayTaskScheduler = merge({"type":"MonthlyByWeekdayTaskScheduler","properties":{"offset":_self.WeekOfMonth,"weekday":_self.DayOfWeek}}, _self.MonthlyTaskScheduler);
    _self.MtuMatchEvent = merge({"type":"MtuMatchEvent"}, _self.DvsHealthStatusChangeEvent);
    _self.MtuMismatchEvent = merge({"type":"MtuMismatchEvent"}, _self.DvsHealthStatusChangeEvent);
    _self.NoAccessUserEvent = merge({"type":"NoAccessUserEvent","properties":{"ipAddress":"xsd:string"}}, _self.SessionEvent);
    _self.NoMaintenanceModeDrsRecommendationForVM = merge({"type":"NoMaintenanceModeDrsRecommendationForVM"}, _self.VmEvent);
    _self.NotEnoughResourcesToStartVmEvent = merge({"type":"NotEnoughResourcesToStartVmEvent"}, _self.VmEvent);
    _self.PermissionEvent = merge({"type":"PermissionEvent","properties":{"entity":_self.ManagedEntityEventArgument,"group":"xsd:boolean","principal":"xsd:string"}}, _self.AuthorizationEvent);
    _self.PermissionRemovedEvent = merge({"type":"PermissionRemovedEvent"}, _self.PermissionEvent);
    _self.PermissionUpdatedEvent = merge({"type":"PermissionUpdatedEvent","properties":{"propagate":"xsd:boolean","role":_self.RoleEventArgument}}, _self.PermissionEvent);
    _self.Profile = {"type":"Profile","properties":{"complianceStatus":"xsd:string","config":_self.ProfileConfigInfo,"createdTime":"xsd:dateTime","description":_self.ProfileDescription,"entity":_self.ManagedObjectReference,"modifiedTime":"xsd:dateTime","name":"xsd:string"},"methods":{"AssociateProfile":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":null},"CheckProfileCompliance_Task":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"DestroyProfile":{"params":{"_this":"ManagedObjectReference"},"returns":null},"DissociateProfile":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":null},"ExportProfile":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"RetrieveDescription":{"params":{"_this":"ManagedObjectReference"},"returns":"ProfileDescription"}}};
    _self.ProfileAssociatedEvent = merge({"type":"ProfileAssociatedEvent"}, _self.ProfileEvent);
    _self.ProfileChangedEvent = merge({"type":"ProfileChangedEvent"}, _self.ProfileEvent);
    _self.ProfileCreatedEvent = merge({"type":"ProfileCreatedEvent"}, _self.ProfileEvent);
    _self.ProfileDissociatedEvent = merge({"type":"ProfileDissociatedEvent"}, _self.ProfileEvent);
    _self.ResourcePoolCreatedEvent = merge({"type":"ResourcePoolCreatedEvent","properties":{"parent":_self.ResourcePoolEventArgument}}, _self.ResourcePoolEvent);
    _self.ResourcePoolDestroyedEvent = merge({"type":"ResourcePoolDestroyedEvent"}, _self.ResourcePoolEvent);
    _self.RoleEvent = merge({"type":"RoleEvent","properties":{"role":_self.RoleEventArgument}}, _self.AuthorizationEvent);
    _self.RoleRemovedEvent = merge({"type":"RoleRemovedEvent"}, _self.RoleEvent);
    _self.RoleUpdatedEvent = merge({"type":"RoleUpdatedEvent","properties":{"privilegeList":"xsd:string[]"}}, _self.RoleEvent);
    _self.ScheduledTaskCompletedEvent = merge({"type":"ScheduledTaskCompletedEvent"}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskCreatedEvent = merge({"type":"ScheduledTaskCreatedEvent"}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskEmailCompletedEvent = merge({"type":"ScheduledTaskEmailCompletedEvent","properties":{"to":"xsd:string"}}, _self.ScheduledTaskEvent);
    _self.ServerStartedSessionEvent = merge({"type":"ServerStartedSessionEvent"}, _self.SessionEvent);
    _self.TeamingMatchEvent = merge({"type":"TeamingMatchEvent"}, _self.DvsHealthStatusChangeEvent);
    _self.TeamingMisMatchEvent = merge({"type":"TeamingMisMatchEvent"}, _self.DvsHealthStatusChangeEvent);
    _self.TemplateBeingUpgradedEvent = merge({"type":"TemplateBeingUpgradedEvent"}, _self.TemplateUpgradeEvent);
    _self.TemplateUpgradedEvent = merge({"type":"TemplateUpgradedEvent"}, _self.TemplateUpgradeEvent);
    _self.UplinkPortMtuNotSupportEvent = merge({"type":"UplinkPortMtuNotSupportEvent"}, _self.DvsHealthStatusChangeEvent);
    _self.UplinkPortMtuSupportEvent = merge({"type":"UplinkPortMtuSupportEvent"}, _self.DvsHealthStatusChangeEvent);
    _self.UplinkPortVlanTrunkedEvent = merge({"type":"UplinkPortVlanTrunkedEvent"}, _self.DvsHealthStatusChangeEvent);
    _self.UplinkPortVlanUntrunkedEvent = merge({"type":"UplinkPortVlanUntrunkedEvent"}, _self.DvsHealthStatusChangeEvent);
    _self.VmAcquiredMksTicketEvent = merge({"type":"VmAcquiredMksTicketEvent"}, _self.VmEvent);
    _self.VmAcquiredTicketEvent = merge({"type":"VmAcquiredTicketEvent","properties":{"ticketType":"xsd:string"}}, _self.VmEvent);
    _self.VmAutoRenameEvent = merge({"type":"VmAutoRenameEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.VmEvent);
    _self.VmBeingDeployedEvent = merge({"type":"VmBeingDeployedEvent","properties":{"srcTemplate":_self.VmEventArgument}}, _self.VmEvent);
    _self.VmBeingHotMigratedEvent = merge({"type":"VmBeingHotMigratedEvent","properties":{"destDatacenter":_self.DatacenterEventArgument,"destDatastore":_self.DatastoreEventArgument,"destHost":_self.HostEventArgument}}, _self.VmEvent);
    _self.VmBeingMigratedEvent = merge({"type":"VmBeingMigratedEvent","properties":{"destDatacenter":_self.DatacenterEventArgument,"destDatastore":_self.DatastoreEventArgument,"destHost":_self.HostEventArgument}}, _self.VmEvent);
    _self.VmBeingRelocatedEvent = merge({"type":"VmBeingRelocatedEvent","properties":{"destDatacenter":_self.DatacenterEventArgument,"destDatastore":_self.DatastoreEventArgument,"destHost":_self.HostEventArgument}}, _self.VmRelocateSpecEvent);
    _self.VmCloneEvent = merge({"type":"VmCloneEvent"}, _self.VmEvent);
    _self.VmConfigMissingEvent = merge({"type":"VmConfigMissingEvent"}, _self.VmEvent);
    _self.VmConnectedEvent = merge({"type":"VmConnectedEvent"}, _self.VmEvent);
    _self.VmCreatedEvent = merge({"type":"VmCreatedEvent"}, _self.VmEvent);
    _self.VmDasBeingResetEvent = merge({"type":"VmDasBeingResetEvent","properties":{"reason":"xsd:string"}}, _self.VmEvent);
    _self.VmDasBeingResetWithScreenshotEvent = merge({"type":"VmDasBeingResetWithScreenshotEvent","properties":{"screenshotFilePath":"xsd:string"}}, _self.VmDasBeingResetEvent);
    _self.VmDasResetFailedEvent = merge({"type":"VmDasResetFailedEvent"}, _self.VmEvent);
    _self.VmDasUpdateErrorEvent = merge({"type":"VmDasUpdateErrorEvent"}, _self.VmEvent);
    _self.VmDasUpdateOkEvent = merge({"type":"VmDasUpdateOkEvent"}, _self.VmEvent);
    _self.VmDateRolledBackEvent = merge({"type":"VmDateRolledBackEvent"}, _self.VmEvent);
    _self.VmDeployedEvent = merge({"type":"VmDeployedEvent","properties":{"srcTemplate":_self.VmEventArgument}}, _self.VmEvent);
    _self.VmDisconnectedEvent = merge({"type":"VmDisconnectedEvent"}, _self.VmEvent);
    _self.VmDiscoveredEvent = merge({"type":"VmDiscoveredEvent"}, _self.VmEvent);
    _self.VmEmigratingEvent = merge({"type":"VmEmigratingEvent"}, _self.VmEvent);
    _self.VmEndRecordingEvent = merge({"type":"VmEndRecordingEvent"}, _self.VmEvent);
    _self.VmEndReplayingEvent = merge({"type":"VmEndReplayingEvent"}, _self.VmEvent);
    _self.VmHealthMonitoringStateChangedEvent = merge({"type":"VmHealthMonitoringStateChangedEvent","properties":{"state":"xsd:string"}}, _self.ClusterEvent);
    _self.VmRelocatedEvent = merge({"type":"VmRelocatedEvent","properties":{"sourceDatacenter":_self.DatacenterEventArgument,"sourceDatastore":_self.DatastoreEventArgument,"sourceHost":_self.HostEventArgument}}, _self.VmRelocateSpecEvent);
    _self.VMwareDVSConfigSpec = merge({"type":"VMwareDVSConfigSpec","properties":{"ipfixConfig":_self.VMwareIpfixConfig,"lacpApiVersion":"xsd:string","linkDiscoveryProtocolConfig":_self.LinkDiscoveryProtocolConfig,"maxMtu":"xsd:int","pvlanConfigSpec":_self.VMwareDVSPvlanConfigSpec,"vspanConfigSpec":_self.VMwareDVSVspanConfigSpec}}, _self.DVSConfigSpec);
    _self.VMwareDVSPortSetting = merge({"type":"VMwareDVSPortSetting","properties":{"ipfixEnabled":_self.BoolPolicy,"lacpPolicy":_self.VMwareUplinkLacpPolicy,"qosTag":_self.IntPolicy,"securityPolicy":_self.DVSSecurityPolicy,"txUplink":_self.BoolPolicy,"uplinkTeamingPolicy":_self.VmwareUplinkPortTeamingPolicy,"vlan":_self.VmwareDistributedVirtualSwitchVlanSpec}}, _self.DVPortSetting);
    _self.AlarmAcknowledgedEvent = merge({"type":"AlarmAcknowledgedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"source":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmActionTriggeredEvent = merge({"type":"AlarmActionTriggeredEvent","properties":{"entity":_self.ManagedEntityEventArgument,"source":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmClearedEvent = merge({"type":"AlarmClearedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"from":"xsd:string","source":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmCreatedEvent = merge({"type":"AlarmCreatedEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmEmailCompletedEvent = merge({"type":"AlarmEmailCompletedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"to":"xsd:string"}}, _self.AlarmEvent);
    _self.ClusterComplianceCheckedEvent = merge({"type":"ClusterComplianceCheckedEvent","properties":{"profile":_self.ProfileEventArgument}}, _self.ClusterEvent);
    _self.ClusterConfigInfoEx = merge({"type":"ClusterConfigInfoEx","properties":{"dasConfig":_self.ClusterDasConfigInfo,"dasVmConfig":_self.ClusterDasVmConfigInfo,"dpmConfigInfo":_self.ClusterDpmConfigInfo,"dpmHostConfig":_self.ClusterDpmHostConfigInfo,"drsConfig":_self.ClusterDrsConfigInfo,"drsVmConfig":_self.ClusterDrsVmConfigInfo,"group":_self.ClusterGroupInfo,"rule":_self.ClusterRuleInfo,"vsanConfigInfo":_self.VsanClusterConfigInfo,"vsanHostConfig":_self.VsanHostConfigInfo}}, _self.ComputeResourceConfigInfo);
    _self.ClusterCreatedEvent = merge({"type":"ClusterCreatedEvent","properties":{"parent":_self.FolderEventArgument}}, _self.ClusterEvent);
    _self.ClusterDestroyedEvent = merge({"type":"ClusterDestroyedEvent"}, _self.ClusterEvent);
    _self.ClusterProfile = merge({"type":"ClusterProfile","methods":{"UpdateClusterProfile":{"params":{"_this":"ManagedObjectReference","config":"ClusterProfileConfigSpec"},"returns":null}}}, _self.Profile);
    _self.VirtualMachineUsbInfo = merge({"type":"VirtualMachineUsbInfo","properties":{"description":"xsd:string","family":"xsd:string[]","physicalPath":"xsd:string","product":"xsd:int","speed":"xsd:string[]","summary":_self.VirtualMachineSummary,"vendor":"xsd:int"}}, _self.VirtualMachineTargetInfo);
    _self.CustomFieldDefEvent = merge({"type":"CustomFieldDefEvent","properties":{"fieldKey":"xsd:int","name":"xsd:string"}}, _self.CustomFieldEvent);
    _self.CustomFieldDefRemovedEvent = merge({"type":"CustomFieldDefRemovedEvent"}, _self.CustomFieldDefEvent);
    _self.CustomFieldDefRenamedEvent = merge({"type":"CustomFieldDefRenamedEvent","properties":{"newName":"xsd:string"}}, _self.CustomFieldDefEvent);
    _self.DVPortConfigInfo = merge({"type":"DVPortConfigInfo","properties":{"configVersion":"xsd:string","description":"xsd:string","name":"xsd:string","scope":_self.ManagedObjectReference,"setting":_self.DVPortSetting}}, _self.DynamicData);
    _self.DVPortgroupConfigInfo = merge({"type":"DVPortgroupConfigInfo","properties":{"autoExpand":"xsd:boolean","configVersion":"xsd:string","defaultPortConfig":_self.DVPortSetting,"description":"xsd:string","distributedVirtualSwitch":_self.ManagedObjectReference,"key":"xsd:string","name":"xsd:string","numPorts":"xsd:int","policy":_self.DVPortgroupPolicy,"portNameFormat":"xsd:string","scope":_self.ManagedObjectReference,"type":"xsd:string","vendorSpecificConfig":_self.DistributedVirtualSwitchKeyedOpaqueBlob}}, _self.DynamicData);
    _self.DVSConfigInfo = merge({"type":"DVSConfigInfo","properties":{"configVersion":"xsd:string","contact":_self.DVSContactInfo,"createTime":"xsd:dateTime","defaultPortConfig":_self.DVPortSetting,"defaultProxySwitchMaxNumPorts":"xsd:int","description":"xsd:string","extensionKey":"xsd:string","healthCheckConfig":_self.DVSHealthCheckConfig,"host":_self.DistributedVirtualSwitchHostMember,"maxPorts":"xsd:int","name":"xsd:string","networkResourceManagementEnabled":"xsd:boolean","numPorts":"xsd:int","numStandalonePorts":"xsd:int","policy":_self.DVSPolicy,"productInfo":_self.DistributedVirtualSwitchProductSpec,"switchIpAddress":"xsd:string","targetInfo":_self.DistributedVirtualSwitchProductSpec,"uplinkPortgroup":_self.ManagedObjectReference,"uplinkPortPolicy":_self.DVSUplinkPortPolicy,"uuid":"xsd:string","vendorSpecificConfig":_self.DistributedVirtualSwitchKeyedOpaqueBlob}}, _self.DynamicData);
    _self.DrsEnteredStandbyModeEvent = merge({"type":"DrsEnteredStandbyModeEvent"}, _self.EnteredStandbyModeEvent);
    _self.DrsEnteringStandbyModeEvent = merge({"type":"DrsEnteringStandbyModeEvent"}, _self.EnteringStandbyModeEvent);
    _self.DrsExitedStandbyModeEvent = merge({"type":"DrsExitedStandbyModeEvent"}, _self.ExitedStandbyModeEvent);
    _self.DrsExitingStandbyModeEvent = merge({"type":"DrsExitingStandbyModeEvent"}, _self.ExitingStandbyModeEvent);
    _self.DrsExitStandbyModeFailedEvent = merge({"type":"DrsExitStandbyModeFailedEvent"}, _self.ExitStandbyModeFailedEvent);
    _self.HostConfigSpec = merge({"type":"HostConfigSpec","properties":{"activeDirectory":_self.HostActiveDirectory,"datastorePrincipal":"xsd:string","datastorePrincipalPasswd":"xsd:string","datetime":_self.HostDateTimeConfig,"firewall":_self.HostFirewallConfig,"genericConfig":_self.KeyAnyValue,"license":_self.HostLicenseSpec,"memory":_self.HostMemorySpec,"nasDatastore":_self.HostNasVolumeConfig,"network":_self.HostNetworkConfig,"nicTypeSelection":_self.HostVirtualNicManagerNicTypeSelection,"option":_self.OptionValue,"security":_self.HostSecuritySpec,"service":_self.HostServiceConfig,"storageDevice":_self.HostStorageDeviceInfo,"userAccount":_self.HostAccountSpec,"usergroupAccount":_self.HostAccountSpec}}, _self.DynamicData);
    _self.HostListSummary = merge({"type":"HostListSummary","properties":{"config":_self.HostConfigSummary,"currentEVCModeKey":"xsd:string","customValue":_self.CustomFieldValue,"hardware":_self.HostHardwareSummary,"host":_self.ManagedObjectReference,"managementServerIp":"xsd:string","maxEVCModeKey":"xsd:string","overallStatus":_self.ManagedEntityStatus,"quickStats":_self.HostListSummaryQuickStats,"rebootRequired":"xsd:boolean","runtime":_self.HostRuntimeInfo}}, _self.DynamicData);
    _self.HostProfile = merge({"type":"HostProfile","properties":{"referenceHost":_self.ManagedObjectReference},"methods":{"ExecuteHostProfile":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","deferredParam":"ProfileDeferredPolicyOptionParameter"},"returns":"ProfileExecuteResult"},"UpdateHostProfile":{"params":{"_this":"ManagedObjectReference","config":"HostProfileConfigSpec"},"returns":null},"UpdateReferenceHost":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":null}}}, _self.Profile);
    _self.HostProfileManagerConfigTaskList = merge({"type":"HostProfileManagerConfigTaskList","properties":{"configSpec":_self.HostConfigSpec,"taskDescription":_self.LocalizableMessage}}, _self.DynamicData);
    _self.PermissionAddedEvent = merge({"type":"PermissionAddedEvent","properties":{"propagate":"xsd:boolean","role":_self.RoleEventArgument}}, _self.PermissionEvent);
    _self.ProfileExecuteResult = merge({"type":"ProfileExecuteResult","properties":{"configSpec":_self.HostConfigSpec,"error":_self.ProfileExecuteError,"inapplicablePath":"xsd:string[]","requireInput":_self.ProfileDeferredPolicyOptionParameter,"status":"xsd:string"}}, _self.DynamicData);
    _self.RoleAddedEvent = merge({"type":"RoleAddedEvent","properties":{"privilegeList":"xsd:string[]"}}, _self.RoleEvent);
    _self.VmBeingClonedEvent = merge({"type":"VmBeingClonedEvent","properties":{"destFolder":_self.FolderEventArgument,"destHost":_self.HostEventArgument,"destName":"xsd:string"}}, _self.VmCloneEvent);
    _self.VmBeingClonedNoFolderEvent = merge({"type":"VmBeingClonedNoFolderEvent","properties":{"destHost":_self.HostEventArgument,"destName":"xsd:string"}}, _self.VmCloneEvent);
    _self.VmClonedEvent = merge({"type":"VmClonedEvent","properties":{"sourceVm":_self.VmEventArgument}}, _self.VmCloneEvent);
    _self.VMwareDVSConfigInfo = merge({"type":"VMwareDVSConfigInfo","properties":{"ipfixConfig":_self.VMwareIpfixConfig,"lacpApiVersion":"xsd:string","lacpGroupConfig":_self.VMwareDvsLacpGroupConfig,"linkDiscoveryProtocolConfig":_self.LinkDiscoveryProtocolConfig,"maxMtu":"xsd:int","pvlanConfig":_self.VMwareDVSPvlanMapEntry,"vspanSession":_self.VMwareVspanSession}}, _self.DVSConfigInfo);
    _self.ConfigTarget = merge({"type":"ConfigTarget","properties":{"autoVmotion":"xsd:boolean","cdRom":_self.VirtualMachineCdromInfo,"datastore":_self.VirtualMachineDatastoreInfo,"distributedVirtualPortgroup":_self.DistributedVirtualPortgroupInfo,"distributedVirtualSwitch":_self.DistributedVirtualSwitchInfo,"floppy":_self.VirtualMachineFloppyInfo,"ideDisk":_self.VirtualMachineIdeDiskDeviceInfo,"legacyNetworkInfo":_self.VirtualMachineLegacyNetworkSwitchInfo,"maxMemMBOptimalPerf":"xsd:int","network":_self.VirtualMachineNetworkInfo,"numCpuCores":"xsd:int","numCpus":"xsd:int","numNumaNodes":"xsd:int","opaqueNetwork":_self.OpaqueNetworkTargetInfo,"parallel":_self.VirtualMachineParallelInfo,"pciPassthrough":_self.VirtualMachinePciPassthroughInfo,"resourcePool":_self.ResourcePoolRuntimeInfo,"scsiDisk":_self.VirtualMachineScsiDiskDeviceInfo,"scsiPassthrough":_self.VirtualMachineScsiPassthroughInfo,"serial":_self.VirtualMachineSerialInfo,"smcPresent":"xsd:boolean","sound":_self.VirtualMachineSoundInfo,"sriov":_self.VirtualMachineSriovInfo,"usb":_self.VirtualMachineUsbInfo,"vFlashModule":_self.VirtualMachineVFlashModuleInfo}}, _self.DynamicData);
    _self.CustomFieldDefAddedEvent = merge({"type":"CustomFieldDefAddedEvent"}, _self.CustomFieldDefEvent);
    _self.DistributedVirtualPort = merge({"type":"DistributedVirtualPort","properties":{"config":_self.DVPortConfigInfo,"conflict":"xsd:boolean","conflictPortKey":"xsd:string","connectee":_self.DistributedVirtualSwitchPortConnectee,"connectionCookie":"xsd:int","dvsUuid":"xsd:string","hostLocalPort":"xsd:boolean","key":"xsd:string","lastStatusChange":"xsd:dateTime","portgroupKey":"xsd:string","proxyHost":_self.ManagedObjectReference,"state":_self.DVPortState}}, _self.DynamicData);
    _self.DistributedVirtualPortgroup = merge({"type":"DistributedVirtualPortgroup","properties":{"config":_self.DVPortgroupConfigInfo,"key":"xsd:string","portKeys":"xsd:string[]"},"methods":{"DVPortgroupRollback_Task":{"params":{"_this":"ManagedObjectReference","entityBackup":"EntityBackupConfig"},"returns":"ManagedObjectReference"},"ReconfigureDVPortgroup_Task":{"params":{"_this":"ManagedObjectReference","spec":"DVPortgroupConfigSpec"},"returns":"ManagedObjectReference"}}}, _self.Network);
    _self.DistributedVirtualSwitch = merge({"type":"DistributedVirtualSwitch","properties":{"capability":_self.DVSCapability,"config":_self.DVSConfigInfo,"networkResourcePool":_self.DVSNetworkResourcePool,"portgroup":_self.ManagedObjectReference,"runtime":_self.DVSRuntimeInfo,"summary":_self.DVSSummary,"uuid":"xsd:string"},"methods":{"AddDVPortgroup_Task":{"params":{"_this":"ManagedObjectReference","spec":"DVPortgroupConfigSpec"},"returns":"ManagedObjectReference"},"AddNetworkResourcePool":{"params":{"_this":"ManagedObjectReference","configSpec":"DVSNetworkResourcePoolConfigSpec"},"returns":null},"CreateDVPortgroup_Task":{"params":{"_this":"ManagedObjectReference","spec":"DVPortgroupConfigSpec"},"returns":"ManagedObjectReference"},"DVSRollback_Task":{"params":{"_this":"ManagedObjectReference","entityBackup":"EntityBackupConfig"},"returns":"ManagedObjectReference"},"EnableNetworkResourceManagement":{"params":{"_this":"ManagedObjectReference","enable":"xsd:boolean"},"returns":null},"FetchDVPortKeys":{"params":{"_this":"ManagedObjectReference","criteria":"DistributedVirtualSwitchPortCriteria"},"returns":"xsd:string"},"FetchDVPorts":{"params":{"_this":"ManagedObjectReference","criteria":"DistributedVirtualSwitchPortCriteria"},"returns":"DistributedVirtualPort"},"LookupDvPortGroup":{"params":{"_this":"ManagedObjectReference","portgroupKey":"xsd:string"},"returns":"ManagedObjectReference"},"MergeDvs_Task":{"params":{"_this":"ManagedObjectReference","dvsP":"ManagedObjectReferencetoaDistributedVirtualSwitch"},"returns":"ManagedObjectReference"},"MoveDVPort_Task":{"params":{"_this":"ManagedObjectReference","portKey":"xsd:string","destinationPortgroupKey":"xsd:string"},"returns":"ManagedObjectReference"},"PerformDvsProductSpecOperation_Task":{"params":{"_this":"ManagedObjectReference","operation":"xsd:string","productSpec":"DistributedVirtualSwitchProductSpec"},"returns":"ManagedObjectReference"},"QueryUsedVlanIdInDvs":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:int"},"ReconfigureDVPort_Task":{"params":{"_this":"ManagedObjectReference","port":"DVPortConfigSpec"},"returns":"ManagedObjectReference"},"ReconfigureDvs_Task":{"params":{"_this":"ManagedObjectReference","spec":"DVSConfigSpec"},"returns":"ManagedObjectReference"},"RectifyDvsHost_Task":{"params":{"_this":"ManagedObjectReference","hosts":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"RefreshDVPortState":{"params":{"_this":"ManagedObjectReference","portKeys":"xsd:string"},"returns":null},"RemoveNetworkResourcePool":{"params":{"_this":"ManagedObjectReference","key":"xsd:string"},"returns":null},"UpdateDvsCapability":{"params":{"_this":"ManagedObjectReference","capability":"DVSCapability"},"returns":null},"UpdateDVSHealthCheckConfig_Task":{"params":{"_this":"ManagedObjectReference","healthCheckConfig":"DVSHealthCheckConfig"},"returns":"ManagedObjectReference"},"UpdateNetworkResourcePool":{"params":{"_this":"ManagedObjectReference","configSpec":"DVSNetworkResourcePoolConfigSpec"},"returns":null}}}, _self.ManagedEntity);
    _self.HostConnectInfo = merge({"type":"HostConnectInfo","properties":{"clusterSupported":"xsd:boolean","datastore":_self.HostDatastoreConnectInfo,"host":_self.HostListSummary,"inDasCluster":"xsd:boolean","license":_self.HostLicenseConnectInfo,"network":_self.HostConnectInfoNetworkInfo,"serverIp":"xsd:string","vimAccountNameRequired":"xsd:boolean","vm":_self.VirtualMachineSummary}}, _self.DynamicData);
    _self.VmwareDistributedVirtualSwitch = merge({"type":"VmwareDistributedVirtualSwitch","methods":{"UpdateDVSLacpGroupConfig_Task":{"params":{"_this":"ManagedObjectReference","lacpGroupSpec":"VMwareDvsLacpGroupSpec"},"returns":"ManagedObjectReference"}}}, _self.DistributedVirtualSwitch);
    _self.LocalizedMethodFault = merge({"type":"LocalizedMethodFault","properties":{"fault":_self.MethodFault,"localizedMessage":"xsd:string"}}, _self.DynamicData);
    _self.AlarmEmailFailedEvent = merge({"type":"AlarmEmailFailedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"reason":_self.LocalizedMethodFault,"to":"xsd:string"}}, _self.AlarmEvent);
    _self.AlarmScriptFailedEvent = merge({"type":"AlarmScriptFailedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"reason":_self.LocalizedMethodFault,"script":"xsd:string"}}, _self.AlarmEvent);
    _self.AlarmSnmpFailedEvent = merge({"type":"AlarmSnmpFailedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"reason":_self.LocalizedMethodFault}}, _self.AlarmEvent);
    _self.CheckResult = merge({"type":"CheckResult","properties":{"error":_self.LocalizedMethodFault,"host":_self.ManagedObjectReference,"vm":_self.ManagedObjectReference,"warning":_self.LocalizedMethodFault}}, _self.DynamicData);
    _self.ClusterDrsFaultsFaultsByVm = merge({"type":"ClusterDrsFaultsFaultsByVm","properties":{"fault":_self.LocalizedMethodFault,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterDrsFaultsFaultsByVirtualDisk = merge({"type":"ClusterDrsFaultsFaultsByVirtualDisk","properties":{"disk":_self.VirtualDiskId}}, _self.ClusterDrsFaultsFaultsByVm);
    _self.ClusterNotAttemptedVmInfo = merge({"type":"ClusterNotAttemptedVmInfo","properties":{"fault":_self.LocalizedMethodFault,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterPowerOnVmResult = merge({"type":"ClusterPowerOnVmResult","properties":{"attempted":_self.ClusterAttemptedVmInfo,"notAttempted":_self.ClusterNotAttemptedVmInfo,"recommendations":_self.ClusterRecommendation}}, _self.DynamicData);
    _self.DistributedVirtualSwitchManagerCompatibilityResult = merge({"type":"DistributedVirtualSwitchManagerCompatibilityResult","properties":{"error":_self.LocalizedMethodFault,"host":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ImportOperationBulkFaultFaultOnImport = merge({"type":"ImportOperationBulkFaultFaultOnImport","properties":{"entityType":"xsd:string","fault":_self.LocalizedMethodFault,"key":"xsd:string"}}, _self.DynamicData);
    _self.DrsResourceConfigureFailedEvent = merge({"type":"DrsResourceConfigureFailedEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.HostEvent);
    _self.DvsApplyOperationFaultFaultOnObject = merge({"type":"DvsApplyOperationFaultFaultOnObject","properties":{"fault":_self.LocalizedMethodFault,"objectId":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.DvsOperationBulkFaultFaultOnHost = merge({"type":"DvsOperationBulkFaultFaultOnHost","properties":{"fault":_self.LocalizedMethodFault,"host":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.EventEx = merge({"type":"EventEx","properties":{"arguments":_self.KeyAnyValue,"eventTypeId":"xsd:string","fault":_self.LocalizedMethodFault,"message":"xsd:string","objectId":"xsd:string","objectName":"xsd:string","objectType":"xsd:string","severity":"xsd:string"}}, _self.Event);
    _self.FaultToleranceSecondaryOpResult = merge({"type":"FaultToleranceSecondaryOpResult","properties":{"powerOnAttempted":"xsd:boolean","powerOnResult":_self.ClusterPowerOnVmResult,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HbrManagerReplicationVmInfo = merge({"type":"HbrManagerReplicationVmInfo","properties":{"imageId":"xsd:string","lastError":_self.LocalizedMethodFault,"progressInfo":_self.ReplicationVmProgressInfo,"state":"xsd:string"}}, _self.DynamicData);
    _self.HostDiskConfigurationResult = merge({"type":"HostDiskConfigurationResult","properties":{"devicePath":"xsd:string","fault":_self.LocalizedMethodFault,"success":"xsd:boolean"}}, _self.DynamicData);
    _self.HostVmfsRescanResult = merge({"type":"HostVmfsRescanResult","properties":{"fault":_self.LocalizedMethodFault,"host":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostSyncFailedEvent = merge({"type":"HostSyncFailedEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.HostEvent);
    _self.HostUnresolvedVmfsResolutionResult = merge({"type":"HostUnresolvedVmfsResolutionResult","properties":{"fault":_self.LocalizedMethodFault,"spec":_self.HostUnresolvedVmfsResolutionSpec,"vmfs":_self.HostVmfsVolume}}, _self.DynamicData);
    _self.HostVFlashResourceConfigurationResult = merge({"type":"HostVFlashResourceConfigurationResult","properties":{"devicePath":"xsd:string[]","diskConfigurationResult":_self.HostDiskConfigurationResult,"vffs":_self.HostVffsVolume}}, _self.DynamicData);
    _self.HttpNfcLease = {"type":"HttpNfcLease","properties":{"error":_self.LocalizedMethodFault,"info":_self.HttpNfcLeaseInfo,"initializeProgress":"xsd:int","state":_self.HttpNfcLeaseState},"methods":{"HttpNfcLeaseAbort":{"params":{"_this":"ManagedObjectReference","fault":"MethodFault"},"returns":null},"HttpNfcLeaseComplete":{"params":{"_this":"ManagedObjectReference"},"returns":null},"HttpNfcLeaseGetManifest":{"params":{"_this":"ManagedObjectReference"},"returns":"HttpNfcLeaseManifestEntry"},"HttpNfcLeaseProgress":{"params":{"_this":"ManagedObjectReference","percent":"xsd:int"},"returns":null}}};
    _self.IscsiStatus = merge({"type":"IscsiStatus","properties":{"reason":_self.LocalizedMethodFault}}, _self.DynamicData);
    _self.IscsiPortInfo = merge({"type":"IscsiPortInfo","properties":{"complianceStatus":_self.IscsiStatus,"pathStatus":"xsd:string","pnic":_self.PhysicalNic,"pnicDevice":"xsd:string","portgroupKey":"xsd:string","portgroupName":"xsd:string","portKey":"xsd:string","switchName":"xsd:string","switchUuid":"xsd:string","vnic":_self.HostVirtualNic,"vnicDevice":"xsd:string"}}, _self.DynamicData);
    _self.MethodFault = {"type":"MethodFault","properties":{"dynamicProperty":_self.DynamicProperty,"dynamicType":"xsd:string","faultCause":_self.LocalizedMethodFault,"faultMessage":_self.LocalizableMessage}};
    _self.MigrationEvent = merge({"type":"MigrationEvent","properties":{"fault":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.MigrationHostErrorEvent = merge({"type":"MigrationHostErrorEvent","properties":{"dstHost":_self.HostEventArgument}}, _self.MigrationEvent);
    _self.MigrationHostWarningEvent = merge({"type":"MigrationHostWarningEvent","properties":{"dstHost":_self.HostEventArgument}}, _self.MigrationEvent);
    _self.MigrationResourceErrorEvent = merge({"type":"MigrationResourceErrorEvent","properties":{"dstHost":_self.HostEventArgument,"dstPool":_self.ResourcePoolEventArgument}}, _self.MigrationEvent);
    _self.MigrationResourceWarningEvent = merge({"type":"MigrationResourceWarningEvent","properties":{"dstHost":_self.HostEventArgument,"dstPool":_self.ResourcePoolEventArgument}}, _self.MigrationEvent);
    _self.MigrationWarningEvent = merge({"type":"MigrationWarningEvent"}, _self.MigrationEvent);
    _self.MissingObject = merge({"type":"MissingObject","properties":{"fault":_self.LocalizedMethodFault,"obj":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.MissingProperty = merge({"type":"MissingProperty","properties":{"fault":_self.LocalizedMethodFault,"path":"xsd:string"}}, _self.DynamicData);
    _self.ObjectContent = merge({"type":"ObjectContent","properties":{"missingSet":_self.MissingProperty,"obj":_self.ManagedObjectReference,"propSet":_self.DynamicProperty}}, _self.DynamicData);
    _self.ObjectUpdate = merge({"type":"ObjectUpdate","properties":{"changeSet":_self.PropertyChange,"kind":_self.ObjectUpdateKind,"missingSet":_self.MissingProperty,"obj":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.OvfCreateDescriptorResult = merge({"type":"OvfCreateDescriptorResult","properties":{"error":_self.LocalizedMethodFault,"includeImageFiles":"xsd:boolean","ovfDescriptor":"xsd:string","warning":_self.LocalizedMethodFault}}, _self.DynamicData);
    _self.OvfValidateHostResult = merge({"type":"OvfValidateHostResult","properties":{"downloadSize":"xsd:long","error":_self.LocalizedMethodFault,"flatDeploymentSize":"xsd:long","sparseDeploymentSize":"xsd:long","supportedDiskProvisioning":"xsd:string[]","warning":_self.LocalizedMethodFault}}, _self.DynamicData);
    _self.PropertyFilterUpdate = merge({"type":"PropertyFilterUpdate","properties":{"filter":_self.ManagedObjectReference,"missingSet":_self.MissingObject,"objectSet":_self.ObjectUpdate}}, _self.DynamicData);
    _self.RetrieveResult = merge({"type":"RetrieveResult","properties":{"objects":_self.ObjectContent,"token":"xsd:string"}}, _self.DynamicData);
    _self.RuntimeFault = merge({"type":"RuntimeFault"}, _self.MethodFault);
    _self.ScheduledHardwareUpgradeInfo = merge({"type":"ScheduledHardwareUpgradeInfo","properties":{"fault":_self.LocalizedMethodFault,"scheduledHardwareUpgradeStatus":"xsd:string","upgradePolicy":"xsd:string","versionKey":"xsd:string"}}, _self.DynamicData);
    _self.ScheduledTaskInfo = merge({"type":"ScheduledTaskInfo","properties":{"activeTask":_self.ManagedObjectReference,"entity":_self.ManagedObjectReference,"error":_self.LocalizedMethodFault,"lastModifiedTime":"xsd:dateTime","lastModifiedUser":"xsd:string","nextRunTime":"xsd:dateTime","prevRunTime":"xsd:dateTime","progress":"xsd:int","result":"xsd:anyType","scheduledTask":_self.ManagedObjectReference,"state":_self.TaskInfoState,"taskObject":_self.ManagedObjectReference}}, _self.ScheduledTaskSpec);
    _self.ScheduledTaskEmailFailedEvent = merge({"type":"ScheduledTaskEmailFailedEvent","properties":{"reason":_self.LocalizedMethodFault,"to":"xsd:string"}}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskFailedEvent = merge({"type":"ScheduledTaskFailedEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.ScheduledTaskEvent);
    _self.SecurityError = merge({"type":"SecurityError"}, _self.RuntimeFault);
    _self.SystemError = merge({"type":"SystemError","properties":{"reason":"xsd:string"}}, _self.RuntimeFault);
    _self.TaskInfo = merge({"type":"TaskInfo","properties":{"cancelable":"xsd:boolean","cancelled":"xsd:boolean","changeTag":"xsd:string","completeTime":"xsd:dateTime","description":_self.LocalizableMessage,"descriptionId":"xsd:string","entity":_self.ManagedObjectReference,"entityName":"xsd:string","error":_self.LocalizedMethodFault,"eventChainId":"xsd:int","key":"xsd:string","locked":_self.ManagedObjectReference,"name":"xsd:string","parentTaskKey":"xsd:string","progress":"xsd:int","queueTime":"xsd:dateTime","reason":_self.TaskReason,"result":"xsd:anyType","rootTaskKey":"xsd:string","startTime":"xsd:dateTime","state":_self.TaskInfoState,"task":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.TaskEvent = merge({"type":"TaskEvent","properties":{"info":_self.TaskInfo}}, _self.Event);
    _self.TaskHistoryCollector = merge({"type":"TaskHistoryCollector","properties":{"latestPage":_self.TaskInfo},"methods":{"ReadNextTasks":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":"TaskInfo"},"ReadPreviousTasks":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":"TaskInfo"}}}, _self.HistoryCollector);
    _self.TaskTimeoutEvent = merge({"type":"TaskTimeoutEvent"}, _self.TaskEvent);
    _self.TemplateUpgradeFailedEvent = merge({"type":"TemplateUpgradeFailedEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.TemplateUpgradeEvent);
    _self.ThirdPartyLicenseAssignmentFailed = merge({"type":"ThirdPartyLicenseAssignmentFailed","properties":{"host":_self.ManagedObjectReference,"module":"xsd:string","reason":"xsd:string"}}, _self.RuntimeFault);
    _self.ToolsConfigInfoToolsLastInstallInfo = merge({"type":"ToolsConfigInfoToolsLastInstallInfo","properties":{"counter":"xsd:int","fault":_self.LocalizedMethodFault}}, _self.DynamicData);
    _self.UnexpectedFault = merge({"type":"UnexpectedFault","properties":{"fault":_self.LocalizedMethodFault,"faultName":"xsd:string"}}, _self.RuntimeFault);
    _self.UpdateSet = merge({"type":"UpdateSet","properties":{"filterSet":_self.PropertyFilterUpdate,"truncated":"xsd:boolean","version":"xsd:string"}}, _self.DynamicData);
    _self.UpdateVirtualMachineFilesResultFailedVmFileInfo = merge({"type":"UpdateVirtualMachineFilesResultFailedVmFileInfo","properties":{"fault":_self.LocalizedMethodFault,"vmFile":"xsd:string"}}, _self.DynamicData);
    _self.VAppOperationInProgress = merge({"type":"VAppOperationInProgress"}, _self.RuntimeFault);
    _self.VimFault = merge({"type":"VimFault"}, _self.MethodFault);
    _self.VirtualMachineMetadataManagerVmMetadataResult = merge({"type":"VirtualMachineMetadataManagerVmMetadataResult","properties":{"error":_self.LocalizedMethodFault,"vmMetadata":_self.VirtualMachineMetadataManagerVmMetadata}}, _self.DynamicData);
    _self.VmCloneFailedEvent = merge({"type":"VmCloneFailedEvent","properties":{"destFolder":_self.FolderEventArgument,"destHost":_self.HostEventArgument,"destName":"xsd:string","reason":_self.LocalizedMethodFault}}, _self.VmCloneEvent);
    _self.VmConfigFault = merge({"type":"VmConfigFault"}, _self.VimFault);
    _self.VmConfigIncompatibleForFaultTolerance = merge({"type":"VmConfigIncompatibleForFaultTolerance","properties":{"fault":_self.LocalizedMethodFault}}, _self.VmConfigFault);
    _self.VmConfigIncompatibleForRecordReplay = merge({"type":"VmConfigIncompatibleForRecordReplay","properties":{"fault":_self.LocalizedMethodFault}}, _self.VmConfigFault);
    _self.VmDeployFailedEvent = merge({"type":"VmDeployFailedEvent","properties":{"destDatastore":_self.EntityEventArgument,"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmDiskFailedEvent = merge({"type":"VmDiskFailedEvent","properties":{"disk":"xsd:string","reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedMigrateEvent = merge({"type":"VmFailedMigrateEvent","properties":{"destDatacenter":_self.DatacenterEventArgument,"destDatastore":_self.DatastoreEventArgument,"destHost":_self.HostEventArgument,"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedRelayoutEvent = merge({"type":"VmFailedRelayoutEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToPowerOffEvent = merge({"type":"VmFailedToPowerOffEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToPowerOnEvent = merge({"type":"VmFailedToPowerOnEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToRebootGuestEvent = merge({"type":"VmFailedToRebootGuestEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToResetEvent = merge({"type":"VmFailedToResetEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToShutdownGuestEvent = merge({"type":"VmFailedToShutdownGuestEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToStandbyGuestEvent = merge({"type":"VmFailedToStandbyGuestEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToSuspendEvent = merge({"type":"VmFailedToSuspendEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailoverFailed = merge({"type":"VmFailoverFailed","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFaultToleranceIssue = merge({"type":"VmFaultToleranceIssue"}, _self.VimFault);
    _self.VmFaultToleranceOpIssuesList = merge({"type":"VmFaultToleranceOpIssuesList","properties":{"errors":_self.LocalizedMethodFault,"warnings":_self.LocalizedMethodFault}}, _self.VmFaultToleranceIssue);
    _self.VmHostAffinityRuleViolation = merge({"type":"VmHostAffinityRuleViolation","properties":{"hostName":"xsd:string","vmName":"xsd:string"}}, _self.VmConfigFault);
    _self.VmMetadataManagerFault = merge({"type":"VmMetadataManagerFault"}, _self.VimFault);
    _self.VmMonitorIncompatibleForFaultTolerance = merge({"type":"VmMonitorIncompatibleForFaultTolerance"}, _self.VimFault);
    _self.VmRelocateFailedEvent = merge({"type":"VmRelocateFailedEvent","properties":{"destDatacenter":_self.DatacenterEventArgument,"destDatastore":_self.DatastoreEventArgument,"destHost":_self.HostEventArgument,"reason":_self.LocalizedMethodFault}}, _self.VmRelocateSpecEvent);
    _self.VmSecondaryDisabledBySystemEvent = merge({"type":"VmSecondaryDisabledBySystemEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmToolsUpgradeFault = merge({"type":"VmToolsUpgradeFault"}, _self.VimFault);
    _self.VmValidateMaxDevice = merge({"type":"VmValidateMaxDevice","properties":{"count":"xsd:int","device":"xsd:string","max":"xsd:int"}}, _self.VimFault);
    _self.VsanFault = merge({"type":"VsanFault"}, _self.VimFault);
    _self.VsanHostDiskResult = merge({"type":"VsanHostDiskResult","properties":{"disk":_self.HostScsiDisk,"error":_self.LocalizedMethodFault,"state":"xsd:string","vsanUuid":"xsd:string"}}, _self.DynamicData);
    _self.WipeDiskFault = merge({"type":"WipeDiskFault"}, _self.VimFault);
    _self.ActiveDirectoryFault = merge({"type":"ActiveDirectoryFault","properties":{"errorCode":"xsd:int"}}, _self.VimFault);
    _self.AlreadyExists = merge({"type":"AlreadyExists","properties":{"name":"xsd:string"}}, _self.VimFault);
    _self.AlreadyUpgraded = merge({"type":"AlreadyUpgraded"}, _self.VimFault);
    _self.AnswerFileUpdateFailed = merge({"type":"AnswerFileUpdateFailed","properties":{"failure":_self.AnswerFileUpdateFailure}}, _self.VimFault);
    _self.AuthMinimumAdminPermission = merge({"type":"AuthMinimumAdminPermission"}, _self.VimFault);
    _self.CannotAccessLocalSource = merge({"type":"CannotAccessLocalSource"}, _self.VimFault);
    _self.CannotAccessVmComponent = merge({"type":"CannotAccessVmComponent"}, _self.VmConfigFault);
    _self.CannotAccessVmConfig = merge({"type":"CannotAccessVmConfig","properties":{"reason":_self.LocalizedMethodFault}}, _self.CannotAccessVmComponent);
    _self.CannotAccessVmDevice = merge({"type":"CannotAccessVmDevice","properties":{"backing":"xsd:string","connected":"xsd:boolean","device":"xsd:string"}}, _self.CannotAccessVmComponent);
    _self.CannotAccessVmDisk = merge({"type":"CannotAccessVmDisk","properties":{"fault":_self.LocalizedMethodFault}}, _self.CannotAccessVmDevice);
    _self.CannotChangeDrsBehaviorForFtSecondary = merge({"type":"CannotChangeDrsBehaviorForFtSecondary","properties":{"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.CannotChangeHaSettingsForFtSecondary = merge({"type":"CannotChangeHaSettingsForFtSecondary","properties":{"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.CannotChangeVsanClusterUuid = merge({"type":"CannotChangeVsanClusterUuid"}, _self.VsanFault);
    _self.CannotChangeVsanNodeUuid = merge({"type":"CannotChangeVsanNodeUuid"}, _self.VsanFault);
    _self.CannotDisableDrsOnClustersWithVApps = merge({"type":"CannotDisableDrsOnClustersWithVApps"}, _self.RuntimeFault);
    _self.CannotDisableSnapshot = merge({"type":"CannotDisableSnapshot"}, _self.VmConfigFault);
    _self.CannotDisconnectHostWithFaultToleranceVm = merge({"type":"CannotDisconnectHostWithFaultToleranceVm","properties":{"hostName":"xsd:string"}}, _self.VimFault);
    _self.CannotMoveFaultToleranceVm = merge({"type":"CannotMoveFaultToleranceVm","properties":{"moveType":"xsd:string","vmName":"xsd:string"}}, _self.VimFault);
    _self.CannotMoveHostWithFaultToleranceVm = merge({"type":"CannotMoveHostWithFaultToleranceVm"}, _self.VimFault);
    _self.CannotMoveVsanEnabledHost = merge({"type":"CannotMoveVsanEnabledHost"}, _self.VsanFault);
    _self.CannotPlaceWithoutPrerequisiteMoves = merge({"type":"CannotPlaceWithoutPrerequisiteMoves"}, _self.VimFault);
    _self.CannotReconfigureVsanWhenHaEnabled = merge({"type":"CannotReconfigureVsanWhenHaEnabled"}, _self.VsanFault);
    _self.CannotUseNetwork = merge({"type":"CannotUseNetwork","properties":{"backing":"xsd:string","connected":"xsd:boolean","device":"xsd:string","reason":"xsd:string"}}, _self.VmConfigFault);
    _self.ClusterDrsFaults = merge({"type":"ClusterDrsFaults","properties":{"faultsByVm":_self.ClusterDrsFaultsFaultsByVm,"reason":"xsd:string"}}, _self.DynamicData);
    _self.ClusterEnterMaintenanceResult = merge({"type":"ClusterEnterMaintenanceResult","properties":{"fault":_self.ClusterDrsFaults,"recommendations":_self.ClusterRecommendation}}, _self.DynamicData);
    _self.ConcurrentAccess = merge({"type":"ConcurrentAccess"}, _self.VimFault);
    _self.ConflictingDatastoreFound = merge({"type":"ConflictingDatastoreFound","properties":{"name":"xsd:string","url":"xsd:string"}}, _self.RuntimeFault);
    _self.CpuHotPlugNotSupported = merge({"type":"CpuHotPlugNotSupported"}, _self.VmConfigFault);
    _self.CustomizationFault = merge({"type":"CustomizationFault"}, _self.VimFault);
    _self.CustomizationPending = merge({"type":"CustomizationPending"}, _self.CustomizationFault);
    _self.DasConfigFault = merge({"type":"DasConfigFault","properties":{"event":_self.Event,"output":"xsd:string","reason":"xsd:string"}}, _self.VimFault);
    _self.DatabaseError = merge({"type":"DatabaseError"}, _self.RuntimeFault);
    _self.DeltaDiskFormatNotSupported = merge({"type":"DeltaDiskFormatNotSupported","properties":{"datastore":_self.ManagedObjectReference,"deltaDiskFormat":"xsd:string"}}, _self.VmConfigFault);
    _self.DestinationVsanDisabled = merge({"type":"DestinationVsanDisabled","properties":{"destinationCluster":"xsd:string"}}, _self.CannotMoveVsanEnabledHost);
    _self.DisallowedChangeByService = merge({"type":"DisallowedChangeByService","properties":{"disallowedChange":"xsd:string","serviceName":"xsd:string"}}, _self.RuntimeFault);
    _self.DisallowedOperationOnFailoverHost = merge({"type":"DisallowedOperationOnFailoverHost","properties":{"host":_self.ManagedObjectReference,"hostname":"xsd:string"}}, _self.RuntimeFault);
    _self.DistributedVirtualSwitchManagerImportResult = merge({"type":"DistributedVirtualSwitchManagerImportResult","properties":{"distributedVirtualPortgroup":_self.ManagedObjectReference,"distributedVirtualSwitch":_self.ManagedObjectReference,"importFault":_self.ImportOperationBulkFaultFaultOnImport}}, _self.DynamicData);
    _self.DomainNotFound = merge({"type":"DomainNotFound","properties":{"domainName":"xsd:string"}}, _self.ActiveDirectoryFault);
    _self.DrsDisabledOnVm = merge({"type":"DrsDisabledOnVm"}, _self.VimFault);
    _self.DuplicateName = merge({"type":"DuplicateName","properties":{"name":"xsd:string","object":_self.ManagedObjectReference}}, _self.VimFault);
    _self.DuplicateVsanNetworkInterface = merge({"type":"DuplicateVsanNetworkInterface","properties":{"device":"xsd:string"}}, _self.VsanFault);
    _self.DvsFault = merge({"type":"DvsFault"}, _self.VimFault);
    _self.DvsNotAuthorized = merge({"type":"DvsNotAuthorized","properties":{"dvsExtensionKey":"xsd:string","sessionExtensionKey":"xsd:string"}}, _self.DvsFault);
    _self.DvsOperationBulkFault = merge({"type":"DvsOperationBulkFault","properties":{"hostFault":_self.DvsOperationBulkFaultFaultOnHost}}, _self.DvsFault);
    _self.DvsScopeViolated = merge({"type":"DvsScopeViolated","properties":{"entity":_self.ManagedObjectReference,"scope":_self.ManagedObjectReference}}, _self.DvsFault);
    _self.EightHostLimitViolated = merge({"type":"EightHostLimitViolated"}, _self.VmConfigFault);
    _self.ExtendedFault = merge({"type":"ExtendedFault","properties":{"data":_self.KeyValue,"faultTypeId":"xsd:string"}}, _self.VimFault);
    _self.FailToLockFaultToleranceVMs = merge({"type":"FailToLockFaultToleranceVMs","properties":{"alreadyLockedVm":_self.ManagedObjectReference,"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.RuntimeFault);
    _self.FaultToleranceCannotEditMem = merge({"type":"FaultToleranceCannotEditMem","properties":{"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.VmConfigFault);
    _self.FaultToleranceNotLicensed = merge({"type":"FaultToleranceNotLicensed","properties":{"hostName":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.FaultTolerancePrimaryPowerOnNotAttempted = merge({"type":"FaultTolerancePrimaryPowerOnNotAttempted","properties":{"primaryVm":_self.ManagedObjectReference,"secondaryVm":_self.ManagedObjectReference}}, _self.VmFaultToleranceIssue);
    _self.FaultToleranceVmNotDasProtected = merge({"type":"FaultToleranceVmNotDasProtected","properties":{"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.VimFault);
    _self.FcoeFault = merge({"type":"FcoeFault"}, _self.VimFault);
    _self.FcoeFaultPnicHasNoPortSet = merge({"type":"FcoeFaultPnicHasNoPortSet","properties":{"nicDevice":"xsd:string"}}, _self.FcoeFault);
    _self.FileFault = merge({"type":"FileFault","properties":{"file":"xsd:string"}}, _self.VimFault);
    _self.FileLocked = merge({"type":"FileLocked"}, _self.FileFault);
    _self.FileNameTooLong = merge({"type":"FileNameTooLong"}, _self.FileFault);
    _self.FileNotFound = merge({"type":"FileNotFound"}, _self.FileFault);
    _self.FileNotWritable = merge({"type":"FileNotWritable"}, _self.FileFault);
    _self.FileTooLarge = merge({"type":"FileTooLarge","properties":{"datastore":"xsd:string","fileSize":"xsd:long","maxFileSize":"xsd:long"}}, _self.FileFault);
    _self.FtIssuesOnHost = merge({"type":"FtIssuesOnHost","properties":{"errors":_self.LocalizedMethodFault,"host":_self.ManagedObjectReference,"hostName":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.GenericDrsFault = merge({"type":"GenericDrsFault","properties":{"hostFaults":_self.LocalizedMethodFault}}, _self.VimFault);
    _self.GenericVmConfigFault = merge({"type":"GenericVmConfigFault","properties":{"reason":"xsd:string"}}, _self.VmConfigFault);
    _self.GuestOperationsFault = merge({"type":"GuestOperationsFault"}, _self.VimFault);
    _self.GuestOperationsUnavailable = merge({"type":"GuestOperationsUnavailable"}, _self.GuestOperationsFault);
    _self.GuestPermissionDenied = merge({"type":"GuestPermissionDenied"}, _self.GuestOperationsFault);
    _self.GuestProcessNotFound = merge({"type":"GuestProcessNotFound","properties":{"pid":"xsd:long"}}, _self.GuestOperationsFault);
    _self.HostCommunication = merge({"type":"HostCommunication"}, _self.RuntimeFault);
    _self.HostConfigFault = merge({"type":"HostConfigFault"}, _self.VimFault);
    _self.HostConnectFault = merge({"type":"HostConnectFault"}, _self.VimFault);
    _self.HostIncompatibleForFaultTolerance = merge({"type":"HostIncompatibleForFaultTolerance","properties":{"hostName":"xsd:string","reason":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.HostIncompatibleForRecordReplay = merge({"type":"HostIncompatibleForRecordReplay","properties":{"hostName":"xsd:string","reason":"xsd:string"}}, _self.VimFault);
    _self.HostInDomain = merge({"type":"HostInDomain"}, _self.HostConfigFault);
    _self.HostNotConnected = merge({"type":"HostNotConnected"}, _self.HostCommunication);
    _self.HostNotReachable = merge({"type":"HostNotReachable"}, _self.HostCommunication);
    _self.HostPowerOpFailed = merge({"type":"HostPowerOpFailed"}, _self.VimFault);
    _self.HostResignatureRescanResult = merge({"type":"HostResignatureRescanResult","properties":{"rescan":_self.HostVmfsRescanResult,"result":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ImportHostAddFailure = merge({"type":"ImportHostAddFailure","properties":{"hostIp":"xsd:string[]"}}, _self.DvsFault);
    _self.ImportOperationBulkFault = merge({"type":"ImportOperationBulkFault","properties":{"importFaults":_self.ImportOperationBulkFaultFaultOnImport}}, _self.DvsFault);
    _self.InaccessibleVFlashSource = merge({"type":"InaccessibleVFlashSource","properties":{"hostName":"xsd:string"}}, _self.VimFault);
    _self.IncompatibleHostForFtSecondary = merge({"type":"IncompatibleHostForFtSecondary","properties":{"error":_self.LocalizedMethodFault,"host":_self.ManagedObjectReference}}, _self.VmFaultToleranceIssue);
    _self.IncorrectFileType = merge({"type":"IncorrectFileType"}, _self.FileFault);
    _self.InsufficientResourcesFault = merge({"type":"InsufficientResourcesFault"}, _self.VimFault);
    _self.InsufficientStandbyResource = merge({"type":"InsufficientStandbyResource"}, _self.InsufficientResourcesFault);
    _self.InsufficientStorageSpace = merge({"type":"InsufficientStorageSpace"}, _self.InsufficientResourcesFault);
    _self.InsufficientVFlashResourcesFault = merge({"type":"InsufficientVFlashResourcesFault","properties":{"freeSpace":"xsd:long","requestedSpace":"xsd:long"}}, _self.InsufficientResourcesFault);
    _self.InvalidAffinitySettingFault = merge({"type":"InvalidAffinitySettingFault"}, _self.VimFault);
    _self.InvalidArgument = merge({"type":"InvalidArgument","properties":{"invalidProperty":"xsd:string"}}, _self.RuntimeFault);
    _self.InvalidBmcRole = merge({"type":"InvalidBmcRole"}, _self.VimFault);
    _self.InvalidCAMServer = merge({"type":"InvalidCAMServer","properties":{"camServer":"xsd:string"}}, _self.ActiveDirectoryFault);
    _self.InvalidCollectorVersion = merge({"type":"InvalidCollectorVersion"}, _self.MethodFault);
    _self.InvalidDasConfigArgument = merge({"type":"InvalidDasConfigArgument","properties":{"clusterName":"xsd:string","entry":"xsd:string"}}, _self.InvalidArgument);
    _self.InvalidDasRestartPriorityForFtVm = merge({"type":"InvalidDasRestartPriorityForFtVm","properties":{"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.InvalidArgument);
    _self.InvalidDatastore = merge({"type":"InvalidDatastore","properties":{"datastore":_self.ManagedObjectReference,"name":"xsd:string"}}, _self.VimFault);
    _self.InvalidDatastorePath = merge({"type":"InvalidDatastorePath","properties":{"datastorePath":"xsd:string"}}, _self.InvalidDatastore);
    _self.InvalidDrsBehaviorForFtVm = merge({"type":"InvalidDrsBehaviorForFtVm","properties":{"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.InvalidArgument);
    _self.InvalidEvent = merge({"type":"InvalidEvent"}, _self.VimFault);
    _self.InvalidFolder = merge({"type":"InvalidFolder","properties":{"target":_self.ManagedObjectReference}}, _self.VimFault);
    _self.InvalidFormat = merge({"type":"InvalidFormat"}, _self.VmConfigFault);
    _self.InvalidGuestLogin = merge({"type":"InvalidGuestLogin"}, _self.GuestOperationsFault);
    _self.InvalidHostName = merge({"type":"InvalidHostName"}, _self.HostConfigFault);
    _self.InvalidIndexArgument = merge({"type":"InvalidIndexArgument","properties":{"key":"xsd:string"}}, _self.InvalidArgument);
    _self.InvalidIpfixConfig = merge({"type":"InvalidIpfixConfig","properties":{"property":"xsd:string"}}, _self.DvsFault);
    _self.InvalidIpmiLoginInfo = merge({"type":"InvalidIpmiLoginInfo"}, _self.VimFault);
    _self.InvalidIpmiMacAddress = merge({"type":"InvalidIpmiMacAddress","properties":{"observedMacAddress":"xsd:string","userProvidedMacAddress":"xsd:string"}}, _self.VimFault);
    _self.InvalidLicense = merge({"type":"InvalidLicense","properties":{"licenseContent":"xsd:string"}}, _self.VimFault);
    _self.InvalidLocale = merge({"type":"InvalidLocale"}, _self.VimFault);
    _self.InvalidLogin = merge({"type":"InvalidLogin"}, _self.VimFault);
    _self.InvalidName = merge({"type":"InvalidName","properties":{"entity":_self.ManagedObjectReference,"name":"xsd:string"}}, _self.VimFault);
    _self.InvalidOperationOnSecondaryVm = merge({"type":"InvalidOperationOnSecondaryVm","properties":{"instanceUuid":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.InvalidPrivilege = merge({"type":"InvalidPrivilege","properties":{"privilege":"xsd:string"}}, _self.VimFault);
    _self.InvalidProfileReferenceHost = merge({"type":"InvalidProfileReferenceHost","properties":{"host":_self.ManagedObjectReference,"profile":_self.ManagedObjectReference,"reason":"xsd:string"}}, _self.RuntimeFault);
    _self.InvalidProperty = merge({"type":"InvalidProperty","properties":{"name":"xsd:string"}}, _self.MethodFault);
    _self.InvalidRequest = merge({"type":"InvalidRequest"}, _self.RuntimeFault);
    _self.InvalidResourcePoolStructureFault = merge({"type":"InvalidResourcePoolStructureFault"}, _self.InsufficientResourcesFault);
    _self.InvalidSnapshotFormat = merge({"type":"InvalidSnapshotFormat"}, _self.InvalidFormat);
    _self.InvalidState = merge({"type":"InvalidState"}, _self.VimFault);
    _self.InvalidType = merge({"type":"InvalidType","properties":{"argument":"xsd:string"}}, _self.InvalidRequest);
    _self.InvalidVmConfig = merge({"type":"InvalidVmConfig","properties":{"property":"xsd:string"}}, _self.VmConfigFault);
    _self.IORMNotSupportedHostOnDatastore = merge({"type":"IORMNotSupportedHostOnDatastore","properties":{"datastore":_self.ManagedObjectReference,"datastoreName":"xsd:string","host":_self.ManagedObjectReference}}, _self.VimFault);
    _self.IpHostnameGeneratorError = merge({"type":"IpHostnameGeneratorError"}, _self.CustomizationFault);
    _self.IscsiFault = merge({"type":"IscsiFault"}, _self.VimFault);
    _self.IscsiFaultInvalidVnic = merge({"type":"IscsiFaultInvalidVnic","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultPnicInUse = merge({"type":"IscsiFaultPnicInUse","properties":{"pnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicAlreadyBound = merge({"type":"IscsiFaultVnicAlreadyBound","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicHasActivePaths = merge({"type":"IscsiFaultVnicHasActivePaths","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicHasMultipleUplinks = merge({"type":"IscsiFaultVnicHasMultipleUplinks","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicHasNoUplinks = merge({"type":"IscsiFaultVnicHasNoUplinks","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicHasWrongUplink = merge({"type":"IscsiFaultVnicHasWrongUplink","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicInUse = merge({"type":"IscsiFaultVnicInUse","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicIsLastPath = merge({"type":"IscsiFaultVnicIsLastPath","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicNotBound = merge({"type":"IscsiFaultVnicNotBound","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiFaultVnicNotFound = merge({"type":"IscsiFaultVnicNotFound","properties":{"vnicDevice":"xsd:string"}}, _self.IscsiFault);
    _self.IscsiMigrationDependency = merge({"type":"IscsiMigrationDependency","properties":{"dependency":_self.IscsiDependencyEntity,"disallowReason":_self.IscsiStatus,"migrationAllowed":"xsd:boolean"}}, _self.DynamicData);
    _self.LargeRDMNotSupportedOnDatastore = merge({"type":"LargeRDMNotSupportedOnDatastore","properties":{"datastore":_self.ManagedObjectReference,"datastoreName":"xsd:string","device":"xsd:string"}}, _self.VmConfigFault);
    _self.LicenseAssignmentFailed = merge({"type":"LicenseAssignmentFailed","properties":{"reason":"xsd:string"}}, _self.RuntimeFault);
    _self.LicenseEntityNotFound = merge({"type":"LicenseEntityNotFound","properties":{"entityId":"xsd:string"}}, _self.VimFault);
    _self.LicenseServerUnavailable = merge({"type":"LicenseServerUnavailable","properties":{"licenseServer":"xsd:string"}}, _self.VimFault);
    _self.LimitExceeded = merge({"type":"LimitExceeded","properties":{"limit":"xsd:int","property":"xsd:string"}}, _self.VimFault);
    _self.LinuxVolumeNotClean = merge({"type":"LinuxVolumeNotClean"}, _self.CustomizationFault);
    _self.LogBundlingFailed = merge({"type":"LogBundlingFailed"}, _self.VimFault);
    _self.ManagedObjectNotFound = merge({"type":"ManagedObjectNotFound","properties":{"obj":_self.ManagedObjectReference}}, _self.RuntimeFault);
    _self.MemoryHotPlugNotSupported = merge({"type":"MemoryHotPlugNotSupported"}, _self.VmConfigFault);
    _self.MethodAlreadyDisabledFault = merge({"type":"MethodAlreadyDisabledFault","properties":{"sourceId":"xsd:string"}}, _self.RuntimeFault);
    _self.MethodDisabled = merge({"type":"MethodDisabled","properties":{"source":"xsd:string"}}, _self.RuntimeFault);
    _self.MethodNotFound = merge({"type":"MethodNotFound","properties":{"method":"xsd:string","receiver":_self.ManagedObjectReference}}, _self.InvalidRequest);
    _self.MigrationErrorEvent = merge({"type":"MigrationErrorEvent"}, _self.MigrationEvent);
    _self.MigrationFault = merge({"type":"MigrationFault"}, _self.VimFault);
    _self.MigrationFeatureNotSupported = merge({"type":"MigrationFeatureNotSupported","properties":{"atSourceHost":"xsd:boolean","failedHost":_self.ManagedObjectReference,"failedHostName":"xsd:string"}}, _self.MigrationFault);
    _self.MigrationNotReady = merge({"type":"MigrationNotReady","properties":{"reason":"xsd:string"}}, _self.MigrationFault);
    _self.MismatchedBundle = merge({"type":"MismatchedBundle","properties":{"bundleBuildNumber":"xsd:int","bundleUuid":"xsd:string","hostBuildNumber":"xsd:int","hostUuid":"xsd:string"}}, _self.VimFault);
    _self.MismatchedNetworkPolicies = merge({"type":"MismatchedNetworkPolicies","properties":{"backing":"xsd:string","connected":"xsd:boolean","device":"xsd:string"}}, _self.MigrationFault);
    _self.MismatchedVMotionNetworkNames = merge({"type":"MismatchedVMotionNetworkNames","properties":{"destNetwork":"xsd:string","sourceNetwork":"xsd:string"}}, _self.MigrationFault);
    _self.MissingBmcSupport = merge({"type":"MissingBmcSupport"}, _self.VimFault);
    _self.MissingLinuxCustResources = merge({"type":"MissingLinuxCustResources"}, _self.CustomizationFault);
    _self.MissingWindowsCustResources = merge({"type":"MissingWindowsCustResources"}, _self.CustomizationFault);
    _self.MksConnectionLimitReached = merge({"type":"MksConnectionLimitReached","properties":{"connectionLimit":"xsd:int"}}, _self.InvalidState);
    _self.MountError = merge({"type":"MountError","properties":{"diskIndex":"xsd:int","vm":_self.ManagedObjectReference}}, _self.CustomizationFault);
    _self.MultipleCertificatesVerifyFault = merge({"type":"MultipleCertificatesVerifyFault","properties":{"thumbprintData":_self.MultipleCertificatesVerifyFaultThumbprintData}}, _self.HostConnectFault);
    _self.NamespaceFull = merge({"type":"NamespaceFull","properties":{"currentMaxSize":"xsd:long","name":"xsd:string","requiredSize":"xsd:long"}}, _self.VimFault);
    _self.NamespaceLimitReached = merge({"type":"NamespaceLimitReached","properties":{"limit":"xsd:int"}}, _self.VimFault);
    _self.NamespaceWriteProtected = merge({"type":"NamespaceWriteProtected","properties":{"name":"xsd:string"}}, _self.VimFault);
    _self.NasConfigFault = merge({"type":"NasConfigFault","properties":{"name":"xsd:string"}}, _self.HostConfigFault);
    _self.NasConnectionLimitReached = merge({"type":"NasConnectionLimitReached","properties":{"remoteHost":"xsd:string","remotePath":"xsd:string"}}, _self.NasConfigFault);
    _self.NasSessionCredentialConflict = merge({"type":"NasSessionCredentialConflict","properties":{"remoteHost":"xsd:string","remotePath":"xsd:string","userName":"xsd:string"}}, _self.NasConfigFault);
    _self.NasVolumeNotMounted = merge({"type":"NasVolumeNotMounted","properties":{"remoteHost":"xsd:string","remotePath":"xsd:string"}}, _self.NasConfigFault);
    _self.NetworkCopyFault = merge({"type":"NetworkCopyFault"}, _self.FileFault);
    _self.NetworkDisruptedAndConfigRolledBack = merge({"type":"NetworkDisruptedAndConfigRolledBack","properties":{"host":"xsd:string"}}, _self.VimFault);
    _self.NetworkInaccessible = merge({"type":"NetworkInaccessible"}, _self.NasConfigFault);
    _self.NetworksMayNotBeTheSame = merge({"type":"NetworksMayNotBeTheSame","properties":{"name":"xsd:string"}}, _self.MigrationFault);
    _self.NicSettingMismatch = merge({"type":"NicSettingMismatch","properties":{"numberOfNicsInSpec":"xsd:int","numberOfNicsInVM":"xsd:int"}}, _self.CustomizationFault);
    _self.NoActiveHostInCluster = merge({"type":"NoActiveHostInCluster","properties":{"computeResource":_self.ManagedObjectReference}}, _self.InvalidState);
    _self.NoClientCertificate = merge({"type":"NoClientCertificate"}, _self.VimFault);
    _self.NoCompatibleDatastore = merge({"type":"NoCompatibleDatastore"}, _self.VimFault);
    _self.NoCompatibleHardAffinityHost = merge({"type":"NoCompatibleHardAffinityHost","properties":{"vmName":"xsd:string"}}, _self.VmConfigFault);
    _self.NoCompatibleHost = merge({"type":"NoCompatibleHost","properties":{"error":_self.LocalizedMethodFault,"host":_self.ManagedObjectReference}}, _self.VimFault);
    _self.NoCompatibleHostWithAccessToDevice = merge({"type":"NoCompatibleHostWithAccessToDevice"}, _self.NoCompatibleHost);
    _self.NoCompatibleSoftAffinityHost = merge({"type":"NoCompatibleSoftAffinityHost","properties":{"vmName":"xsd:string"}}, _self.VmConfigFault);
    _self.NoConnectedDatastore = merge({"type":"NoConnectedDatastore"}, _self.VimFault);
    _self.NoDiskFound = merge({"type":"NoDiskFound"}, _self.VimFault);
    _self.NoDiskSpace = merge({"type":"NoDiskSpace","properties":{"datastore":"xsd:string"}}, _self.FileFault);
    _self.NoDisksToCustomize = merge({"type":"NoDisksToCustomize"}, _self.CustomizationFault);
    _self.NoGateway = merge({"type":"NoGateway"}, _self.HostConfigFault);
    _self.NoGuestHeartbeat = merge({"type":"NoGuestHeartbeat"}, _self.MigrationFault);
    _self.NoHost = merge({"type":"NoHost","properties":{"name":"xsd:string"}}, _self.HostConnectFault);
    _self.NoHostSuitableForFtSecondary = merge({"type":"NoHostSuitableForFtSecondary","properties":{"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.NonADUserRequired = merge({"type":"NonADUserRequired"}, _self.ActiveDirectoryFault);
    _self.NonHomeRDMVMotionNotSupported = merge({"type":"NonHomeRDMVMotionNotSupported","properties":{"device":"xsd:string"}}, _self.MigrationFeatureNotSupported);
    _self.NoPeerHostFound = merge({"type":"NoPeerHostFound"}, _self.HostPowerOpFailed);
    _self.NoPermission = merge({"type":"NoPermission","properties":{"object":_self.ManagedObjectReference,"privilegeId":"xsd:string"}}, _self.SecurityError);
    _self.NoPermissionOnAD = merge({"type":"NoPermissionOnAD"}, _self.ActiveDirectoryFault);
    _self.NoPermissionOnHost = merge({"type":"NoPermissionOnHost"}, _self.HostConnectFault);
    _self.NoPermissionOnNasVolume = merge({"type":"NoPermissionOnNasVolume","properties":{"userName":"xsd:string"}}, _self.NasConfigFault);
    _self.NoSubjectName = merge({"type":"NoSubjectName"}, _self.VimFault);
    _self.NotADirectory = merge({"type":"NotADirectory"}, _self.FileFault);
    _self.NotAFile = merge({"type":"NotAFile"}, _self.FileFault);
    _self.NotAuthenticated = merge({"type":"NotAuthenticated"}, _self.NoPermission);
    _self.NotEnoughLicenses = merge({"type":"NotEnoughLicenses"}, _self.RuntimeFault);
    _self.NotFound = merge({"type":"NotFound"}, _self.VimFault);
    _self.NotImplemented = merge({"type":"NotImplemented"}, _self.RuntimeFault);
    _self.NotSupported = merge({"type":"NotSupported"}, _self.RuntimeFault);
    _self.NotSupportedDeviceForFT = merge({"type":"NotSupportedDeviceForFT","properties":{"deviceLabel":"xsd:string","deviceType":"xsd:string","host":_self.ManagedObjectReference,"hostName":"xsd:string","vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.NotSupportedHost = merge({"type":"NotSupportedHost","properties":{"productName":"xsd:string","productVersion":"xsd:string"}}, _self.HostConnectFault);
    _self.NotSupportedHostForVFlash = merge({"type":"NotSupportedHostForVFlash","properties":{"hostName":"xsd:string"}}, _self.NotSupportedHost);
    _self.NotSupportedHostForVsan = merge({"type":"NotSupportedHostForVsan","properties":{"hostName":"xsd:string"}}, _self.NotSupportedHost);
    _self.NotSupportedHostInCluster = merge({"type":"NotSupportedHostInCluster"}, _self.NotSupportedHost);
    _self.NotSupportedHostInDvs = merge({"type":"NotSupportedHostInDvs","properties":{"switchProductSpec":_self.DistributedVirtualSwitchProductSpec}}, _self.NotSupportedHost);
    _self.NotSupportedHostInHACluster = merge({"type":"NotSupportedHostInHACluster","properties":{"build":"xsd:string","hostName":"xsd:string"}}, _self.NotSupportedHost);
    _self.NoVirtualNic = merge({"type":"NoVirtualNic"}, _self.HostConfigFault);
    _self.NumVirtualCpusExceedsLimit = merge({"type":"NumVirtualCpusExceedsLimit","properties":{"maxSupportedVcpus":"xsd:int"}}, _self.InsufficientResourcesFault);
    _self.NumVirtualCpusIncompatible = merge({"type":"NumVirtualCpusIncompatible","properties":{"numCpu":"xsd:int","reason":"xsd:string"}}, _self.VmConfigFault);
    _self.OperationDisabledByGuest = merge({"type":"OperationDisabledByGuest"}, _self.GuestOperationsFault);
    _self.OperationDisallowedOnHost = merge({"type":"OperationDisallowedOnHost"}, _self.RuntimeFault);
    _self.OperationNotSupportedByGuest = merge({"type":"OperationNotSupportedByGuest"}, _self.GuestOperationsFault);
    _self.OutOfBounds = merge({"type":"OutOfBounds","properties":{"argumentName":"xsd:string"}}, _self.VimFault);
    _self.OvfConsumerPowerOnFault = merge({"type":"OvfConsumerPowerOnFault","properties":{"description":"xsd:string","extensionKey":"xsd:string","extensionName":"xsd:string"}}, _self.InvalidState);
    _self.OvfConsumerValidationFault = merge({"type":"OvfConsumerValidationFault","properties":{"extensionKey":"xsd:string","extensionName":"xsd:string","message":"xsd:string"}}, _self.VmConfigFault);
    _self.OvfFault = merge({"type":"OvfFault"}, _self.VimFault);
    _self.OvfImport = merge({"type":"OvfImport"}, _self.OvfFault);
    _self.OvfImportFailed = merge({"type":"OvfImportFailed"}, _self.OvfImport);
    _self.OvfInvalidPackage = merge({"type":"OvfInvalidPackage","properties":{"lineNumber":"xsd:int"}}, _self.OvfFault);
    _self.OvfMappedOsId = merge({"type":"OvfMappedOsId","properties":{"ovfDescription":"xsd:string","ovfId":"xsd:int","targetDescription":"xsd:string"}}, _self.OvfImport);
    _self.OvfMissingHardware = merge({"type":"OvfMissingHardware","properties":{"name":"xsd:string","resourceType":"xsd:int"}}, _self.OvfImport);
    _self.OvfNetworkMappingNotSupported = merge({"type":"OvfNetworkMappingNotSupported"}, _self.OvfImport);
    _self.OvfProperty = merge({"type":"OvfProperty","properties":{"type":"xsd:string","value":"xsd:string"}}, _self.OvfInvalidPackage);
    _self.OvfPropertyNetwork = merge({"type":"OvfPropertyNetwork"}, _self.OvfProperty);
    _self.OvfPropertyQualifier = merge({"type":"OvfPropertyQualifier","properties":{"qualifier":"xsd:string"}}, _self.OvfProperty);
    _self.OvfPropertyQualifierDuplicate = merge({"type":"OvfPropertyQualifierDuplicate","properties":{"qualifier":"xsd:string"}}, _self.OvfProperty);
    _self.OvfPropertyQualifierIgnored = merge({"type":"OvfPropertyQualifierIgnored","properties":{"qualifier":"xsd:string"}}, _self.OvfProperty);
    _self.OvfPropertyType = merge({"type":"OvfPropertyType"}, _self.OvfProperty);
    _self.OvfPropertyValue = merge({"type":"OvfPropertyValue"}, _self.OvfProperty);
    _self.OvfSystemFault = merge({"type":"OvfSystemFault"}, _self.OvfFault);
    _self.OvfToXmlUnsupportedElement = merge({"type":"OvfToXmlUnsupportedElement","properties":{"name":"xsd:string"}}, _self.OvfSystemFault);
    _self.OvfUnknownDevice = merge({"type":"OvfUnknownDevice","properties":{"device":_self.VirtualDevice,"vmName":"xsd:string"}}, _self.OvfSystemFault);
    _self.OvfUnknownEntity = merge({"type":"OvfUnknownEntity","properties":{"lineNumber":"xsd:int"}}, _self.OvfSystemFault);
    _self.OvfUnsupportedDeviceBackingInfo = merge({"type":"OvfUnsupportedDeviceBackingInfo","properties":{"backingName":"xsd:string","deviceName":"xsd:string","elementName":"xsd:string","instanceId":"xsd:string"}}, _self.OvfSystemFault);
    _self.OvfUnsupportedDeviceBackingOption = merge({"type":"OvfUnsupportedDeviceBackingOption","properties":{"backingName":"xsd:string","deviceName":"xsd:string","elementName":"xsd:string","instanceId":"xsd:string"}}, _self.OvfSystemFault);
    _self.OvfUnsupportedDiskProvisioning = merge({"type":"OvfUnsupportedDiskProvisioning","properties":{"diskProvisioning":"xsd:string","supportedDiskProvisioning":"xsd:string"}}, _self.OvfImport);
    _self.OvfUnsupportedPackage = merge({"type":"OvfUnsupportedPackage","properties":{"lineNumber":"xsd:int"}}, _self.OvfFault);
    _self.OvfUnsupportedSubType = merge({"type":"OvfUnsupportedSubType","properties":{"deviceSubType":"xsd:string","deviceType":"xsd:int","elementName":"xsd:string","instanceId":"xsd:string"}}, _self.OvfUnsupportedPackage);
    _self.OvfUnsupportedType = merge({"type":"OvfUnsupportedType","properties":{"deviceType":"xsd:int","instanceId":"xsd:string","name":"xsd:string"}}, _self.OvfUnsupportedPackage);
    _self.OvfWrongNamespace = merge({"type":"OvfWrongNamespace","properties":{"namespaceName":"xsd:string"}}, _self.OvfInvalidPackage);
    _self.OvfXmlFormat = merge({"type":"OvfXmlFormat","properties":{"description":"xsd:string"}}, _self.OvfInvalidPackage);
    _self.PatchBinariesNotFound = merge({"type":"PatchBinariesNotFound","properties":{"binary":"xsd:string[]","patchID":"xsd:string"}}, _self.VimFault);
    _self.PatchMetadataInvalid = merge({"type":"PatchMetadataInvalid","properties":{"metaData":"xsd:string[]","patchID":"xsd:string"}}, _self.VimFault);
    _self.PatchMetadataNotFound = merge({"type":"PatchMetadataNotFound"}, _self.PatchMetadataInvalid);
    _self.PatchNotApplicable = merge({"type":"PatchNotApplicable","properties":{"patchID":"xsd:string"}}, _self.VimFault);
    _self.PatchSuperseded = merge({"type":"PatchSuperseded","properties":{"supersede":"xsd:string[]"}}, _self.PatchNotApplicable);
    _self.PlatformConfigFault = merge({"type":"PlatformConfigFault","properties":{"text":"xsd:string"}}, _self.HostConfigFault);
    _self.PodStorageDrsEntry = merge({"type":"PodStorageDrsEntry","properties":{"actionHistory":_self.ClusterActionHistory,"drsFault":_self.ClusterDrsFaults,"recommendation":_self.ClusterRecommendation,"storageDrsConfig":_self.StorageDrsConfigInfo}}, _self.DynamicData);
    _self.PowerOnFtSecondaryFailed = merge({"type":"PowerOnFtSecondaryFailed","properties":{"hostErrors":_self.LocalizedMethodFault,"hostSelectionBy":_self.FtIssuesOnHostHostSelectionType,"rootCause":_self.LocalizedMethodFault,"vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.ProfileUpdateFailed = merge({"type":"ProfileUpdateFailed","properties":{"failure":_self.ProfileUpdateFailedUpdateFailure}}, _self.VimFault);
    _self.QuestionPending = merge({"type":"QuestionPending","properties":{"text":"xsd:string"}}, _self.InvalidState);
    _self.RDMConversionNotSupported = merge({"type":"RDMConversionNotSupported","properties":{"device":"xsd:string"}}, _self.MigrationFault);
    _self.RDMNotPreserved = merge({"type":"RDMNotPreserved","properties":{"device":"xsd:string"}}, _self.MigrationFault);
    _self.RDMNotSupportedOnDatastore = merge({"type":"RDMNotSupportedOnDatastore","properties":{"datastore":_self.ManagedObjectReference,"datastoreName":"xsd:string","device":"xsd:string"}}, _self.VmConfigFault);
    _self.RDMPointsToInaccessibleDisk = merge({"type":"RDMPointsToInaccessibleDisk"}, _self.CannotAccessVmDisk);
    _self.ReadHostResourcePoolTreeFailed = merge({"type":"ReadHostResourcePoolTreeFailed"}, _self.HostConnectFault);
    _self.ReadOnlyDisksWithLegacyDestination = merge({"type":"ReadOnlyDisksWithLegacyDestination","properties":{"roDiskCount":"xsd:int","timeoutDanger":"xsd:boolean"}}, _self.MigrationFault);
    _self.RebootRequired = merge({"type":"RebootRequired","properties":{"patch":"xsd:string"}}, _self.VimFault);
    _self.RecordReplayDisabled = merge({"type":"RecordReplayDisabled"}, _self.VimFault);
    _self.RemoveFailed = merge({"type":"RemoveFailed"}, _self.VimFault);
    _self.ReplicationFault = merge({"type":"ReplicationFault"}, _self.VimFault);
    _self.ReplicationIncompatibleWithFT = merge({"type":"ReplicationIncompatibleWithFT"}, _self.ReplicationFault);
    _self.ReplicationInvalidOptions = merge({"type":"ReplicationInvalidOptions","properties":{"entity":_self.ManagedObjectReference,"options":"xsd:string"}}, _self.ReplicationFault);
    _self.ReplicationNotSupportedOnHost = merge({"type":"ReplicationNotSupportedOnHost"}, _self.ReplicationFault);
    _self.ReplicationVmFault = merge({"type":"ReplicationVmFault","properties":{"instanceId":"xsd:string","reason":"xsd:string","state":"xsd:string","vm":_self.ManagedObjectReference}}, _self.ReplicationFault);
    _self.RequestCanceled = merge({"type":"RequestCanceled"}, _self.RuntimeFault);
    _self.ResourceInUse = merge({"type":"ResourceInUse","properties":{"name":"xsd:string","type":"xsd:string"}}, _self.VimFault);
    _self.ResourceNotAvailable = merge({"type":"ResourceNotAvailable","properties":{"containerName":"xsd:string","containerType":"xsd:string","type":"xsd:string"}}, _self.VimFault);
    _self.RestrictedVersion = merge({"type":"RestrictedVersion"}, _self.SecurityError);
    _self.RollbackFailure = merge({"type":"RollbackFailure","properties":{"entityName":"xsd:string","entityType":"xsd:string"}}, _self.DvsFault);
    _self.RuleViolation = merge({"type":"RuleViolation","properties":{"host":_self.ManagedObjectReference,"rule":_self.ClusterRuleInfo}}, _self.VmConfigFault);
    _self.ScheduledTask = merge({"type":"ScheduledTask","properties":{"info":_self.ScheduledTaskInfo},"methods":{"ReconfigureScheduledTask":{"params":{"_this":"ManagedObjectReference","spec":"ScheduledTaskSpec"},"returns":null},"RemoveScheduledTask":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RunScheduledTask":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.SecondaryVmAlreadyDisabled = merge({"type":"SecondaryVmAlreadyDisabled","properties":{"instanceUuid":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.SecondaryVmAlreadyEnabled = merge({"type":"SecondaryVmAlreadyEnabled","properties":{"instanceUuid":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.SecondaryVmAlreadyRegistered = merge({"type":"SecondaryVmAlreadyRegistered","properties":{"instanceUuid":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.SecondaryVmNotRegistered = merge({"type":"SecondaryVmNotRegistered","properties":{"instanceUuid":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.ShrinkDiskFault = merge({"type":"ShrinkDiskFault","properties":{"diskId":"xsd:int"}}, _self.VimFault);
    _self.SnapshotCopyNotSupported = merge({"type":"SnapshotCopyNotSupported"}, _self.MigrationFault);
    _self.SnapshotFault = merge({"type":"SnapshotFault"}, _self.VimFault);
    _self.SnapshotIncompatibleDeviceInVm = merge({"type":"SnapshotIncompatibleDeviceInVm","properties":{"fault":_self.LocalizedMethodFault}}, _self.SnapshotFault);
    _self.SnapshotLocked = merge({"type":"SnapshotLocked"}, _self.SnapshotFault);
    _self.SnapshotMoveFromNonHomeNotSupported = merge({"type":"SnapshotMoveFromNonHomeNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.SnapshotMoveNotSupported = merge({"type":"SnapshotMoveNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.SnapshotMoveToNonHomeNotSupported = merge({"type":"SnapshotMoveToNonHomeNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.SnapshotNoChange = merge({"type":"SnapshotNoChange"}, _self.SnapshotFault);
    _self.SnapshotRevertIssue = merge({"type":"SnapshotRevertIssue","properties":{"errors":"xsd:boolean","event":_self.Event,"snapshotName":"xsd:string"}}, _self.MigrationFault);
    _self.SoftRuleVioCorrectionDisallowed = merge({"type":"SoftRuleVioCorrectionDisallowed","properties":{"vmName":"xsd:string"}}, _self.VmConfigFault);
    _self.SoftRuleVioCorrectionImpact = merge({"type":"SoftRuleVioCorrectionImpact","properties":{"vmName":"xsd:string"}}, _self.VmConfigFault);
    _self.SsdDiskNotAvailable = merge({"type":"SsdDiskNotAvailable","properties":{"devicePath":"xsd:string"}}, _self.VimFault);
    _self.SSLDisabledFault = merge({"type":"SSLDisabledFault"}, _self.HostConnectFault);
    _self.SSLVerifyFault = merge({"type":"SSLVerifyFault","properties":{"selfSigned":"xsd:boolean","thumbprint":"xsd:string"}}, _self.HostConnectFault);
    _self.SSPIChallenge = merge({"type":"SSPIChallenge","properties":{"base64Token":"xsd:string"}}, _self.VimFault);
    _self.StorageDrsCannotMoveDiskInMultiWriterMode = merge({"type":"StorageDrsCannotMoveDiskInMultiWriterMode"}, _self.VimFault);
    _self.StorageDrsCannotMoveFTVm = merge({"type":"StorageDrsCannotMoveFTVm"}, _self.VimFault);
    _self.StorageDrsCannotMoveIndependentDisk = merge({"type":"StorageDrsCannotMoveIndependentDisk"}, _self.VimFault);
    _self.StorageDrsCannotMoveManuallyPlacedSwapFile = merge({"type":"StorageDrsCannotMoveManuallyPlacedSwapFile"}, _self.VimFault);
    _self.StorageDrsCannotMoveManuallyPlacedVm = merge({"type":"StorageDrsCannotMoveManuallyPlacedVm"}, _self.VimFault);
    _self.StorageDrsCannotMoveSharedDisk = merge({"type":"StorageDrsCannotMoveSharedDisk"}, _self.VimFault);
    _self.StorageDrsCannotMoveTemplate = merge({"type":"StorageDrsCannotMoveTemplate"}, _self.VimFault);
    _self.StorageDrsCannotMoveVmInUserFolder = merge({"type":"StorageDrsCannotMoveVmInUserFolder"}, _self.VimFault);
    _self.StorageDrsCannotMoveVmWithMountedCDROM = merge({"type":"StorageDrsCannotMoveVmWithMountedCDROM"}, _self.VimFault);
    _self.StorageDrsCannotMoveVmWithNoFilesInLayout = merge({"type":"StorageDrsCannotMoveVmWithNoFilesInLayout"}, _self.VimFault);
    _self.StorageDrsDatacentersCannotShareDatastore = merge({"type":"StorageDrsDatacentersCannotShareDatastore"}, _self.VimFault);
    _self.StorageDrsDisabledOnVm = merge({"type":"StorageDrsDisabledOnVm"}, _self.VimFault);
    _self.StorageDrsIolbDisabledInternally = merge({"type":"StorageDrsIolbDisabledInternally"}, _self.VimFault);
    _self.StorageDrsUnableToMoveFiles = merge({"type":"StorageDrsUnableToMoveFiles"}, _self.VimFault);
    _self.StoragePlacementResult = merge({"type":"StoragePlacementResult","properties":{"drsFault":_self.ClusterDrsFaults,"recommendations":_self.ClusterRecommendation,"task":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.StoragePod = merge({"type":"StoragePod","properties":{"podStorageDrsEntry":_self.PodStorageDrsEntry,"summary":_self.StoragePodSummary},"methods":{}}, _self.Folder);
    _self.StorageVMotionNotSupported = merge({"type":"StorageVMotionNotSupported"}, _self.MigrationFeatureNotSupported);
    _self.SuspendedRelocateNotSupported = merge({"type":"SuspendedRelocateNotSupported"}, _self.MigrationFault);
    _self.SwapDatastoreUnset = merge({"type":"SwapDatastoreUnset"}, _self.VimFault);
    _self.SwapPlacementOverrideNotSupported = merge({"type":"SwapPlacementOverrideNotSupported"}, _self.InvalidVmConfig);
    _self.SwitchIpUnset = merge({"type":"SwitchIpUnset"}, _self.DvsFault);
    _self.SwitchNotInUpgradeMode = merge({"type":"SwitchNotInUpgradeMode"}, _self.DvsFault);
    _self.Task = merge({"type":"Task","properties":{"info":_self.TaskInfo},"methods":{"CancelTask":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SetTaskDescription":{"params":{"_this":"ManagedObjectReference","description":"LocalizableMessage"},"returns":null},"SetTaskState":{"params":{"_this":"ManagedObjectReference","state":"TaskInfoState","result":"xsd:anyType","fault":"MethodFault"},"returns":null},"UpdateProgress":{"params":{"_this":"ManagedObjectReference","percentDone":"xsd:int"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.TaskInProgress = merge({"type":"TaskInProgress","properties":{"task":_self.ManagedObjectReference}}, _self.VimFault);
    _self.Timedout = merge({"type":"Timedout"}, _self.VimFault);
    _self.ToolsAlreadyUpgraded = merge({"type":"ToolsAlreadyUpgraded"}, _self.VmToolsUpgradeFault);
    _self.ToolsAutoUpgradeNotSupported = merge({"type":"ToolsAutoUpgradeNotSupported"}, _self.VmToolsUpgradeFault);
    _self.ToolsConfigInfo = merge({"type":"ToolsConfigInfo","properties":{"afterPowerOn":"xsd:boolean","afterResume":"xsd:boolean","beforeGuestReboot":"xsd:boolean","beforeGuestShutdown":"xsd:boolean","beforeGuestStandby":"xsd:boolean","lastInstallInfo":_self.ToolsConfigInfoToolsLastInstallInfo,"pendingCustomization":"xsd:string","syncTimeWithHost":"xsd:boolean","toolsUpgradePolicy":"xsd:string","toolsVersion":"xsd:int"}}, _self.DynamicData);
    _self.ToolsImageCopyFailed = merge({"type":"ToolsImageCopyFailed"}, _self.VmToolsUpgradeFault);
    _self.ToolsImageNotAvailable = merge({"type":"ToolsImageNotAvailable"}, _self.VmToolsUpgradeFault);
    _self.ToolsImageSignatureCheckFailed = merge({"type":"ToolsImageSignatureCheckFailed"}, _self.VmToolsUpgradeFault);
    _self.ToolsInstallationInProgress = merge({"type":"ToolsInstallationInProgress"}, _self.MigrationFault);
    _self.ToolsUnavailable = merge({"type":"ToolsUnavailable"}, _self.VimFault);
    _self.ToolsUpgradeCancelled = merge({"type":"ToolsUpgradeCancelled"}, _self.VmToolsUpgradeFault);
    _self.TooManyConcurrentNativeClones = merge({"type":"TooManyConcurrentNativeClones"}, _self.FileFault);
    _self.TooManyConsecutiveOverrides = merge({"type":"TooManyConsecutiveOverrides"}, _self.VimFault);
    _self.TooManyDevices = merge({"type":"TooManyDevices"}, _self.InvalidVmConfig);
    _self.TooManyDisksOnLegacyHost = merge({"type":"TooManyDisksOnLegacyHost","properties":{"diskCount":"xsd:int","timeoutDanger":"xsd:boolean"}}, _self.MigrationFault);
    _self.TooManyGuestLogons = merge({"type":"TooManyGuestLogons"}, _self.GuestOperationsFault);
    _self.TooManyHosts = merge({"type":"TooManyHosts"}, _self.HostConnectFault);
    _self.TooManyNativeCloneLevels = merge({"type":"TooManyNativeCloneLevels"}, _self.FileFault);
    _self.TooManyNativeClonesOnFile = merge({"type":"TooManyNativeClonesOnFile"}, _self.FileFault);
    _self.TooManySnapshotLevels = merge({"type":"TooManySnapshotLevels"}, _self.SnapshotFault);
    _self.UncommittedUndoableDisk = merge({"type":"UncommittedUndoableDisk"}, _self.MigrationFault);
    _self.UncustomizableGuest = merge({"type":"UncustomizableGuest","properties":{"uncustomizableGuestOS":"xsd:string"}}, _self.CustomizationFault);
    _self.UnexpectedCustomizationFault = merge({"type":"UnexpectedCustomizationFault"}, _self.CustomizationFault);
    _self.UnrecognizedHost = merge({"type":"UnrecognizedHost","properties":{"hostName":"xsd:string"}}, _self.VimFault);
    _self.UnsharedSwapVMotionNotSupported = merge({"type":"UnsharedSwapVMotionNotSupported"}, _self.MigrationFeatureNotSupported);
    _self.UnsupportedDatastore = merge({"type":"UnsupportedDatastore","properties":{"datastore":_self.ManagedObjectReference}}, _self.VmConfigFault);
    _self.UnSupportedDatastoreForVFlash = merge({"type":"UnSupportedDatastoreForVFlash","properties":{"datastoreName":"xsd:string","type":"xsd:string"}}, _self.UnsupportedDatastore);
    _self.UnsupportedGuest = merge({"type":"UnsupportedGuest","properties":{"unsupportedGuestOS":"xsd:string"}}, _self.InvalidVmConfig);
    _self.UnsupportedVimApiVersion = merge({"type":"UnsupportedVimApiVersion","properties":{"version":"xsd:string"}}, _self.VimFault);
    _self.UnsupportedVmxLocation = merge({"type":"UnsupportedVmxLocation"}, _self.VmConfigFault);
    _self.UpdateVirtualMachineFilesResult = merge({"type":"UpdateVirtualMachineFilesResult","properties":{"failedVmFile":_self.UpdateVirtualMachineFilesResultFailedVmFileInfo}}, _self.DynamicData);
    _self.UserNotFound = merge({"type":"UserNotFound","properties":{"principal":"xsd:string","unresolved":"xsd:boolean"}}, _self.VimFault);
    _self.VAppConfigFault = merge({"type":"VAppConfigFault"}, _self.VimFault);
    _self.VAppNotRunning = merge({"type":"VAppNotRunning"}, _self.VmConfigFault);
    _self.VAppPropertyFault = merge({"type":"VAppPropertyFault","properties":{"category":"xsd:string","id":"xsd:string","label":"xsd:string","type":"xsd:string","value":"xsd:string"}}, _self.VmConfigFault);
    _self.VAppTaskInProgress = merge({"type":"VAppTaskInProgress"}, _self.TaskInProgress);
    _self.VFlashModuleNotSupported = merge({"type":"VFlashModuleNotSupported","properties":{"hostName":"xsd:string","moduleName":"xsd:string","reason":"xsd:string","vmName":"xsd:string"}}, _self.VmConfigFault);
    _self.VFlashModuleVersionIncompatible = merge({"type":"VFlashModuleVersionIncompatible","properties":{"hostMinSupportedVerson":"xsd:string","hostModuleVersion":"xsd:string","moduleName":"xsd:string","vmRequestModuleVersion":"xsd:string"}}, _self.VimFault);
    _self.VirtualHardwareCompatibilityIssue = merge({"type":"VirtualHardwareCompatibilityIssue"}, _self.VmConfigFault);
    _self.VirtualHardwareVersionNotSupported = merge({"type":"VirtualHardwareVersionNotSupported","properties":{"host":_self.ManagedObjectReference,"hostName":"xsd:string"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.VirtualMachineConfigInfo = merge({"type":"VirtualMachineConfigInfo","properties":{"alternateGuestName":"xsd:string","annotation":"xsd:string","bootOptions":_self.VirtualMachineBootOptions,"changeTrackingEnabled":"xsd:boolean","changeVersion":"xsd:string","consolePreferences":_self.VirtualMachineConsolePreferences,"cpuAffinity":_self.VirtualMachineAffinityInfo,"cpuAllocation":_self.ResourceAllocationInfo,"cpuFeatureMask":_self.HostCpuIdInfo,"cpuHotAddEnabled":"xsd:boolean","cpuHotRemoveEnabled":"xsd:boolean","datastoreUrl":_self.VirtualMachineConfigInfoDatastoreUrlPair,"defaultPowerOps":_self.VirtualMachineDefaultPowerOpInfo,"extraConfig":_self.OptionValue,"files":_self.VirtualMachineFileInfo,"firmware":"xsd:string","flags":_self.VirtualMachineFlagInfo,"ftInfo":_self.FaultToleranceConfigInfo,"guestAutoLockEnabled":"xsd:boolean","guestFullName":"xsd:string","guestId":"xsd:string","hardware":_self.VirtualHardware,"hotPlugMemoryIncrementSize":"xsd:long","hotPlugMemoryLimit":"xsd:long","initialOverhead":_self.VirtualMachineConfigInfoOverheadInfo,"instanceUuid":"xsd:string","latencySensitivity":_self.LatencySensitivity,"locationId":"xsd:string","managedBy":_self.ManagedByInfo,"maxMksConnections":"xsd:int","memoryAffinity":_self.VirtualMachineAffinityInfo,"memoryAllocation":_self.ResourceAllocationInfo,"memoryHotAddEnabled":"xsd:boolean","memoryReservationLockedToMax":"xsd:boolean","modified":"xsd:dateTime","name":"xsd:string","nestedHVEnabled":"xsd:boolean","networkShaper":_self.VirtualMachineNetworkShaperInfo,"npivDesiredNodeWwns":"xsd:short","npivDesiredPortWwns":"xsd:short","npivNodeWorldWideName":"xsd:long[]","npivOnNonRdmDisks":"xsd:boolean","npivPortWorldWideName":"xsd:long[]","npivTemporaryDisabled":"xsd:boolean","npivWorldWideNameType":"xsd:string","scheduledHardwareUpgradeInfo":_self.ScheduledHardwareUpgradeInfo,"swapPlacement":"xsd:string","template":"xsd:boolean","tools":_self.ToolsConfigInfo,"uuid":"xsd:string","vAppConfig":_self.VmConfigInfo,"vAssertsEnabled":"xsd:boolean","version":"xsd:string","vFlashCacheReservation":"xsd:long","vPMCEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineSnapshot = merge({"type":"VirtualMachineSnapshot","properties":{"childSnapshot":_self.ManagedObjectReference,"config":_self.VirtualMachineConfigInfo},"methods":{"ExportSnapshot":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"RemoveSnapshot_Task":{"params":{"_this":"ManagedObjectReference","removeChildren":"xsd:boolean","consolidate":"xsd:boolean"},"returns":"ManagedObjectReference"},"RenameSnapshot":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","description":"xsd:string"},"returns":null},"RevertToSnapshot_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","suppressPowerOn":"xsd:boolean"},"returns":"ManagedObjectReference"}}}, _self.ExtensibleManagedObject);
    _self.VmAlreadyExistsInDatacenter = merge({"type":"VmAlreadyExistsInDatacenter","properties":{"host":_self.ManagedObjectReference,"hostname":"xsd:string","vm":_self.ManagedObjectReference}}, _self.InvalidFolder);
    _self.VmFaultToleranceConfigIssue = merge({"type":"VmFaultToleranceConfigIssue","properties":{"entity":_self.ManagedObjectReference,"entityName":"xsd:string","reason":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.VmFaultToleranceConfigIssueWrapper = merge({"type":"VmFaultToleranceConfigIssueWrapper","properties":{"entity":_self.ManagedObjectReference,"entityName":"xsd:string","error":_self.LocalizedMethodFault}}, _self.VmFaultToleranceIssue);
    _self.VmFaultToleranceInvalidFileBacking = merge({"type":"VmFaultToleranceInvalidFileBacking","properties":{"backingFilename":"xsd:string","backingType":"xsd:string"}}, _self.VmFaultToleranceIssue);
    _self.VmFaultToleranceTooManyVMsOnHost = merge({"type":"VmFaultToleranceTooManyVMsOnHost","properties":{"hostName":"xsd:string","maxNumFtVms":"xsd:int"}}, _self.InsufficientResourcesFault);
    _self.VmfsMountFault = merge({"type":"VmfsMountFault","properties":{"uuid":"xsd:string"}}, _self.HostConfigFault);
    _self.VmLimitLicense = merge({"type":"VmLimitLicense","properties":{"limit":"xsd:int"}}, _self.NotEnoughLicenses);
    _self.VMotionAcrossNetworkNotSupported = merge({"type":"VMotionAcrossNetworkNotSupported"}, _self.MigrationFeatureNotSupported);
    _self.VMotionInterfaceIssue = merge({"type":"VMotionInterfaceIssue","properties":{"atSourceHost":"xsd:boolean","failedHost":"xsd:string","failedHostEntity":_self.ManagedObjectReference}}, _self.MigrationFault);
    _self.VmotionInterfaceNotEnabled = merge({"type":"VmotionInterfaceNotEnabled"}, _self.HostPowerOpFailed);
    _self.VMotionLinkCapacityLow = merge({"type":"VMotionLinkCapacityLow","properties":{"network":"xsd:string"}}, _self.VMotionInterfaceIssue);
    _self.VMotionLinkDown = merge({"type":"VMotionLinkDown","properties":{"network":"xsd:string"}}, _self.VMotionInterfaceIssue);
    _self.VMotionNotConfigured = merge({"type":"VMotionNotConfigured"}, _self.VMotionInterfaceIssue);
    _self.VMotionNotLicensed = merge({"type":"VMotionNotLicensed"}, _self.VMotionInterfaceIssue);
    _self.VMotionNotSupported = merge({"type":"VMotionNotSupported"}, _self.VMotionInterfaceIssue);
    _self.VMotionProtocolIncompatible = merge({"type":"VMotionProtocolIncompatible"}, _self.MigrationFault);
    _self.VmPowerOnDisabled = merge({"type":"VmPowerOnDisabled"}, _self.InvalidState);
    _self.VmWwnConflict = merge({"type":"VmWwnConflict","properties":{"host":_self.ManagedObjectReference,"name":"xsd:string","vm":_self.ManagedObjectReference,"wwn":"xsd:long"}}, _self.InvalidVmConfig);
    _self.VolumeEditorError = merge({"type":"VolumeEditorError"}, _self.CustomizationFault);
    _self.VramLimitLicense = merge({"type":"VramLimitLicense","properties":{"limit":"xsd:int"}}, _self.NotEnoughLicenses);
    _self.VsanClusterUuidMismatch = merge({"type":"VsanClusterUuidMismatch","properties":{"destinationClusterUuid":"xsd:string","hostClusterUuid":"xsd:string"}}, _self.CannotMoveVsanEnabledHost);
    _self.VsanDiskFault = merge({"type":"VsanDiskFault","properties":{"device":"xsd:string"}}, _self.VsanFault);
    _self.VsanHostDiskMapResult = merge({"type":"VsanHostDiskMapResult","properties":{"diskResult":_self.VsanHostDiskResult,"error":_self.LocalizedMethodFault,"mapping":_self.VsanHostDiskMapping}}, _self.DynamicData);
    _self.VspanDestPortConflict = merge({"type":"VspanDestPortConflict","properties":{"portKey":"xsd:string","vspanSessionKey1":"xsd:string","vspanSessionKey2":"xsd:string"}}, _self.DvsFault);
    _self.VspanPortConflict = merge({"type":"VspanPortConflict","properties":{"portKey":"xsd:string","vspanSessionKey1":"xsd:string","vspanSessionKey2":"xsd:string"}}, _self.DvsFault);
    _self.VspanPortgroupPromiscChangeFault = merge({"type":"VspanPortgroupPromiscChangeFault","properties":{"portgroupName":"xsd:string"}}, _self.DvsFault);
    _self.VspanPortgroupTypeChangeFault = merge({"type":"VspanPortgroupTypeChangeFault","properties":{"portgroupName":"xsd:string"}}, _self.DvsFault);
    _self.VspanPortMoveFault = merge({"type":"VspanPortMoveFault","properties":{"destPortgroupName":"xsd:string","portKey":"xsd:string","srcPortgroupName":"xsd:string"}}, _self.DvsFault);
    _self.VspanPortPromiscChangeFault = merge({"type":"VspanPortPromiscChangeFault","properties":{"portKey":"xsd:string"}}, _self.DvsFault);
    _self.VspanPromiscuousPortNotSupported = merge({"type":"VspanPromiscuousPortNotSupported","properties":{"portKey":"xsd:string","vspanSessionKey":"xsd:string"}}, _self.DvsFault);
    _self.VspanSameSessionPortConflict = merge({"type":"VspanSameSessionPortConflict","properties":{"portKey":"xsd:string","vspanSessionKey":"xsd:string"}}, _self.DvsFault);
    _self.WakeOnLanNotSupported = merge({"type":"WakeOnLanNotSupported"}, _self.VirtualHardwareCompatibilityIssue);
    _self.WakeOnLanNotSupportedByVmotionNIC = merge({"type":"WakeOnLanNotSupportedByVmotionNIC"}, _self.HostPowerOpFailed);
    _self.WillLoseHAProtection = merge({"type":"WillLoseHAProtection","properties":{"resolution":"xsd:string"}}, _self.MigrationFault);
    _self.WillModifyConfigCpuRequirements = merge({"type":"WillModifyConfigCpuRequirements"}, _self.MigrationFault);
    _self.WillResetSnapshotDirectory = merge({"type":"WillResetSnapshotDirectory"}, _self.MigrationFault);
    _self.AdminDisabled = merge({"type":"AdminDisabled"}, _self.HostConfigFault);
    _self.AdminNotDisabled = merge({"type":"AdminNotDisabled"}, _self.HostConfigFault);
    _self.AffinityConfigured = merge({"type":"AffinityConfigured","properties":{"configuredAffinity":"xsd:string[]"}}, _self.MigrationFault);
    _self.AgentInstallFailed = merge({"type":"AgentInstallFailed","properties":{"installerOutput":"xsd:string","reason":"xsd:string","statusCode":"xsd:int"}}, _self.HostConnectFault);
    _self.AlreadyBeingManaged = merge({"type":"AlreadyBeingManaged","properties":{"ipAddress":"xsd:string"}}, _self.HostConnectFault);
    _self.AlreadyConnected = merge({"type":"AlreadyConnected","properties":{"name":"xsd:string"}}, _self.HostConnectFault);
    _self.ApplicationQuiesceFault = merge({"type":"ApplicationQuiesceFault"}, _self.SnapshotFault);
    _self.BackupBlobReadFailure = merge({"type":"BackupBlobReadFailure","properties":{"entityName":"xsd:string","entityType":"xsd:string","fault":_self.LocalizedMethodFault}}, _self.DvsFault);
    _self.BackupBlobWriteFailure = merge({"type":"BackupBlobWriteFailure","properties":{"entityName":"xsd:string","entityType":"xsd:string","fault":_self.LocalizedMethodFault}}, _self.DvsFault);
    _self.BlockedByFirewall = merge({"type":"BlockedByFirewall"}, _self.HostConfigFault);
    _self.CAMServerRefusedConnection = merge({"type":"CAMServerRefusedConnection"}, _self.InvalidCAMServer);
    _self.CannotAccessFile = merge({"type":"CannotAccessFile"}, _self.FileFault);
    _self.CannotAccessNetwork = merge({"type":"CannotAccessNetwork"}, _self.CannotAccessVmDevice);
    _self.CannotAddHostWithFTVmAsStandalone = merge({"type":"CannotAddHostWithFTVmAsStandalone"}, _self.HostConnectFault);
    _self.CannotAddHostWithFTVmToDifferentCluster = merge({"type":"CannotAddHostWithFTVmToDifferentCluster"}, _self.HostConnectFault);
    _self.CannotAddHostWithFTVmToNonHACluster = merge({"type":"CannotAddHostWithFTVmToNonHACluster"}, _self.HostConnectFault);
    _self.CannotCreateFile = merge({"type":"CannotCreateFile"}, _self.FileFault);
    _self.CannotDecryptPasswords = merge({"type":"CannotDecryptPasswords"}, _self.CustomizationFault);
    _self.CannotDeleteFile = merge({"type":"CannotDeleteFile"}, _self.FileFault);
    _self.CannotModifyConfigCpuRequirements = merge({"type":"CannotModifyConfigCpuRequirements"}, _self.MigrationFault);
    _self.CannotMoveVmWithDeltaDisk = merge({"type":"CannotMoveVmWithDeltaDisk","properties":{"device":"xsd:string"}}, _self.MigrationFault);
    _self.CannotMoveVmWithNativeDeltaDisk = merge({"type":"CannotMoveVmWithNativeDeltaDisk"}, _self.MigrationFault);
    _self.CannotPowerOffVmInCluster = merge({"type":"CannotPowerOffVmInCluster","properties":{"operation":"xsd:string","vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.InvalidState);
    _self.ClockSkew = merge({"type":"ClockSkew"}, _self.HostConfigFault);
    _self.CloneFromSnapshotNotSupported = merge({"type":"CloneFromSnapshotNotSupported"}, _self.MigrationFault);
    _self.ClusterComputeResource = merge({"type":"ClusterComputeResource","properties":{"actionHistory":_self.ClusterActionHistory,"configuration":_self.ClusterConfigInfo,"drsFault":_self.ClusterDrsFaults,"drsRecommendation":_self.ClusterDrsRecommendation,"migrationHistory":_self.ClusterDrsMigration,"recommendation":_self.ClusterRecommendation},"methods":{"AddHost_Task":{"params":{"_this":"ManagedObjectReference","spec":"HostConnectSpec","asConnected":"xsd:boolean","resourcePoolP":"ManagedObjectReferencetoaResourcePool","license":"xsd:string"},"returns":"ManagedObjectReference"},"ApplyRecommendation":{"params":{"_this":"ManagedObjectReference","key":"xsd:string"},"returns":null},"CancelRecommendation":{"params":{"_this":"ManagedObjectReference","key":"xsd:string"},"returns":null},"ClusterEnterMaintenanceMode":{"params":{"_this":"ManagedObjectReference","hostP":"ManagedObjectReferencetoaHostSystem","option":"OptionValue"},"returns":"ClusterEnterMaintenanceResult"},"MoveHostInto_Task":{"params":{"_this":"ManagedObjectReference","hostP":"ManagedObjectReferencetoaHostSystem","resourcePool":"ManagedObjectReferencetoaResourcePool"},"returns":"ManagedObjectReference"},"MoveInto_Task":{"params":{"_this":"ManagedObjectReference","hostP":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"RecommendHostsForVm":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","pool":"ManagedObjectReferencetoaResourcePool"},"returns":"ClusterHostRecommendation"},"ReconfigureCluster_Task":{"params":{"_this":"ManagedObjectReference","spec":"ClusterConfigSpec","modify":"xsd:boolean"},"returns":"ManagedObjectReference"},"RefreshRecommendation":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RetrieveDasAdvancedRuntimeInfo":{"params":{"_this":"ManagedObjectReference"},"returns":"ClusterDasAdvancedRuntimeInfo"}}}, _self.ComputeResource);
    _self.CollectorAddressUnset = merge({"type":"CollectorAddressUnset"}, _self.DvsFault);
    _self.ConflictingConfiguration = merge({"type":"ConflictingConfiguration","properties":{"configInConflict":_self.ConflictingConfigurationConfig}}, _self.DvsFault);
    _self.CpuIncompatible = merge({"type":"CpuIncompatible","properties":{"desiredBits":"xsd:string","host":_self.ManagedObjectReference,"level":"xsd:int","registerBits":"xsd:string","registerName":"xsd:string"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.CpuIncompatible1ECX = merge({"type":"CpuIncompatible1ECX","properties":{"aes":"xsd:boolean","other":"xsd:boolean","otherOnly":"xsd:boolean","pclmulqdq":"xsd:boolean","sse3":"xsd:boolean","sse41":"xsd:boolean","sse42":"xsd:boolean","ssse3":"xsd:boolean"}}, _self.CpuIncompatible);
    _self.CpuIncompatible81EDX = merge({"type":"CpuIncompatible81EDX","properties":{"ffxsr":"xsd:boolean","lm":"xsd:boolean","nx":"xsd:boolean","other":"xsd:boolean","otherOnly":"xsd:boolean","rdtscp":"xsd:boolean"}}, _self.CpuIncompatible);
    _self.DatacenterMismatch = merge({"type":"DatacenterMismatch","properties":{"expectedDatacenter":_self.ManagedObjectReference,"invalidArgument":_self.DatacenterMismatchArgument}}, _self.MigrationFault);
    _self.DatastoreNotWritableOnHost = merge({"type":"DatastoreNotWritableOnHost","properties":{"host":_self.ManagedObjectReference}}, _self.InvalidDatastore);
    _self.DestinationSwitchFull = merge({"type":"DestinationSwitchFull"}, _self.CannotAccessNetwork);
    _self.DeviceNotSupported = merge({"type":"DeviceNotSupported","properties":{"device":"xsd:string","reason":"xsd:string"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.DirectoryNotEmpty = merge({"type":"DirectoryNotEmpty"}, _self.FileFault);
    _self.DisableAdminNotSupported = merge({"type":"DisableAdminNotSupported"}, _self.HostConfigFault);
    _self.DisallowedMigrationDeviceAttached = merge({"type":"DisallowedMigrationDeviceAttached","properties":{"fault":_self.LocalizedMethodFault}}, _self.MigrationFault);
    _self.DiskHasPartitions = merge({"type":"DiskHasPartitions"}, _self.VsanDiskFault);
    _self.DiskIsLastRemainingNonSSD = merge({"type":"DiskIsLastRemainingNonSSD"}, _self.VsanDiskFault);
    _self.DiskIsNonLocal = merge({"type":"DiskIsNonLocal"}, _self.VsanDiskFault);
    _self.DiskIsUSB = merge({"type":"DiskIsUSB"}, _self.VsanDiskFault);
    _self.DiskMoveTypeNotSupported = merge({"type":"DiskMoveTypeNotSupported"}, _self.MigrationFault);
    _self.DiskNotSupported = merge({"type":"DiskNotSupported","properties":{"disk":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.DiskTooSmall = merge({"type":"DiskTooSmall"}, _self.VsanDiskFault);
    _self.DrsVmotionIncompatibleFault = merge({"type":"DrsVmotionIncompatibleFault","properties":{"host":_self.ManagedObjectReference}}, _self.VirtualHardwareCompatibilityIssue);
    _self.DuplicateDisks = merge({"type":"DuplicateDisks"}, _self.VsanDiskFault);
    _self.DvsApplyOperationFault = merge({"type":"DvsApplyOperationFault","properties":{"objectFault":_self.DvsApplyOperationFaultFaultOnObject}}, _self.DvsFault);
    _self.EVCAdmissionFailed = merge({"type":"EVCAdmissionFailed","properties":{"faults":_self.LocalizedMethodFault}}, _self.NotSupportedHostInCluster);
    _self.EVCAdmissionFailedCPUFeaturesForMode = merge({"type":"EVCAdmissionFailedCPUFeaturesForMode","properties":{"currentEVCModeKey":"xsd:string"}}, _self.EVCAdmissionFailed);
    _self.EVCAdmissionFailedCPUModel = merge({"type":"EVCAdmissionFailedCPUModel"}, _self.EVCAdmissionFailed);
    _self.EVCAdmissionFailedCPUModelForMode = merge({"type":"EVCAdmissionFailedCPUModelForMode","properties":{"currentEVCModeKey":"xsd:string"}}, _self.EVCAdmissionFailed);
    _self.EVCAdmissionFailedCPUVendor = merge({"type":"EVCAdmissionFailedCPUVendor","properties":{"clusterCPUVendor":"xsd:string","hostCPUVendor":"xsd:string"}}, _self.EVCAdmissionFailed);
    _self.EVCAdmissionFailedCPUVendorUnknown = merge({"type":"EVCAdmissionFailedCPUVendorUnknown"}, _self.EVCAdmissionFailed);
    _self.EVCAdmissionFailedHostDisconnected = merge({"type":"EVCAdmissionFailedHostDisconnected"}, _self.EVCAdmissionFailed);
    _self.EVCAdmissionFailedHostSoftware = merge({"type":"EVCAdmissionFailedHostSoftware"}, _self.EVCAdmissionFailed);
    _self.EVCAdmissionFailedHostSoftwareForMode = merge({"type":"EVCAdmissionFailedHostSoftwareForMode"}, _self.EVCAdmissionFailed);
    _self.EVCAdmissionFailedVmActive = merge({"type":"EVCAdmissionFailedVmActive"}, _self.EVCAdmissionFailed);
    _self.ExpiredFeatureLicense = merge({"type":"ExpiredFeatureLicense","properties":{"count":"xsd:int","expirationDate":"xsd:dateTime","feature":"xsd:string"}}, _self.NotEnoughLicenses);
    _self.FailToEnableSPBM = merge({"type":"FailToEnableSPBM","properties":{"cs":_self.ManagedObjectReference,"csName":"xsd:string","hostLicenseStates":_self.ComputeResourceHostSPBMLicenseInfo}}, _self.NotEnoughLicenses);
    _self.FaultToleranceAntiAffinityViolated = merge({"type":"FaultToleranceAntiAffinityViolated","properties":{"host":_self.ManagedObjectReference,"hostName":"xsd:string"}}, _self.MigrationFault);
    _self.FaultToleranceCpuIncompatible = merge({"type":"FaultToleranceCpuIncompatible","properties":{"family":"xsd:boolean","model":"xsd:boolean","stepping":"xsd:boolean"}}, _self.CpuIncompatible);
    _self.FaultToleranceNeedsThickDisk = merge({"type":"FaultToleranceNeedsThickDisk","properties":{"vmName":"xsd:string"}}, _self.MigrationFault);
    _self.FaultToleranceNotSameBuild = merge({"type":"FaultToleranceNotSameBuild","properties":{"build":"xsd:string"}}, _self.MigrationFault);
    _self.FeatureRequirementsNotMet = merge({"type":"FeatureRequirementsNotMet","properties":{"featureRequirement":_self.VirtualMachineFeatureRequirement,"host":_self.ManagedObjectReference,"vm":_self.ManagedObjectReference}}, _self.VirtualHardwareCompatibilityIssue);
    _self.FileAlreadyExists = merge({"type":"FileAlreadyExists"}, _self.FileFault);
    _self.FileBackedPortNotSupported = merge({"type":"FileBackedPortNotSupported"}, _self.DeviceNotSupported);
    _self.FilesystemQuiesceFault = merge({"type":"FilesystemQuiesceFault"}, _self.SnapshotFault);
    _self.FullStorageVMotionNotSupported = merge({"type":"FullStorageVMotionNotSupported"}, _self.MigrationFeatureNotSupported);
    _self.GuestAuthenticationChallenge = merge({"type":"GuestAuthenticationChallenge","properties":{"serverChallenge":_self.GuestAuthentication,"sessionID":"xsd:long"}}, _self.GuestOperationsFault);
    _self.GuestComponentsOutOfDate = merge({"type":"GuestComponentsOutOfDate"}, _self.GuestOperationsFault);
    _self.HAErrorsAtDest = merge({"type":"HAErrorsAtDest"}, _self.MigrationFault);
    _self.HostAccessRestrictedToManagementServer = merge({"type":"HostAccessRestrictedToManagementServer","properties":{"managementServer":"xsd:string"}}, _self.NotSupported);
    _self.HostConfigFailed = merge({"type":"HostConfigFailed","properties":{"failure":_self.LocalizedMethodFault}}, _self.HostConfigFault);
    _self.HostInventoryFull = merge({"type":"HostInventoryFull","properties":{"capacity":"xsd:int"}}, _self.NotEnoughLicenses);
    _self.HotSnapshotMoveNotSupported = merge({"type":"HotSnapshotMoveNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.IDEDiskNotSupported = merge({"type":"IDEDiskNotSupported"}, _self.DiskNotSupported);
    _self.InaccessibleDatastore = merge({"type":"InaccessibleDatastore","properties":{"detail":"xsd:string"}}, _self.InvalidDatastore);
    _self.IncompatibleDefaultDevice = merge({"type":"IncompatibleDefaultDevice","properties":{"device":"xsd:string"}}, _self.MigrationFault);
    _self.IncompatibleSetting = merge({"type":"IncompatibleSetting","properties":{"conflictingProperty":"xsd:string"}}, _self.InvalidArgument);
    _self.IncorrectHostInformation = merge({"type":"IncorrectHostInformation"}, _self.NotEnoughLicenses);
    _self.IndependentDiskVMotionNotSupported = merge({"type":"IndependentDiskVMotionNotSupported"}, _self.MigrationFeatureNotSupported);
    _self.InsufficientAgentVmsDeployed = merge({"type":"InsufficientAgentVmsDeployed","properties":{"currentNumAgentVms":"xsd:int","hostName":"xsd:string","requiredNumAgentVms":"xsd:int"}}, _self.InsufficientResourcesFault);
    _self.InsufficientCpuResourcesFault = merge({"type":"InsufficientCpuResourcesFault","properties":{"requested":"xsd:long","unreserved":"xsd:long"}}, _self.InsufficientResourcesFault);
    _self.InsufficientDisks = merge({"type":"InsufficientDisks"}, _self.VsanDiskFault);
    _self.InsufficientFailoverResourcesFault = merge({"type":"InsufficientFailoverResourcesFault"}, _self.InsufficientResourcesFault);
    _self.InsufficientHostCapacityFault = merge({"type":"InsufficientHostCapacityFault","properties":{"host":_self.ManagedObjectReference}}, _self.InsufficientResourcesFault);
    _self.InsufficientHostCpuCapacityFault = merge({"type":"InsufficientHostCpuCapacityFault","properties":{"requested":"xsd:long","unreserved":"xsd:long"}}, _self.InsufficientHostCapacityFault);
    _self.InsufficientHostMemoryCapacityFault = merge({"type":"InsufficientHostMemoryCapacityFault","properties":{"requested":"xsd:long","unreserved":"xsd:long"}}, _self.InsufficientHostCapacityFault);
    _self.InsufficientMemoryResourcesFault = merge({"type":"InsufficientMemoryResourcesFault","properties":{"requested":"xsd:long","unreserved":"xsd:long"}}, _self.InsufficientResourcesFault);
    _self.InsufficientPerCpuCapacity = merge({"type":"InsufficientPerCpuCapacity"}, _self.InsufficientHostCapacityFault);
    _self.InsufficientStandbyCpuResource = merge({"type":"InsufficientStandbyCpuResource","properties":{"available":"xsd:long","requested":"xsd:long"}}, _self.InsufficientStandbyResource);
    _self.InsufficientStandbyMemoryResource = merge({"type":"InsufficientStandbyMemoryResource","properties":{"available":"xsd:long","requested":"xsd:long"}}, _self.InsufficientStandbyResource);
    _self.InUseFeatureManipulationDisallowed = merge({"type":"InUseFeatureManipulationDisallowed"}, _self.NotEnoughLicenses);
    _self.InvalidBundle = merge({"type":"InvalidBundle"}, _self.PlatformConfigFault);
    _self.InvalidCAMCertificate = merge({"type":"InvalidCAMCertificate"}, _self.InvalidCAMServer);
    _self.InvalidClientCertificate = merge({"type":"InvalidClientCertificate"}, _self.InvalidLogin);
    _self.InvalidDatastoreState = merge({"type":"InvalidDatastoreState","properties":{"datastoreName":"xsd:string"}}, _self.InvalidState);
    _self.InvalidDeviceSpec = merge({"type":"InvalidDeviceSpec","properties":{"deviceIndex":"xsd:int"}}, _self.InvalidVmConfig);
    _self.InvalidDiskFormat = merge({"type":"InvalidDiskFormat"}, _self.InvalidFormat);
    _self.InvalidEditionLicense = merge({"type":"InvalidEditionLicense","properties":{"feature":"xsd:string"}}, _self.NotEnoughLicenses);
    _self.InvalidHostState = merge({"type":"InvalidHostState","properties":{"host":_self.ManagedObjectReference}}, _self.InvalidState);
    _self.InvalidNasCredentials = merge({"type":"InvalidNasCredentials","properties":{"userName":"xsd:string"}}, _self.NasConfigFault);
    _self.InvalidNetworkInType = merge({"type":"InvalidNetworkInType"}, _self.VAppPropertyFault);
    _self.InvalidNetworkResource = merge({"type":"InvalidNetworkResource","properties":{"remoteHost":"xsd:string","remotePath":"xsd:string"}}, _self.NasConfigFault);
    _self.InvalidPowerState = merge({"type":"InvalidPowerState","properties":{"existingState":_self.VirtualMachinePowerState,"requestedState":_self.VirtualMachinePowerState}}, _self.InvalidState);
    _self.InvalidPropertyType = merge({"type":"InvalidPropertyType"}, _self.VAppPropertyFault);
    _self.InvalidPropertyValue = merge({"type":"InvalidPropertyValue"}, _self.VAppPropertyFault);
    _self.InventoryHasStandardAloneHosts = merge({"type":"InventoryHasStandardAloneHosts","properties":{"hosts":"xsd:string[]"}}, _self.NotEnoughLicenses);
    _self.LargeRDMConversionNotSupported = merge({"type":"LargeRDMConversionNotSupported","properties":{"device":"xsd:string"}}, _self.MigrationFault);
    _self.LegacyNetworkInterfaceInUse = merge({"type":"LegacyNetworkInterfaceInUse"}, _self.CannotAccessNetwork);
    _self.LicenseDowngradeDisallowed = merge({"type":"LicenseDowngradeDisallowed","properties":{"edition":"xsd:string","entityId":"xsd:string","features":_self.KeyAnyValue}}, _self.NotEnoughLicenses);
    _self.LicenseExpired = merge({"type":"LicenseExpired","properties":{"licenseKey":"xsd:string"}}, _self.NotEnoughLicenses);
    _self.LicenseKeyEntityMismatch = merge({"type":"LicenseKeyEntityMismatch"}, _self.NotEnoughLicenses);
    _self.LicenseRestricted = merge({"type":"LicenseRestricted"}, _self.NotEnoughLicenses);
    _self.LicenseSourceUnavailable = merge({"type":"LicenseSourceUnavailable","properties":{"licenseSource":_self.LicenseSource}}, _self.NotEnoughLicenses);
    _self.MaintenanceModeFileMove = merge({"type":"MaintenanceModeFileMove"}, _self.MigrationFault);
    _self.MemorySizeNotRecommended = merge({"type":"MemorySizeNotRecommended","properties":{"maxMemorySizeMB":"xsd:int","memorySizeMB":"xsd:int","minMemorySizeMB":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.MemorySizeNotSupported = merge({"type":"MemorySizeNotSupported","properties":{"maxMemorySizeMB":"xsd:int","memorySizeMB":"xsd:int","minMemorySizeMB":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.MemorySizeNotSupportedByDatastore = merge({"type":"MemorySizeNotSupportedByDatastore","properties":{"datastore":_self.ManagedObjectReference,"maxMemorySizeMB":"xsd:int","memorySizeMB":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.MemorySnapshotOnIndependentDisk = merge({"type":"MemorySnapshotOnIndependentDisk"}, _self.SnapshotFault);
    _self.MigrationDisabled = merge({"type":"MigrationDisabled"}, _self.MigrationFault);
    _self.MissingController = merge({"type":"MissingController"}, _self.InvalidDeviceSpec);
    _self.MissingIpPool = merge({"type":"MissingIpPool"}, _self.VAppPropertyFault);
    _self.MissingNetworkIpConfig = merge({"type":"MissingNetworkIpConfig"}, _self.VAppPropertyFault);
    _self.MissingPowerOffConfiguration = merge({"type":"MissingPowerOffConfiguration"}, _self.VAppConfigFault);
    _self.MissingPowerOnConfiguration = merge({"type":"MissingPowerOnConfiguration"}, _self.VAppConfigFault);
    _self.MultipleSnapshotsNotSupported = merge({"type":"MultipleSnapshotsNotSupported"}, _self.SnapshotFault);
    _self.NoAvailableIp = merge({"type":"NoAvailableIp","properties":{"network":_self.ManagedObjectReference}}, _self.VAppPropertyFault);
    _self.NoLicenseServerConfigured = merge({"type":"NoLicenseServerConfigured"}, _self.NotEnoughLicenses);
    _self.NonPersistentDisksNotSupported = merge({"type":"NonPersistentDisksNotSupported"}, _self.DeviceNotSupported);
    _self.NonVmwareOuiMacNotSupportedHost = merge({"type":"NonVmwareOuiMacNotSupportedHost","properties":{"hostName":"xsd:string"}}, _self.NotSupportedHost);
    _self.NotEnoughCpus = merge({"type":"NotEnoughCpus","properties":{"numCpuDest":"xsd:int","numCpuVm":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.NotEnoughLogicalCpus = merge({"type":"NotEnoughLogicalCpus","properties":{"host":_self.ManagedObjectReference}}, _self.NotEnoughCpus);
    _self.NotUserConfigurableProperty = merge({"type":"NotUserConfigurableProperty"}, _self.VAppPropertyFault);
    _self.NoVcManagedIpConfigured = merge({"type":"NoVcManagedIpConfigured"}, _self.VAppPropertyFault);
    _self.NoVmInVApp = merge({"type":"NoVmInVApp"}, _self.VAppConfigFault);
    _self.NumVirtualCoresPerSocketNotSupported = merge({"type":"NumVirtualCoresPerSocketNotSupported","properties":{"maxSupportedCoresPerSocketDest":"xsd:int","numCoresPerSocketVm":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.NumVirtualCpusNotSupported = merge({"type":"NumVirtualCpusNotSupported","properties":{"maxSupportedVcpusDest":"xsd:int","numCpuVm":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.OvfAttribute = merge({"type":"OvfAttribute","properties":{"attributeName":"xsd:string","elementName":"xsd:string"}}, _self.OvfInvalidPackage);
    _self.OvfConstraint = merge({"type":"OvfConstraint","properties":{"name":"xsd:string"}}, _self.OvfInvalidPackage);
    _self.OvfConsumerCallbackFault = merge({"type":"OvfConsumerCallbackFault","properties":{"extensionKey":"xsd:string","extensionName":"xsd:string"}}, _self.OvfFault);
    _self.OvfConsumerCommunicationError = merge({"type":"OvfConsumerCommunicationError","properties":{"description":"xsd:string"}}, _self.OvfConsumerCallbackFault);
    _self.OvfConsumerFault = merge({"type":"OvfConsumerFault","properties":{"errorKey":"xsd:string","message":"xsd:string","params":_self.KeyValue}}, _self.OvfConsumerCallbackFault);
    _self.OvfConsumerInvalidSection = merge({"type":"OvfConsumerInvalidSection","properties":{"description":"xsd:string","lineNumber":"xsd:int"}}, _self.OvfConsumerCallbackFault);
    _self.OvfConsumerUndeclaredSection = merge({"type":"OvfConsumerUndeclaredSection","properties":{"qualifiedSectionType":"xsd:string"}}, _self.OvfConsumerCallbackFault);
    _self.OvfConsumerUndefinedPrefix = merge({"type":"OvfConsumerUndefinedPrefix","properties":{"prefix":"xsd:string"}}, _self.OvfConsumerCallbackFault);
    _self.OvfCpuCompatibility = merge({"type":"OvfCpuCompatibility","properties":{"desiredRegisterValue":"xsd:string","level":"xsd:int","registerName":"xsd:string","registerValue":"xsd:string"}}, _self.OvfImport);
    _self.OvfCpuCompatibilityCheckNotSupported = merge({"type":"OvfCpuCompatibilityCheckNotSupported"}, _self.OvfImport);
    _self.OvfDiskMappingNotFound = merge({"type":"OvfDiskMappingNotFound","properties":{"diskName":"xsd:string","vmName":"xsd:string"}}, _self.OvfSystemFault);
    _self.OvfDiskOrderConstraint = merge({"type":"OvfDiskOrderConstraint"}, _self.OvfConstraint);
    _self.OvfElement = merge({"type":"OvfElement","properties":{"name":"xsd:string"}}, _self.OvfInvalidPackage);
    _self.OvfElementInvalidValue = merge({"type":"OvfElementInvalidValue","properties":{"value":"xsd:string"}}, _self.OvfElement);
    _self.OvfExport = merge({"type":"OvfExport"}, _self.OvfFault);
    _self.OvfExportFailed = merge({"type":"OvfExportFailed"}, _self.OvfExport);
    _self.OvfHardwareCheck = merge({"type":"OvfHardwareCheck"}, _self.OvfImport);
    _self.OvfHardwareExport = merge({"type":"OvfHardwareExport","properties":{"device":_self.VirtualDevice,"vmPath":"xsd:string"}}, _self.OvfExport);
    _self.OvfHostResourceConstraint = merge({"type":"OvfHostResourceConstraint","properties":{"value":"xsd:string"}}, _self.OvfConstraint);
    _self.OvfHostValueNotParsed = merge({"type":"OvfHostValueNotParsed","properties":{"property":"xsd:string","value":"xsd:string"}}, _self.OvfSystemFault);
    _self.OvfInternalError = merge({"type":"OvfInternalError"}, _self.OvfSystemFault);
    _self.OvfInvalidValue = merge({"type":"OvfInvalidValue","properties":{"value":"xsd:string"}}, _self.OvfAttribute);
    _self.OvfInvalidValueConfiguration = merge({"type":"OvfInvalidValueConfiguration"}, _self.OvfInvalidValue);
    _self.OvfInvalidValueEmpty = merge({"type":"OvfInvalidValueEmpty"}, _self.OvfInvalidValue);
    _self.OvfInvalidValueFormatMalformed = merge({"type":"OvfInvalidValueFormatMalformed"}, _self.OvfInvalidValue);
    _self.OvfInvalidValueReference = merge({"type":"OvfInvalidValueReference"}, _self.OvfInvalidValue);
    _self.OvfInvalidVmName = merge({"type":"OvfInvalidVmName","properties":{"name":"xsd:string"}}, _self.OvfUnsupportedPackage);
    _self.OvfMissingAttribute = merge({"type":"OvfMissingAttribute"}, _self.OvfAttribute);
    _self.OvfMissingElement = merge({"type":"OvfMissingElement"}, _self.OvfElement);
    _self.OvfMissingElementNormalBoundary = merge({"type":"OvfMissingElementNormalBoundary","properties":{"boundary":"xsd:string"}}, _self.OvfMissingElement);
    _self.OvfNoHostNic = merge({"type":"OvfNoHostNic"}, _self.OvfUnsupportedPackage);
    _self.OvfNoSupportedHardwareFamily = merge({"type":"OvfNoSupportedHardwareFamily","properties":{"version":"xsd:string"}}, _self.OvfUnsupportedPackage);
    _self.OvfPropertyExport = merge({"type":"OvfPropertyExport","properties":{"type":"xsd:string","value":"xsd:string"}}, _self.OvfExport);
    _self.OvfPropertyNetworkExport = merge({"type":"OvfPropertyNetworkExport","properties":{"network":"xsd:string"}}, _self.OvfExport);
    _self.OvfUnableToExportDisk = merge({"type":"OvfUnableToExportDisk","properties":{"diskName":"xsd:string"}}, _self.OvfHardwareExport);
    _self.OvfUnexpectedElement = merge({"type":"OvfUnexpectedElement"}, _self.OvfElement);
    _self.OvfUnknownDeviceBacking = merge({"type":"OvfUnknownDeviceBacking","properties":{"backing":_self.VirtualDeviceBackingInfo}}, _self.OvfHardwareExport);
    _self.OvfUnsupportedAttribute = merge({"type":"OvfUnsupportedAttribute","properties":{"attributeName":"xsd:string","elementName":"xsd:string"}}, _self.OvfUnsupportedPackage);
    _self.OvfUnsupportedAttributeValue = merge({"type":"OvfUnsupportedAttributeValue","properties":{"value":"xsd:string"}}, _self.OvfUnsupportedAttribute);
    _self.OvfUnsupportedDeviceExport = merge({"type":"OvfUnsupportedDeviceExport"}, _self.OvfHardwareExport);
    _self.OvfUnsupportedElement = merge({"type":"OvfUnsupportedElement","properties":{"name":"xsd:string"}}, _self.OvfUnsupportedPackage);
    _self.OvfUnsupportedElementValue = merge({"type":"OvfUnsupportedElementValue","properties":{"value":"xsd:string"}}, _self.OvfUnsupportedElement);
    _self.OvfUnsupportedSection = merge({"type":"OvfUnsupportedSection","properties":{"info":"xsd:string"}}, _self.OvfUnsupportedElement);
    _self.OvfWrongElement = merge({"type":"OvfWrongElement"}, _self.OvfElement);
    _self.PatchAlreadyInstalled = merge({"type":"PatchAlreadyInstalled"}, _self.PatchNotApplicable);
    _self.PatchInstallFailed = merge({"type":"PatchInstallFailed","properties":{"rolledBack":"xsd:boolean"}}, _self.PlatformConfigFault);
    _self.PatchIntegrityError = merge({"type":"PatchIntegrityError"}, _self.PlatformConfigFault);
    _self.PatchMetadataCorrupted = merge({"type":"PatchMetadataCorrupted"}, _self.PatchMetadataInvalid);
    _self.PatchMissingDependencies = merge({"type":"PatchMissingDependencies","properties":{"prerequisiteLib":"xsd:string[]","prerequisitePatch":"xsd:string[]"}}, _self.PatchNotApplicable);
    _self.PowerOnFtSecondaryTimedout = merge({"type":"PowerOnFtSecondaryTimedout","properties":{"timeout":"xsd:int","vm":_self.ManagedObjectReference,"vmName":"xsd:string"}}, _self.Timedout);
    _self.QuiesceDatastoreIOForHAFailed = merge({"type":"QuiesceDatastoreIOForHAFailed","properties":{"ds":_self.ManagedObjectReference,"dsName":"xsd:string","host":_self.ManagedObjectReference,"hostName":"xsd:string"}}, _self.ResourceInUse);
    _self.RawDiskNotSupported = merge({"type":"RawDiskNotSupported"}, _self.DeviceNotSupported);
    _self.RDMNotSupported = merge({"type":"RDMNotSupported"}, _self.DeviceNotSupported);
    _self.RemoteDeviceNotSupported = merge({"type":"RemoteDeviceNotSupported"}, _self.DeviceNotSupported);
    _self.ReplicationConfigFault = merge({"type":"ReplicationConfigFault"}, _self.ReplicationFault);
    _self.ReplicationDiskConfigFault = merge({"type":"ReplicationDiskConfigFault","properties":{"key":"xsd:int","reason":"xsd:string","vmRef":_self.ManagedObjectReference}}, _self.ReplicationConfigFault);
    _self.ReplicationVmConfigFault = merge({"type":"ReplicationVmConfigFault","properties":{"reason":"xsd:string","vmRef":_self.ManagedObjectReference}}, _self.ReplicationConfigFault);
    _self.SharedBusControllerNotSupported = merge({"type":"SharedBusControllerNotSupported"}, _self.DeviceNotSupported);
    _self.SnapshotCloneNotSupported = merge({"type":"SnapshotCloneNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.SnapshotDisabled = merge({"type":"SnapshotDisabled"}, _self.SnapshotFault);
    _self.VirtualMachineConfigSpec = merge({"type":"VirtualMachineConfigSpec","properties":{"alternateGuestName":"xsd:string","annotation":"xsd:string","bootOptions":_self.VirtualMachineBootOptions,"changeTrackingEnabled":"xsd:boolean","changeVersion":"xsd:string","consolePreferences":_self.VirtualMachineConsolePreferences,"cpuAffinity":_self.VirtualMachineAffinityInfo,"cpuAllocation":_self.ResourceAllocationInfo,"cpuFeatureMask":_self.VirtualMachineCpuIdInfoSpec,"cpuHotAddEnabled":"xsd:boolean","cpuHotRemoveEnabled":"xsd:boolean","deviceChange":_self.VirtualDeviceConfigSpec,"extraConfig":_self.OptionValue,"files":_self.VirtualMachineFileInfo,"firmware":"xsd:string","flags":_self.VirtualMachineFlagInfo,"ftInfo":_self.FaultToleranceConfigInfo,"guestAutoLockEnabled":"xsd:boolean","guestId":"xsd:string","instanceUuid":"xsd:string","latencySensitivity":_self.LatencySensitivity,"locationId":"xsd:string","managedBy":_self.ManagedByInfo,"maxMksConnections":"xsd:int","memoryAffinity":_self.VirtualMachineAffinityInfo,"memoryAllocation":_self.ResourceAllocationInfo,"memoryHotAddEnabled":"xsd:boolean","memoryMB":"xsd:long","memoryReservationLockedToMax":"xsd:boolean","name":"xsd:string","nestedHVEnabled":"xsd:boolean","networkShaper":_self.VirtualMachineNetworkShaperInfo,"npivDesiredNodeWwns":"xsd:short","npivDesiredPortWwns":"xsd:short","npivNodeWorldWideName":"xsd:long[]","npivOnNonRdmDisks":"xsd:boolean","npivPortWorldWideName":"xsd:long[]","npivTemporaryDisabled":"xsd:boolean","npivWorldWideNameOp":"xsd:string","npivWorldWideNameType":"xsd:string","numCoresPerSocket":"xsd:int","numCPUs":"xsd:int","powerOpInfo":_self.VirtualMachineDefaultPowerOpInfo,"scheduledHardwareUpgradeInfo":_self.ScheduledHardwareUpgradeInfo,"swapPlacement":"xsd:string","tools":_self.ToolsConfigInfo,"uuid":"xsd:string","vAppConfig":_self.VmConfigSpec,"vAppConfigRemoved":"xsd:boolean","vAssertsEnabled":"xsd:boolean","version":"xsd:string","virtualICH7MPresent":"xsd:boolean","virtualSMCPresent":"xsd:boolean","vmProfile":_self.VirtualMachineProfileSpec,"vPMCEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.StorageVmotionIncompatible = merge({"type":"StorageVmotionIncompatible","properties":{"datastore":_self.ManagedObjectReference}}, _self.VirtualHardwareCompatibilityIssue);
    _self.SwapDatastoreNotWritableOnHost = merge({"type":"SwapDatastoreNotWritableOnHost"}, _self.DatastoreNotWritableOnHost);
    _self.UnconfiguredPropertyValue = merge({"type":"UnconfiguredPropertyValue"}, _self.InvalidPropertyValue);
    _self.VirtualDiskModeNotSupported = merge({"type":"VirtualDiskModeNotSupported","properties":{"mode":"xsd:string"}}, _self.DeviceNotSupported);
    _self.VirtualEthernetCardNotSupported = merge({"type":"VirtualEthernetCardNotSupported"}, _self.DeviceNotSupported);
    _self.VmBeingCreatedEvent = merge({"type":"VmBeingCreatedEvent","properties":{"configSpec":_self.VirtualMachineConfigSpec}}, _self.VmEvent);
    _self.VmfsAlreadyMounted = merge({"type":"VmfsAlreadyMounted"}, _self.VmfsMountFault);
    _self.VmfsAmbiguousMount = merge({"type":"VmfsAmbiguousMount"}, _self.VmfsMountFault);
    _self.VMINotSupported = merge({"type":"VMINotSupported"}, _self.DeviceNotSupported);
    _self.VMOnConflictDVPort = merge({"type":"VMOnConflictDVPort"}, _self.CannotAccessNetwork);
    _self.VMOnVirtualIntranet = merge({"type":"VMOnVirtualIntranet"}, _self.CannotAccessNetwork);
    _self.VmReconfiguredEvent = merge({"type":"VmReconfiguredEvent","properties":{"configSpec":_self.VirtualMachineConfigSpec}}, _self.VmEvent);
    _self.ConnectedIso = merge({"type":"ConnectedIso","properties":{"cdrom":_self.VirtualCdrom,"filename":"xsd:string"}}, _self.OvfExport);
    _self.CpuCompatibilityUnknown = merge({"type":"CpuCompatibilityUnknown"}, _self.CpuIncompatible);
    _self.DeviceBackingNotSupported = merge({"type":"DeviceBackingNotSupported","properties":{"backing":"xsd:string"}}, _self.DeviceNotSupported);
    _self.DeviceControllerNotSupported = merge({"type":"DeviceControllerNotSupported","properties":{"controller":"xsd:string"}}, _self.DeviceNotSupported);
    _self.DeviceHotPlugNotSupported = merge({"type":"DeviceHotPlugNotSupported"}, _self.InvalidDeviceSpec);
    _self.DeviceNotFound = merge({"type":"DeviceNotFound"}, _self.InvalidDeviceSpec);
    _self.DeviceUnsupportedForVmPlatform = merge({"type":"DeviceUnsupportedForVmPlatform"}, _self.InvalidDeviceSpec);
    _self.DeviceUnsupportedForVmVersion = merge({"type":"DeviceUnsupportedForVmVersion","properties":{"currentVersion":"xsd:string","expectedVersion":"xsd:string"}}, _self.InvalidDeviceSpec);
    _self.DisallowedDiskModeChange = merge({"type":"DisallowedDiskModeChange"}, _self.InvalidDeviceSpec);
    _self.DVPortNotSupported = merge({"type":"DVPortNotSupported"}, _self.DeviceBackingNotSupported);
    _self.ExpiredAddonLicense = merge({"type":"ExpiredAddonLicense"}, _self.ExpiredFeatureLicense);
    _self.ExpiredEditionLicense = merge({"type":"ExpiredEditionLicense"}, _self.ExpiredFeatureLicense);
    _self.InvalidController = merge({"type":"InvalidController","properties":{"controllerKey":"xsd:int"}}, _self.InvalidDeviceSpec);
    _self.InvalidDeviceBacking = merge({"type":"InvalidDeviceBacking"}, _self.InvalidDeviceSpec);
    _self.InvalidDeviceOperation = merge({"type":"InvalidDeviceOperation","properties":{"badFileOp":_self.VirtualDeviceConfigSpecFileOperation,"badOp":_self.VirtualDeviceConfigSpecOperation}}, _self.InvalidDeviceSpec);
    _self.InvalidHostConnectionState = merge({"type":"InvalidHostConnectionState"}, _self.InvalidHostState);
    _self.OvfConnectedDevice = merge({"type":"OvfConnectedDevice"}, _self.OvfHardwareExport);
    _self.OvfConnectedDeviceFloppy = merge({"type":"OvfConnectedDeviceFloppy","properties":{"filename":"xsd:string"}}, _self.OvfConnectedDevice);
    _self.OvfConnectedDeviceIso = merge({"type":"OvfConnectedDeviceIso","properties":{"filename":"xsd:string"}}, _self.OvfConnectedDevice);
    _self.OvfDuplicatedElementBoundary = merge({"type":"OvfDuplicatedElementBoundary","properties":{"boundary":"xsd:string"}}, _self.OvfElement);
    _self.OvfDuplicatedPropertyIdExport = merge({"type":"OvfDuplicatedPropertyIdExport","properties":{"fqid":"xsd:string"}}, _self.OvfExport);
    _self.OvfDuplicatedPropertyIdImport = merge({"type":"OvfDuplicatedPropertyIdImport"}, _self.OvfExport);
    _self.OvfDuplicateElement = merge({"type":"OvfDuplicateElement"}, _self.OvfElement);
    _self.OvfNoSpaceOnController = merge({"type":"OvfNoSpaceOnController","properties":{"parent":"xsd:string"}}, _self.OvfUnsupportedElement);
    _self.PhysCompatRDMNotSupported = merge({"type":"PhysCompatRDMNotSupported"}, _self.RDMNotSupported);
    _self.VirtualMachineCloneSpec = merge({"type":"VirtualMachineCloneSpec","properties":{"config":_self.VirtualMachineConfigSpec,"customization":_self.CustomizationSpec,"location":_self.VirtualMachineRelocateSpec,"memory":"xsd:boolean","powerOn":"xsd:boolean","snapshot":_self.ManagedObjectReference,"template":"xsd:boolean"}}, _self.DynamicData);
    _self.UnusedVirtualDiskBlocksNotScrubbed = merge({"type":"UnusedVirtualDiskBlocksNotScrubbed"}, _self.DeviceBackingNotSupported);
    _self.VirtualDiskBlocksNotFullyProvisioned = merge({"type":"VirtualDiskBlocksNotFullyProvisioned"}, _self.DeviceBackingNotSupported);
    _self.StoragePlacementSpec = merge({"type":"StoragePlacementSpec","properties":{"cloneName":"xsd:string","cloneSpec":_self.VirtualMachineCloneSpec,"configSpec":_self.VirtualMachineConfigSpec,"disallowPrerequisiteMoves":"xsd:boolean","folder":_self.ManagedObjectReference,"host":_self.ManagedObjectReference,"podSelectionSpec":_self.StorageDrsPodSelectionSpec,"priority":_self.VirtualMachineMovePriority,"relocateSpec":_self.VirtualMachineRelocateSpec,"resourceLeaseDurationSec":"xsd:int","resourcePool":_self.ManagedObjectReference,"type":"xsd:string","vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.OvfConsumerOstNode = merge({"type":"OvfConsumerOstNode","properties":{"child":_self.OvfConsumerOstNode,"entity":_self.ManagedObjectReference,"id":"xsd:string","section":_self.OvfConsumerOvfSection,"type":"xsd:string"}}, _self.DynamicData);
    _self.ImportSpec = merge({"type":"ImportSpec","properties":{"entityConfig":_self.VAppEntityConfigInfo,"instantiationOst":_self.OvfConsumerOstNode}}, _self.DynamicData);
    _self.OvfCreateImportSpecParams = merge({"type":"OvfCreateImportSpecParams","properties":{"diskProvisioning":"xsd:string","entityName":"xsd:string","hostSystem":_self.ManagedObjectReference,"instantiationOst":_self.OvfConsumerOstNode,"ipAllocationPolicy":"xsd:string","ipProtocol":"xsd:string","networkMapping":_self.OvfNetworkMapping,"propertyMapping":_self.KeyValue,"resourceMapping":_self.OvfResourceMap}}, _self.OvfManagerCommonParams);
    _self.OvfCreateImportSpecResult = merge({"type":"OvfCreateImportSpecResult","properties":{"error":_self.LocalizedMethodFault,"fileItem":_self.OvfFileItem,"importSpec":_self.ImportSpec,"warning":_self.LocalizedMethodFault}}, _self.DynamicData);
    _self.OvfParseDescriptorResult = merge({"type":"OvfParseDescriptorResult","properties":{"annotatedOst":_self.OvfConsumerOstNode,"annotation":"xsd:string","approximateDownloadSize":"xsd:long","approximateFlatDeploymentSize":"xsd:long","approximateSparseDeploymentSize":"xsd:long","defaultDeploymentOption":"xsd:string","defaultEntityName":"xsd:string","deploymentOption":_self.OvfDeploymentOption,"entityName":_self.KeyValue,"error":_self.LocalizedMethodFault,"eula":"xsd:string[]","ipAllocationScheme":"xsd:string[]","ipProtocols":"xsd:string[]","network":_self.OvfNetworkInfo,"productInfo":_self.VAppProductInfo,"property":_self.VAppPropertyInfo,"virtualApp":"xsd:boolean","warning":_self.LocalizedMethodFault}}, _self.DynamicData);
    _self.VirtualAppImportSpec = merge({"type":"VirtualAppImportSpec","properties":{"child":_self.ImportSpec,"name":"xsd:string","resourcePoolSpec":_self.ResourceConfigSpec,"vAppConfigSpec":_self.VAppConfigSpec}}, _self.ImportSpec);
    _self.VirtualMachineImportSpec = merge({"type":"VirtualMachineImportSpec","properties":{"configSpec":_self.VirtualMachineConfigSpec,"resPoolEntity":_self.ManagedObjectReference}}, _self.ImportSpec);
    _self.VirtualDiskFlatVer1BackingInfo = merge({"type":"VirtualDiskFlatVer1BackingInfo","properties":{"contentId":"xsd:string","diskMode":"xsd:string","parent":_self.VirtualDiskFlatVer1BackingInfo,"split":"xsd:boolean","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskFlatVer2BackingInfo = merge({"type":"VirtualDiskFlatVer2BackingInfo","properties":{"changeId":"xsd:string","contentId":"xsd:string","deltaDiskFormat":"xsd:string","deltaGrainSize":"xsd:int","digestEnabled":"xsd:boolean","diskMode":"xsd:string","eagerlyScrub":"xsd:boolean","parent":_self.VirtualDiskFlatVer2BackingInfo,"split":"xsd:boolean","thinProvisioned":"xsd:boolean","uuid":"xsd:string","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskRawDiskMappingVer1BackingInfo = merge({"type":"VirtualDiskRawDiskMappingVer1BackingInfo","properties":{"changeId":"xsd:string","compatibilityMode":"xsd:string","contentId":"xsd:string","deviceName":"xsd:string","diskMode":"xsd:string","lunUuid":"xsd:string","parent":_self.VirtualDiskRawDiskMappingVer1BackingInfo,"uuid":"xsd:string"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskSeSparseBackingInfo = merge({"type":"VirtualDiskSeSparseBackingInfo","properties":{"changeId":"xsd:string","contentId":"xsd:string","deltaDiskFormat":"xsd:string","digestEnabled":"xsd:boolean","diskMode":"xsd:string","grainSize":"xsd:int","parent":_self.VirtualDiskSeSparseBackingInfo,"uuid":"xsd:string","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskSparseVer1BackingInfo = merge({"type":"VirtualDiskSparseVer1BackingInfo","properties":{"contentId":"xsd:string","diskMode":"xsd:string","parent":_self.VirtualDiskSparseVer1BackingInfo,"spaceUsedInKB":"xsd:long","split":"xsd:boolean","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskSparseVer2BackingInfo = merge({"type":"VirtualDiskSparseVer2BackingInfo","properties":{"changeId":"xsd:string","contentId":"xsd:string","diskMode":"xsd:string","parent":_self.VirtualDiskSparseVer2BackingInfo,"spaceUsedInKB":"xsd:long","split":"xsd:boolean","uuid":"xsd:string","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualMachineSnapshotTree = merge({"type":"VirtualMachineSnapshotTree","properties":{"backupManifest":"xsd:string","childSnapshotList":_self.VirtualMachineSnapshotTree,"createTime":"xsd:dateTime","description":"xsd:string","id":"xsd:int","name":"xsd:string","quiesced":"xsd:boolean","replaySupported":"xsd:boolean","snapshot":_self.ManagedObjectReference,"state":_self.VirtualMachinePowerState,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.VirtualMachineSnapshotInfo = merge({"type":"VirtualMachineSnapshotInfo","properties":{"currentSnapshot":_self.ManagedObjectReference,"rootSnapshotList":_self.VirtualMachineSnapshotTree}}, _self.DynamicData);
    _self.VirtualMachine = merge({"type":"VirtualMachine","properties":{"capability":_self.VirtualMachineCapability,"config":_self.VirtualMachineConfigInfo,"datastore":_self.ManagedObjectReference,"environmentBrowser":_self.ManagedObjectReference,"guest":_self.GuestInfo,"guestHeartbeatStatus":_self.ManagedEntityStatus,"layout":_self.VirtualMachineFileLayout,"layoutEx":_self.VirtualMachineFileLayoutEx,"network":_self.ManagedObjectReference,"parentVApp":_self.ManagedObjectReference,"resourceConfig":_self.ResourceConfigSpec,"resourcePool":_self.ManagedObjectReference,"rootSnapshot":_self.ManagedObjectReference,"runtime":_self.VirtualMachineRuntimeInfo,"snapshot":_self.VirtualMachineSnapshotInfo,"storage":_self.VirtualMachineStorageInfo,"summary":_self.VirtualMachineSummary},"methods":{"AcquireMksTicket":{"params":{"_this":"ManagedObjectReference"},"returns":"VirtualMachineMksTicket"},"AcquireTicket":{"params":{"_this":"ManagedObjectReference","ticketType":"xsd:string"},"returns":"VirtualMachineTicket"},"AnswerVM":{"params":{"_this":"ManagedObjectReference","questionId":"xsd:string","answerChoice":"xsd:string"},"returns":null},"CheckCustomizationSpec":{"params":{"_this":"ManagedObjectReference","spec":"CustomizationSpec"},"returns":null},"CloneVM_Task":{"params":{"_this":"ManagedObjectReference","folderP":"ManagedObjectReferencetoaFolder","name":"xsd:string","spec":"VirtualMachineCloneSpec"},"returns":"ManagedObjectReference"},"ConsolidateVMDisks_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"CreateScreenshot_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"CreateSecondaryVM_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"CreateSnapshot_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","description":"xsd:string","memory":"xsd:boolean","quiesce":"xsd:boolean"},"returns":"ManagedObjectReference"},"CustomizeVM_Task":{"params":{"_this":"ManagedObjectReference","spec":"CustomizationSpec"},"returns":"ManagedObjectReference"},"DefragmentAllDisks":{"params":{"_this":"ManagedObjectReference"},"returns":null},"DisableSecondaryVM_Task":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine"},"returns":"ManagedObjectReference"},"EnableSecondaryVM_Task":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"EstimateStorageForConsolidateSnapshots_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ExportVm":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ExtractOvfEnvironment":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"MakePrimaryVM_Task":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine"},"returns":"ManagedObjectReference"},"MarkAsTemplate":{"params":{"_this":"ManagedObjectReference"},"returns":null},"MarkAsVirtualMachine":{"params":{"_this":"ManagedObjectReference","poolP":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem"},"returns":null},"MigrateVM_Task":{"params":{"_this":"ManagedObjectReference","poolP":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem","priority":"VirtualMachineMovePriority","state":"VirtualMachinePowerState"},"returns":"ManagedObjectReference"},"MountToolsInstaller":{"params":{"_this":"ManagedObjectReference"},"returns":null},"PowerOffVM_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"PowerOnVM_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"PromoteDisks_Task":{"params":{"_this":"ManagedObjectReference","unlink":"xsd:boolean","disks":"VirtualDisk"},"returns":"ManagedObjectReference"},"QueryChangedDiskAreas":{"params":{"_this":"ManagedObjectReference","snapshot":"ManagedObjectReferencetoaVirtualMachineSnapshot","deviceKey":"xsd:int","startOffset":"xsd:long","changeId":"xsd:string"},"returns":"DiskChangeInfo"},"QueryFaultToleranceCompatibility":{"params":{"_this":"ManagedObjectReference"},"returns":"MethodFault"},"QueryUnownedFiles":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"RebootGuest":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ReconfigVM_Task":{"params":{"_this":"ManagedObjectReference","spec":"VirtualMachineConfigSpec"},"returns":"ManagedObjectReference"},"RefreshStorageInfo":{"params":{"_this":"ManagedObjectReference"},"returns":null},"reloadVirtualMachineFromPath_Task":{"params":{"_this":"ManagedObjectReference","configurationPath":"xsd:string"},"returns":"ManagedObjectReference"},"RelocateVM_Task":{"params":{"_this":"ManagedObjectReference","spec":"VirtualMachineRelocateSpec","priority":"VirtualMachineMovePriority"},"returns":"ManagedObjectReference"},"RemoveAllSnapshots_Task":{"params":{"_this":"ManagedObjectReference","consolidate":"xsd:boolean"},"returns":"ManagedObjectReference"},"ResetGuestInformation":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ResetVM_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"RevertToCurrentSnapshot_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","suppressPowerOn":"xsd:boolean"},"returns":"ManagedObjectReference"},"SetDisplayTopology":{"params":{"_this":"ManagedObjectReference","displays":"VirtualMachineDisplayTopology"},"returns":null},"SetScreenResolution":{"params":{"_this":"ManagedObjectReference","width":"xsd:int","height":"xsd:int"},"returns":null},"ShutdownGuest":{"params":{"_this":"ManagedObjectReference"},"returns":null},"StandbyGuest":{"params":{"_this":"ManagedObjectReference"},"returns":null},"StartRecording_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","description":"xsd:string"},"returns":"ManagedObjectReference"},"StartReplaying_Task":{"params":{"_this":"ManagedObjectReference","replaySnapshot":"ManagedObjectReferencetoaVirtualMachineSnapshot"},"returns":"ManagedObjectReference"},"StopRecording_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"StopReplaying_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"SuspendVM_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"TerminateFaultTolerantVM_Task":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine"},"returns":"ManagedObjectReference"},"TerminateVM":{"params":{"_this":"ManagedObjectReference"},"returns":null},"TurnOffFaultToleranceForVM_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"UnmountToolsInstaller":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UnregisterVM":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UpgradeTools_Task":{"params":{"_this":"ManagedObjectReference","installerOptions":"xsd:string"},"returns":"ManagedObjectReference"},"UpgradeVM_Task":{"params":{"_this":"ManagedObjectReference","version":"xsd:string"},"returns":"ManagedObjectReference"}}}, _self.ManagedEntity);
    _self.ProfileApplyProfileProperty = merge({"type":"ProfileApplyProfileProperty","properties":{"array":"xsd:boolean","profile":_self.ApplyProfile,"propertyName":"xsd:string"}}, _self.DynamicData);
    _self.ApplyProfile = merge({"type":"ApplyProfile","properties":{"enabled":"xsd:boolean","policy":_self.ProfilePolicy,"profileTypeName":"xsd:string","profileVersion":"xsd:string","property":_self.ProfileApplyProfileProperty}}, _self.DynamicData);
    _self.DateTimeProfile = merge({"type":"DateTimeProfile"}, _self.ApplyProfile);
    _self.PnicUplinkProfile = merge({"type":"PnicUplinkProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.IpAddressProfile = merge({"type":"IpAddressProfile"}, _self.ApplyProfile);
    _self.FirewallProfileRulesetProfile = merge({"type":"FirewallProfileRulesetProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.HostMemoryProfile = merge({"type":"HostMemoryProfile"}, _self.ApplyProfile);
    _self.OptionProfile = merge({"type":"OptionProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.ServiceProfile = merge({"type":"ServiceProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.UserProfile = merge({"type":"UserProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.UserGroupProfile = merge({"type":"UserGroupProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.StaticRouteProfile = merge({"type":"StaticRouteProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.LinkProfile = merge({"type":"LinkProfile"}, _self.ApplyProfile);
    _self.NasStorageProfile = merge({"type":"NasStorageProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.NetworkProfileDnsConfigProfile = merge({"type":"NetworkProfileDnsConfigProfile"}, _self.ApplyProfile);
    _self.NetworkPolicyProfile = merge({"type":"NetworkPolicyProfile"}, _self.ApplyProfile);
    _self.PhysicalNicProfile = merge({"type":"PhysicalNicProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.NumPortsProfile = merge({"type":"NumPortsProfile"}, _self.ApplyProfile);
    _self.PermissionProfile = merge({"type":"PermissionProfile","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.VlanProfile = merge({"type":"VlanProfile"}, _self.ApplyProfile);
    _self.VirtualSwitchSelectionProfile = merge({"type":"VirtualSwitchSelectionProfile"}, _self.ApplyProfile);
    _self.ProfileApplyProfileElement = merge({"type":"ProfileApplyProfileElement","properties":{"key":"xsd:string"}}, _self.ApplyProfile);
    _self.ActiveDirectoryProfile = merge({"type":"ActiveDirectoryProfile"}, _self.ApplyProfile);
    _self.AuthenticationProfile = merge({"type":"AuthenticationProfile","properties":{"activeDirectory":_self.ActiveDirectoryProfile}}, _self.ApplyProfile);
    _self.DvsProfile = merge({"type":"DvsProfile","properties":{"key":"xsd:string","name":"xsd:string","uplink":_self.PnicUplinkProfile}}, _self.ApplyProfile);
    _self.DvsVNicProfile = merge({"type":"DvsVNicProfile","properties":{"ipConfig":_self.IpAddressProfile,"key":"xsd:string"}}, _self.ApplyProfile);
    _self.FirewallProfile = merge({"type":"FirewallProfile","properties":{"ruleset":_self.FirewallProfileRulesetProfile}}, _self.ApplyProfile);
    _self.SecurityProfile = merge({"type":"SecurityProfile","properties":{"permission":_self.PermissionProfile}}, _self.ApplyProfile);
    _self.StorageProfile = merge({"type":"StorageProfile","properties":{"nasStorage":_self.NasStorageProfile}}, _self.ApplyProfile);
    _self.IpRouteProfile = merge({"type":"IpRouteProfile","properties":{"staticRoute":_self.StaticRouteProfile}}, _self.ApplyProfile);
    _self.NetStackInstanceProfile = merge({"type":"NetStackInstanceProfile","properties":{"dnsConfig":_self.NetworkProfileDnsConfigProfile,"ipRouteConfig":_self.IpRouteProfile,"key":"xsd:string"}}, _self.ApplyProfile);
    _self.VirtualSwitchProfile = merge({"type":"VirtualSwitchProfile","properties":{"key":"xsd:string","link":_self.LinkProfile,"name":"xsd:string","networkPolicy":_self.NetworkPolicyProfile,"numPorts":_self.NumPortsProfile}}, _self.ApplyProfile);
    _self.PortGroupProfile = merge({"type":"PortGroupProfile","properties":{"key":"xsd:string","name":"xsd:string","networkPolicy":_self.NetworkPolicyProfile,"vlan":_self.VlanProfile,"vswitch":_self.VirtualSwitchSelectionProfile}}, _self.ApplyProfile);
    _self.DvsHostVNicProfile = merge({"type":"DvsHostVNicProfile"}, _self.DvsVNicProfile);
    _self.DvsServiceConsoleVNicProfile = merge({"type":"DvsServiceConsoleVNicProfile"}, _self.DvsVNicProfile);
    _self.HostPortGroupProfile = merge({"type":"HostPortGroupProfile","properties":{"ipConfig":_self.IpAddressProfile}}, _self.PortGroupProfile);
    _self.ServiceConsolePortGroupProfile = merge({"type":"ServiceConsolePortGroupProfile","properties":{"ipConfig":_self.IpAddressProfile}}, _self.PortGroupProfile);
    _self.VmPortGroupProfile = merge({"type":"VmPortGroupProfile"}, _self.PortGroupProfile);
    _self.NetworkProfile = merge({"type":"NetworkProfile","properties":{"consoleIpRouteConfig":_self.IpRouteProfile,"dnsConfig":_self.NetworkProfileDnsConfigProfile,"dvsHostNic":_self.DvsHostVNicProfile,"dvsServiceConsoleNic":_self.DvsServiceConsoleVNicProfile,"dvswitch":_self.DvsProfile,"hostPortGroup":_self.HostPortGroupProfile,"ipRouteConfig":_self.IpRouteProfile,"netStackInstance":_self.NetStackInstanceProfile,"pnic":_self.PhysicalNicProfile,"serviceConsolePortGroup":_self.ServiceConsolePortGroupProfile,"vmPortGroup":_self.VmPortGroupProfile,"vswitch":_self.VirtualSwitchProfile}}, _self.ApplyProfile);
    _self.HostApplyProfile = merge({"type":"HostApplyProfile","properties":{"authentication":_self.AuthenticationProfile,"datetime":_self.DateTimeProfile,"firewall":_self.FirewallProfile,"memory":_self.HostMemoryProfile,"network":_self.NetworkProfile,"option":_self.OptionProfile,"security":_self.SecurityProfile,"service":_self.ServiceProfile,"storage":_self.StorageProfile,"userAccount":_self.UserProfile,"usergroupAccount":_self.UserGroupProfile}}, _self.ApplyProfile);
    _self.HostProfileCompleteConfigSpec = merge({"type":"HostProfileCompleteConfigSpec","properties":{"applyProfile":_self.HostApplyProfile,"customComplyProfile":_self.ComplianceProfile,"disabledExpressionList":"xsd:string[]","disabledExpressionListChanged":"xsd:boolean","validatorHost":_self.ManagedObjectReference}}, _self.HostProfileConfigSpec);
    _self.HostProfileConfigInfo = merge({"type":"HostProfileConfigInfo","properties":{"applyProfile":_self.HostApplyProfile,"customComplyProfile":_self.ComplianceProfile,"defaultComplyLocator":_self.ComplianceLocator,"defaultComplyProfile":_self.ComplianceProfile,"disabledExpressionList":"xsd:string[]"}}, _self.ProfileConfigInfo);
    _self.HostSystemResourceInfo = merge({"type":"HostSystemResourceInfo","properties":{"child":_self.HostSystemResourceInfo,"config":_self.ResourceConfigSpec,"key":"xsd:string"}}, _self.DynamicData);
    _self.HostConfigInfo = merge({"type":"HostConfigInfo","properties":{"activeDiagnosticPartition":_self.HostDiagnosticPartition,"adminDisabled":"xsd:boolean","authenticationManagerInfo":_self.HostAuthenticationManagerInfo,"autoStart":_self.HostAutoStartManagerConfig,"cacheConfigurationInfo":_self.HostCacheConfigurationInfo,"capabilities":_self.HostNetCapabilities,"certificate":"xsd:byte[]","consoleReservation":_self.ServiceConsoleReservationInfo,"datastoreCapabilities":_self.HostDatastoreSystemCapabilities,"datastorePrincipal":"xsd:string","dateTimeInfo":_self.HostDateTimeInfo,"featureCapability":_self.HostFeatureCapability,"featureVersion":_self.HostFeatureVersionInfo,"fileSystemVolume":_self.HostFileSystemVolumeInfo,"firewall":_self.HostFirewallInfo,"flags":_self.HostFlagInfo,"graphicsInfo":_self.HostGraphicsInfo,"host":_self.ManagedObjectReference,"hyperThread":_self.HostHyperThreadScheduleInfo,"ipmi":_self.HostIpmiInfo,"localSwapDatastore":_self.ManagedObjectReference,"maskedFeatureCapability":_self.HostFeatureCapability,"multipathState":_self.HostMultipathStateInfo,"network":_self.HostNetworkInfo,"offloadCapabilities":_self.HostNetOffloadCapabilities,"option":_self.OptionValue,"optionDef":_self.OptionDef,"pciPassthruInfo":_self.HostPciPassthruInfo,"powerSystemCapability":_self.PowerSystemCapability,"powerSystemInfo":_self.PowerSystemInfo,"product":_self.AboutInfo,"service":_self.HostServiceInfo,"sslThumbprintData":_self.HostSslThumbprintInfo,"sslThumbprintInfo":_self.HostSslThumbprintInfo,"storageDevice":_self.HostStorageDeviceInfo,"systemFile":"xsd:string[]","systemResources":_self.HostSystemResourceInfo,"systemSwapConfiguration":_self.HostSystemSwapConfiguration,"vFlashConfigInfo":_self.HostVFlashManagerVFlashConfigInfo,"virtualMachineReservation":_self.VirtualMachineMemoryReservationInfo,"virtualNicManagerInfo":_self.HostVirtualNicManagerInfo,"vmotion":_self.HostVMotionInfo,"vsanHostConfig":_self.VsanHostConfigInfo,"wakeOnLanCapable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostSystem = merge({"type":"HostSystem","properties":{"capability":_self.HostCapability,"config":_self.HostConfigInfo,"configManager":_self.HostConfigManager,"datastore":_self.ManagedObjectReference,"datastoreBrowser":_self.ManagedObjectReference,"hardware":_self.HostHardwareInfo,"licensableResource":_self.HostLicensableResourceInfo,"network":_self.ManagedObjectReference,"runtime":_self.HostRuntimeInfo,"summary":_self.HostListSummary,"systemResources":_self.HostSystemResourceInfo,"vm":_self.ManagedObjectReference},"methods":{"AcquireCimServicesTicket":{"params":{"_this":"ManagedObjectReference"},"returns":"HostServiceTicket"},"DisconnectHost_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"EnterLockdownMode":{"params":{"_this":"ManagedObjectReference"},"returns":null},"EnterMaintenanceMode_Task":{"params":{"_this":"ManagedObjectReference","timeout":"xsd:int","evacuatePoweredOffVms":"xsd:boolean","maintenanceSpec":"HostMaintenanceSpec"},"returns":"ManagedObjectReference"},"ExitLockdownMode":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ExitMaintenanceMode_Task":{"params":{"_this":"ManagedObjectReference","timeout":"xsd:int"},"returns":"ManagedObjectReference"},"PowerDownHostToStandBy_Task":{"params":{"_this":"ManagedObjectReference","timeoutSec":"xsd:int","evacuatePoweredOffVms":"xsd:boolean"},"returns":"ManagedObjectReference"},"PowerUpHostFromStandBy_Task":{"params":{"_this":"ManagedObjectReference","timeoutSec":"xsd:int"},"returns":"ManagedObjectReference"},"QueryHostConnectionInfo":{"params":{"_this":"ManagedObjectReference"},"returns":"HostConnectInfo"},"QueryMemoryOverhead":{"params":{"_this":"ManagedObjectReference","memorySize":"xsd:long","videoRamSize":"xsd:int","numVcpus":"xsd:int"},"returns":"xsd:long"},"QueryMemoryOverheadEx":{"params":{"_this":"ManagedObjectReference","vmConfigInfo":"VirtualMachineConfigInfo"},"returns":"xsd:long"},"QueryTpmAttestationReport":{"params":{"_this":"ManagedObjectReference"},"returns":"HostTpmAttestationReport"},"RebootHost_Task":{"params":{"_this":"ManagedObjectReference","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"ReconfigureHostForDAS_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ReconnectHost_Task":{"params":{"_this":"ManagedObjectReference","cnxSpec":"HostConnectSpec","reconnectSpec":"HostSystemReconnectSpec"},"returns":"ManagedObjectReference"},"RetrieveHardwareUptime":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:long"},"ShutdownHost_Task":{"params":{"_this":"ManagedObjectReference","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"UpdateFlags":{"params":{"_this":"ManagedObjectReference","flagInfo":"HostFlagInfo"},"returns":null},"UpdateIpmi":{"params":{"_this":"ManagedObjectReference","ipmiInfo":"HostIpmiInfo"},"returns":null},"UpdateSystemResources":{"params":{"_this":"ManagedObjectReference","resourceInfo":"HostSystemResourceInfo"},"returns":null},"UpdateSystemSwapConfiguration":{"params":{"_this":"ManagedObjectReference","sysSwapConfig":"HostSystemSwapConfiguration"},"returns":null}}}, _self.ManagedEntity);
    _self.ProfileProfileStructureProperty = merge({"type":"ProfileProfileStructureProperty","properties":{"array":"xsd:boolean","element":_self.ProfileProfileStructure,"propertyName":"xsd:string"}}, _self.DynamicData);
    _self.ProfileProfileStructure = merge({"type":"ProfileProfileStructure","properties":{"child":_self.ProfileProfileStructureProperty,"profileTypeName":"xsd:string"}}, _self.DynamicData);


    return _self;

};