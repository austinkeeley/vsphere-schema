// vSphere Schema v2.5
module.exports = function(env) {

    var merge = env.merge;
    var _self = this;

    _self.ActionParameter = {"type":"ActionParameter","enum":{"alarm":"alarm","alarmName":"alarmName","declaringSummary":"declaringSummary","eventDescription":"eventDescription","newStatus":"newStatus","oldStatus":"oldStatus","target":"target","targetName":"targetName","triggeringSummary":"triggeringSummary"}};
    _self.ActionType = {"type":"ActionType","enum":{"HostPowerV1":"HostPowerV1","MigrationV1":"MigrationV1","VmPowerV1":"VmPowerV1"}};
    _self.AffinityType = {"type":"AffinityType","enum":{"cpu":"cpu","memory":"memory"}};
    _self.ManagedObjectReference = {"type":"ManagedObjectReference","properties":{"type":"xsd:string","value":"xsd:string"}};
    _self.ManagedEntityStatus = {"type":"ManagedEntityStatus","enum":{"gray":"gray","green":"green","red":"red","yellow":"yellow"}};
    _self.ArrayUpdateOperation = {"type":"ArrayUpdateOperation","enum":{"add":"add","edit":"edit","remove":"remove"}};
    _self.AutoStartAction = {"type":"AutoStartAction","enum":{"guestShutdown":"guestShutdown","none":"none","powerOff":"powerOff","powerOn":"powerOn","suspend":"suspend","systemDefault":"systemDefault"}};
    _self.AutoStartWaitHeartbeatSetting = {"type":"AutoStartWaitHeartbeatSetting","enum":{"no":"no","systemDefault":"systemDefault","yes":"yes"}};
    _self.DasVmPriority = {"type":"DasVmPriority","enum":{"disabled":"disabled","high":"high","low":"low","medium":"medium"}};
    _self.ClusterDasVmSettingsIsolationResponse = {"type":"ClusterDasVmSettingsIsolationResponse","enum":{"clusterIsolationResponse":"clusterIsolationResponse","none":"none","powerOff":"powerOff"}};
    _self.ClusterDasVmSettingsRestartPriority = {"type":"ClusterDasVmSettingsRestartPriority","enum":{"clusterRestartPriority":"clusterRestartPriority","disabled":"disabled","high":"high","low":"low","medium":"medium"}};
    _self.DpmBehavior = {"type":"DpmBehavior","enum":{"automated":"automated","manual":"manual"}};
    _self.DrsBehavior = {"type":"DrsBehavior","enum":{"fullyAutomated":"fullyAutomated","manual":"manual","partiallyAutomated":"partiallyAutomated"}};
    _self.HostPowerOperationType = {"type":"HostPowerOperationType","enum":{"powerOff":"powerOff","powerOn":"powerOn"}};
    _self.CustomizationNetBIOSMode = {"type":"CustomizationNetBIOSMode","enum":{"disableNetBIOS":"disableNetBIOS","enableNetBIOS":"enableNetBIOS","enableNetBIOSViaDhcp":"enableNetBIOSViaDhcp"}};
    _self.CustomizationLicenseDataMode = {"type":"CustomizationLicenseDataMode","enum":{"perSeat":"perSeat","perServer":"perServer"}};
    _self.CustomizationSysprepRebootOption = {"type":"CustomizationSysprepRebootOption","enum":{"noreboot":"noreboot","reboot":"reboot","shutdown":"shutdown"}};
    _self.DayOfWeek = {"type":"DayOfWeek","enum":{"friday":"friday","monday":"monday","saturday":"saturday","sunday":"sunday","thursday":"thursday","tuesday":"tuesday","wednesday":"wednesday"}};
    _self.DeviceNotSupportedReason = {"type":"DeviceNotSupportedReason","enum":{"guest":"guest","host":"host"}};
    _self.DiagnosticManager = {"type":"DiagnosticManager","methods":{"BrowseDiagnosticLog":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","key":"xsd:string","start":"xsd:int","lines":"xsd:int"},"returns":"DiagnosticManagerLogHeader"},"GenerateLogBundles_Task":{"params":{"_this":"ManagedObjectReference","includeDefault":"xsd:boolean","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"QueryDescriptions":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"DiagnosticManagerLogDescriptor"}}};
    _self.DiagnosticManagerLogCreator = {"type":"DiagnosticManagerLogCreator","enum":{"hostd":"hostd","install":"install","recordLog":"recordLog","serverd":"serverd","vpxa":"vpxa","vpxClient":"vpxClient","vpxd":"vpxd"}};
    _self.DiagnosticManagerLogFormat = {"type":"DiagnosticManagerLogFormat","enum":{"plain":"plain"}};
    _self.DiagnosticPartitionStorageType = {"type":"DiagnosticPartitionStorageType","enum":{"directAttached":"directAttached","networkAttached":"networkAttached"}};
    _self.DiagnosticPartitionType = {"type":"DiagnosticPartitionType","enum":{"multiHost":"multiHost","singleHost":"singleHost"}};
    _self.DrsRecommendationReasonCode = {"type":"DrsRecommendationReasonCode","enum":{"antiAffin":"antiAffin","fairnessCpuAvg":"fairnessCpuAvg","fairnessMemAvg":"fairnessMemAvg","hostMaint":"hostMaint","jointAffin":"jointAffin"}};
    _self.DynamicArray = {"type":"DynamicArray","properties":{"dynamicType":"xsd:string","val":"xsd:anyType[]"}};
    _self.DynamicProperty = {"type":"DynamicProperty","properties":{"name":"xsd:string","val":"xsd:anyType"}};
    _self.EnvironmentBrowser = {"type":"EnvironmentBrowser","properties":{"datastoreBrowser":_self.ManagedObjectReference},"methods":{"QueryConfigOption":{"params":{"_this":"ManagedObjectReference","key":"xsd:string","host":"ManagedObjectReferencetoaHostSystem"},"returns":"VirtualMachineConfigOption"},"QueryConfigOptionDescriptor":{"params":{"_this":"ManagedObjectReference"},"returns":"VirtualMachineConfigOptionDescriptor"},"QueryConfigTarget":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ConfigTarget"}}};
    _self.EventCategory = {"type":"EventCategory","enum":{"error":"error","info":"info","user":"user","warning":"warning"}};
    _self.EventFilterSpecRecursionOption = {"type":"EventFilterSpecRecursionOption","enum":{"all":"all","children":"children","self":"self"}};
    _self.FibreChannelPortType = {"type":"FibreChannelPortType","enum":{"fabric":"fabric","loop":"loop","pointToPoint":"pointToPoint","unknown":"unknown"}};
    _self.FileManager = {"type":"FileManager","methods":{"CopyDatastoreFile_Task":{"params":{"_this":"ManagedObjectReference","sourceName":"xsd:string","sourceDatacenterP":"ManagedObjectReferencetoaDatacenter","destinationName":"xsd:string","destinationDatacenterP":"ManagedObjectReferencetoaDatacenter","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"DeleteDatastoreFile_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"MakeDirectory":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter","createParentDirectories":"xsd:boolean"},"returns":null},"MoveDatastoreFile_Task":{"params":{"_this":"ManagedObjectReference","sourceName":"xsd:string","sourceDatacenterP":"ManagedObjectReferencetoaDatacenter","destinationName":"xsd:string","destinationDatacenterP":"ManagedObjectReferencetoaDatacenter","force":"xsd:boolean"},"returns":"ManagedObjectReference"}}};
    _self.MethodFault = {"type":"MethodFault","properties":{"dynamicProperty":_self.DynamicProperty,"dynamicType":"xsd:string"}};
    _self.VirtualMachineToolsStatus = {"type":"VirtualMachineToolsStatus","enum":{"toolsNotInstalled":"toolsNotInstalled","toolsNotRunning":"toolsNotRunning","toolsOk":"toolsOk","toolsOld":"toolsOld"}};
    _self.HistoryCollector = {"type":"HistoryCollector","properties":{"filter":"xsd:anyType"},"methods":{"DestroyCollector":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ResetCollector":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RewindCollector":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SetCollectorPageSize":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":null}}};
    _self.HostBootDeviceSystem = {"type":"HostBootDeviceSystem","methods":{"QueryBootDevices":{"params":{"_this":"ManagedObjectReference"},"returns":"HostBootDeviceInfo"},"UpdateBootDevice":{"params":{"_this":"ManagedObjectReference","key":"xsd:string"},"returns":null}}};
    _self.HostConfigChangeMode = {"type":"HostConfigChangeMode","enum":{"modify":"modify","replace":"replace"}};
    _self.HostConfigChangeOperation = {"type":"HostConfigChangeOperation","enum":{"add":"add","edit":"edit","remove":"remove"}};
    _self.HostCpuPackageVendor = {"type":"HostCpuPackageVendor","enum":{"amd":"amd","intel":"intel","unknown":"unknown"}};
    _self.HostDiskPartitionInfoType = {"type":"HostDiskPartitionInfoType","enum":{"extended":"extended","linuxNative":"linuxNative","linuxSwap":"linuxSwap","none":"none","ntfs":"ntfs","vmfs":"vmfs","vmkDiagnostic":"vmkDiagnostic"}};
    _self.HostFirewallRuleDirection = {"type":"HostFirewallRuleDirection","enum":{"inbound":"inbound","outbound":"outbound"}};
    _self.HostFirewallRuleProtocol = {"type":"HostFirewallRuleProtocol","enum":{"tcp":"tcp","udp":"udp"}};
    _self.HostFirmwareSystem = {"type":"HostFirmwareSystem","methods":{"BackupFirmwareConfiguration":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"QueryFirmwareConfigUploadURL":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"ResetFirmwareToFactoryDefaults":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RestoreFirmwareConfiguration":{"params":{"_this":"ManagedObjectReference","force":"xsd:boolean"},"returns":null}}};
    _self.HostHardwareElementStatus = {"type":"HostHardwareElementStatus","enum":{"Green":"Green","Red":"Red","Unknown":"Unknown","Yellow":"Yellow"}};
    _self.HostLocalAccountManager = {"type":"HostLocalAccountManager","methods":{"AssignUserToGroup":{"params":{"_this":"ManagedObjectReference","user":"xsd:string","group":"xsd:string"},"returns":null},"CreateGroup":{"params":{"_this":"ManagedObjectReference","group":"HostAccountSpec"},"returns":null},"CreateUser":{"params":{"_this":"ManagedObjectReference","user":"HostAccountSpec"},"returns":null},"RemoveGroup":{"params":{"_this":"ManagedObjectReference","groupName":"xsd:string"},"returns":null},"RemoveUser":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string"},"returns":null},"UnassignUserFromGroup":{"params":{"_this":"ManagedObjectReference","user":"xsd:string","group":"xsd:string"},"returns":null},"UpdateUser":{"params":{"_this":"ManagedObjectReference","user":"HostAccountSpec"},"returns":null}}};
    _self.HostMountMode = {"type":"HostMountMode","enum":{"readOnly":"readOnly","readWrite":"readWrite"}};
    _self.HostNumericSensorHealthState = {"type":"HostNumericSensorHealthState","enum":{"green":"green","red":"red","unknown":"unknown","yellow":"yellow"}};
    _self.HostNumericSensorType = {"type":"HostNumericSensorType","enum":{"fan":"fan","other":"other","power":"power","temperature":"temperature","voltage":"voltage"}};
    _self.HostPatchManager = {"type":"HostPatchManager","methods":{"InstallHostPatch_Task":{"params":{"_this":"ManagedObjectReference","repository":"HostPatchManagerLocator","updateID":"xsd:string","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"ScanHostPatch_Task":{"params":{"_this":"ManagedObjectReference","repository":"HostPatchManagerLocator","updateID":"xsd:string"},"returns":"ManagedObjectReference"}}};
    _self.HostPatchManagerInstallState = {"type":"HostPatchManagerInstallState","enum":{"hostRestarted":"hostRestarted","imageActive":"imageActive"}};
    _self.HostPatchManagerIntegrityStatus = {"type":"HostPatchManagerIntegrityStatus","enum":{"digestMismatch":"digestMismatch","keyExpired":"keyExpired","keyNotFound":"keyNotFound","keyRevoked":"keyRevoked","notEnoughSignatures":"notEnoughSignatures","validated":"validated","validationError":"validationError"}};
    _self.HostPatchManagerReason = {"type":"HostPatchManagerReason","enum":{"conflictLib":"conflictLib","conflictPatch":"conflictPatch","hasDependentPatch":"hasDependentPatch","missingLib":"missingLib","missingPatch":"missingPatch","obsoleted":"obsoleted"}};
    _self.HostSystemConnectionState = {"type":"HostSystemConnectionState","enum":{"connected":"connected","disconnected":"disconnected","notResponding":"notResponding"}};
    _self.HostSystemPowerState = {"type":"HostSystemPowerState","enum":{"poweredOff":"poweredOff","poweredOn":"poweredOn","standBy":"standBy","unknown":"unknown"}};
    _self.HostServicePolicy = {"type":"HostServicePolicy","enum":{"automatic":"automatic","off":"off","on":"on"}};
    _self.HostSystemIdentificationInfoIdentifier = {"type":"HostSystemIdentificationInfoIdentifier","enum":{"AssetTag":"AssetTag","ServiceTag":"ServiceTag"}};
    _self.InternetScsiSnsDiscoveryMethod = {"type":"InternetScsiSnsDiscoveryMethod","enum":{"isnsDhcp":"isnsDhcp","isnsSlp":"isnsSlp","isnsStatic":"isnsStatic"}};
    _self.InvalidCollectorVersion = merge({"type":"InvalidCollectorVersion"}, _self.MethodFault);
    _self.VirtualDeviceConfigSpecFileOperation = {"type":"VirtualDeviceConfigSpecFileOperation","enum":{"create":"create","destroy":"destroy","replace":"replace"}};
    _self.VirtualDeviceConfigSpecOperation = {"type":"VirtualDeviceConfigSpecOperation","enum":{"add":"add","edit":"edit","remove":"remove"}};
    _self.VirtualMachinePowerState = {"type":"VirtualMachinePowerState","enum":{"poweredOff":"poweredOff","poweredOn":"poweredOn","suspended":"suspended"}};
    _self.InvalidProperty = merge({"type":"InvalidProperty","properties":{"name":"xsd:string"}}, _self.MethodFault);
    _self.LicenseManagerState = {"type":"LicenseManagerState","enum":{"fault":"fault","initializing":"initializing","marginal":"marginal","normal":"normal"}};
    _self.LicenseFeatureInfoState = {"type":"LicenseFeatureInfoState","enum":{"disabled":"disabled","enabled":"enabled","optional":"optional"}};
    _self.LicenseFeatureInfoSourceRestriction = {"type":"LicenseFeatureInfoSourceRestriction","enum":{"file":"file","served":"served","unrestricted":"unrestricted"}};
    _self.LicenseFeatureInfoUnit = {"type":"LicenseFeatureInfoUnit","enum":{"cpuCore":"cpuCore","cpuPackage":"cpuPackage","host":"host","server":"server","vm":"vm"}};
    _self.LicenseManagerLicenseKey = {"type":"LicenseManagerLicenseKey","enum":{"backup":"backup","das":"das","drs":"drs","drsPower":"drsPower","esxExpress":"esxExpress","esxFull":"esxFull","esxHost":"esxHost","esxVmtn":"esxVmtn","gsxHost":"gsxHost","iscsi":"iscsi","nas":"nas","san":"san","serverHost":"serverHost","vc":"vc","vcExpress":"vcExpress","vmotion":"vmotion","vsmp":"vsmp"}};
    _self.LicenseReservationInfoState = {"type":"LicenseReservationInfoState","enum":{"licensed":"licensed","noLicense":"noLicense","notUsed":"notUsed","unlicensedUse":"unlicensedUse"}};
    _self.MetricAlarmOperator = {"type":"MetricAlarmOperator","enum":{"isAbove":"isAbove","isBelow":"isBelow"}};
    _self.WeekOfMonth = {"type":"WeekOfMonth","enum":{"first":"first","fourth":"fourth","last":"last","second":"second","third":"third"}};
    _self.MultipathState = {"type":"MultipathState","enum":{"active":"active","dead":"dead","disabled":"disabled","standby":"standby","unknown":"unknown"}};
    _self.ObjectUpdateKind = {"type":"ObjectUpdateKind","enum":{"enter":"enter","leave":"leave","modify":"modify"}};
    _self.PerfSummaryType = {"type":"PerfSummaryType","enum":{"average":"average","latest":"latest","maximum":"maximum","minimum":"minimum","none":"none","summation":"summation"}};
    _self.PerfStatsType = {"type":"PerfStatsType","enum":{"absolute":"absolute","delta":"delta","rate":"rate"}};
    _self.PerfFormat = {"type":"PerfFormat","enum":{"csv":"csv","normal":"normal"}};
    _self.PerformanceManagerUnit = {"type":"PerformanceManagerUnit","enum":{"kiloBytes":"kiloBytes","kiloBytesPerSecond":"kiloBytesPerSecond","megaBytes":"megaBytes","megaBytesPerSecond":"megaBytesPerSecond","megaHertz":"megaHertz","millisecond":"millisecond","number":"number","percent":"percent","second":"second"}};
    _self.PortGroupConnecteeType = {"type":"PortGroupConnecteeType","enum":{"host":"host","systemManagement":"systemManagement","unknown":"unknown","virtualMachine":"virtualMachine"}};
    _self.PropertyChangeOp = {"type":"PropertyChangeOp","enum":{"add":"add","assign":"assign","indirectRemove":"indirectRemove","remove":"remove"}};
    _self.PropertyCollector = {"type":"PropertyCollector","properties":{"filter":_self.ManagedObjectReference},"methods":{"CancelWaitForUpdates":{"params":{"_this":"ManagedObjectReference"},"returns":null},"CheckForUpdates":{"params":{"_this":"ManagedObjectReference","version":"xsd:string"},"returns":"UpdateSet"},"CreateFilter":{"params":{"_this":"ManagedObjectReference","spec":"PropertyFilterSpec","partialUpdates":"xsd:boolean"},"returns":"ManagedObjectReference"},"RetrieveProperties":{"params":{"_this":"ManagedObjectReference","specSet":"PropertyFilterSpec"},"returns":"ObjectContent"},"WaitForUpdates":{"params":{"_this":"ManagedObjectReference","version":"xsd:string"},"returns":"UpdateSet"}}};
    _self.RecommendationReasonCode = {"type":"RecommendationReasonCode","enum":{"antiAffin":"antiAffin","enterStandby":"enterStandby","fairnessCpuAvg":"fairnessCpuAvg","fairnessMemAvg":"fairnessMemAvg","hostMaint":"hostMaint","increaseCapacity":"increaseCapacity","jointAffin":"jointAffin","powerOnVm":"powerOnVm","powerSaving":"powerSaving","reservationCpu":"reservationCpu","reservationMem":"reservationMem"}};
    _self.RecommendationType = {"type":"RecommendationType","enum":{"V1":"V1"}};
    _self.RuntimeFault = merge({"type":"RuntimeFault"}, _self.MethodFault);
    _self.TaskInfoState = {"type":"TaskInfoState","enum":{"error":"error","queued":"queued","running":"running","success":"success"}};
    _self.ScsiLunState = {"type":"ScsiLunState","enum":{"degraded":"degraded","error":"error","lostCommunication":"lostCommunication","ok":"ok","unknownState":"unknownState"}};
    _self.ScsiLunType = {"type":"ScsiLunType","enum":{"cdrom":"cdrom","communications":"communications","disk":"disk","enclosure":"enclosure","mediaChanger":"mediaChanger","opticalDevice":"opticalDevice","printer":"printer","processor":"processor","scanner":"scanner","storageArrayController":"storageArrayController","tape":"tape","unknown":"unknown","worm":"worm"}};
    _self.SearchIndex = {"type":"SearchIndex","methods":{"FindByDatastorePath":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","path":"xsd:string"},"returns":"ManagedObjectReference"},"FindByDnsName":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","dnsName":"xsd:string","vmSearch":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindByInventoryPath":{"params":{"_this":"ManagedObjectReference","inventoryPath":"xsd:string"},"returns":"ManagedObjectReference"},"FindByIp":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","ip":"xsd:string","vmSearch":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindByUuid":{"params":{"_this":"ManagedObjectReference","datacenter":"ManagedObjectReferencetoaDatacenter","uuid":"xsd:string","vmSearch":"xsd:boolean"},"returns":"ManagedObjectReference"},"FindChild":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity","name":"xsd:string"},"returns":"ManagedObjectReference"}}};
    _self.SecurityError = merge({"type":"SecurityError"}, _self.RuntimeFault);
    _self.SharesLevel = {"type":"SharesLevel","enum":{"custom":"custom","high":"high","low":"low","normal":"normal"}};
    _self.SimpleCommandEncoding = {"type":"SimpleCommandEncoding","enum":{"CSV":"CSV","HEX":"HEX","STRING":"STRING"}};
    _self.SlpDiscoveryMethod = {"type":"SlpDiscoveryMethod","enum":{"slpAutoMulticast":"slpAutoMulticast","slpAutoUnicast":"slpAutoUnicast","slpDhcp":"slpDhcp","slpManual":"slpManual"}};
    _self.StateAlarmOperator = {"type":"StateAlarmOperator","enum":{"isEqual":"isEqual","isUnequal":"isUnequal"}};
    _self.SystemError = merge({"type":"SystemError","properties":{"reason":"xsd:string"}}, _self.RuntimeFault);
    _self.TaskFilterSpecRecursionOption = {"type":"TaskFilterSpecRecursionOption","enum":{"all":"all","children":"children","self":"self"}};
    _self.TaskFilterSpecTimeOption = {"type":"TaskFilterSpecTimeOption","enum":{"completedTime":"completedTime","queuedTime":"queuedTime","startedTime":"startedTime"}};
    _self.UpgradePolicy = {"type":"UpgradePolicy","enum":{"manual":"manual","upgradeAtPowerCycle":"upgradeAtPowerCycle"}};
    _self.UserDirectory = {"type":"UserDirectory","properties":{"domainList":"xsd:string[]"},"methods":{"RetrieveUserGroups":{"params":{"_this":"ManagedObjectReference","domain":"xsd:string","searchStr":"xsd:string","belongsToGroup":"xsd:string","belongsToUser":"xsd:string","exactMatch":"xsd:boolean","findUsers":"xsd:boolean","findGroups":"xsd:boolean"},"returns":"UserSearchResult"}}};
    _self.ValidateMigrationTestType = {"type":"ValidateMigrationTestType","enum":{"compatibilityTests":"compatibilityTests","diskAccessibilityTests":"diskAccessibilityTests","resourceTests":"resourceTests","sourceTests":"sourceTests"}};
    _self.View = {"type":"View","methods":{"DestroyView":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.ViewManager = {"type":"ViewManager","properties":{"viewList":_self.ManagedObjectReference},"methods":{"CreateContainerView":{"params":{"_this":"ManagedObjectReference","containerP":"ManagedObjectReferencetoaManagedEntity","type":"xsd:string","recursive":"xsd:boolean"},"returns":"ManagedObjectReference"},"CreateInventoryView":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"CreateListView":{"params":{"_this":"ManagedObjectReference","objP":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"CreateListViewFromView":{"params":{"_this":"ManagedObjectReference","view":"ManagedObjectReferencetoaView"},"returns":"ManagedObjectReference"}}};
    _self.VimFault = merge({"type":"VimFault"}, _self.MethodFault);
    _self.VirtualDeviceFileExtension = {"type":"VirtualDeviceFileExtension","enum":{"dsk":"dsk","flp":"flp","iso":"iso","rdm":"rdm","vmdk":"vmdk"}};
    _self.VirtualDiskAdapterType = {"type":"VirtualDiskAdapterType","enum":{"busLogic":"busLogic","ide":"ide","lsiLogic":"lsiLogic"}};
    _self.VirtualDiskCompatibilityMode = {"type":"VirtualDiskCompatibilityMode","enum":{"physicalMode":"physicalMode","virtualMode":"virtualMode"}};
    _self.VirtualDiskManager = {"type":"VirtualDiskManager","methods":{"CopyVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","sourceName":"xsd:string","sourceDatacenterP":"ManagedObjectReferencetoaDatacenter","destName":"xsd:string","destDatacenterP":"ManagedObjectReferencetoaDatacenter","destSpec":"VirtualDiskSpec","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"CreateVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter","spec":"VirtualDiskSpec"},"returns":"ManagedObjectReference"},"DefragmentVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"DeleteVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"ExtendVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter","newCapacityKb":"xsd:long"},"returns":"ManagedObjectReference"},"InflateVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"},"MoveVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","sourceName":"xsd:string","sourceDatacenterP":"ManagedObjectReferencetoaDatacenter","destName":"xsd:string","destDatacenterP":"ManagedObjectReferencetoaDatacenter","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"QueryVirtualDiskFragmentation":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"xsd:int"},"QueryVirtualDiskGeometry":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"HostDiskDimensionsChs"},"QueryVirtualDiskUuid":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"xsd:string"},"SetVirtualDiskUuid":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter","uuid":"xsd:string"},"returns":null},"ShrinkVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter","copy":"xsd:boolean"},"returns":"ManagedObjectReference"},"ZeroFillVirtualDisk_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","datacenterP":"ManagedObjectReferencetoaDatacenter"},"returns":"ManagedObjectReference"}}};
    _self.VirtualDiskMode = {"type":"VirtualDiskMode","enum":{"append":"append","independent_nonpersistent":"independent_nonpersistent","independent_persistent":"independent_persistent","nonpersistent":"nonpersistent","persistent":"persistent","undoable":"undoable"}};
    _self.VirtualDiskType = {"type":"VirtualDiskType","enum":{"eagerZeroedThick":"eagerZeroedThick","preallocated":"preallocated","raw":"raw","rdm":"rdm","rdmp":"rdmp","sparse2Gb":"sparse2Gb","thick":"thick","thick2Gb":"thick2Gb","thin":"thin"}};
    _self.VirtualEthernetCardLegacyNetworkDeviceName = {"type":"VirtualEthernetCardLegacyNetworkDeviceName","enum":{"bridged":"bridged","hostonly":"hostonly","nat":"nat"}};
    _self.VirtualEthernetCardMacType = {"type":"VirtualEthernetCardMacType","enum":{"assigned":"assigned","generated":"generated","manual":"manual"}};
    _self.VirtualMachineConfigInfoNpivWwnType = {"type":"VirtualMachineConfigInfoNpivWwnType","enum":{"external":"external","host":"host","vc":"vc"}};
    _self.VirtualMachineConfigInfoSwapPlacementType = {"type":"VirtualMachineConfigInfoSwapPlacementType","enum":{"hostLocal":"hostLocal","inherit":"inherit","vmDirectory":"vmDirectory"}};
    _self.VirtualMachineConfigSpecNpivWwnOp = {"type":"VirtualMachineConfigSpecNpivWwnOp","enum":{"generate":"generate","remove":"remove","set":"set"}};
    _self.VirtualMachineConnectionState = {"type":"VirtualMachineConnectionState","enum":{"connected":"connected","disconnected":"disconnected","inaccessible":"inaccessible","invalid":"invalid","orphaned":"orphaned"}};
    _self.VirtualMachineFlagInfoMonitorType = {"type":"VirtualMachineFlagInfoMonitorType","enum":{"debug":"debug","release":"release","stats":"stats"}};
    _self.VirtualMachineFlagInfoVirtualMmuUsage = {"type":"VirtualMachineFlagInfoVirtualMmuUsage","enum":{"automatic":"automatic","off":"off","on":"on"}};
    _self.VirtualMachineGuestOsFamily = {"type":"VirtualMachineGuestOsFamily","enum":{"linuxGuest":"linuxGuest","netwareGuest":"netwareGuest","otherGuestFamily":"otherGuestFamily","solarisGuest":"solarisGuest","windowsGuest":"windowsGuest"}};
    _self.VirtualMachineGuestOsIdentifier = {"type":"VirtualMachineGuestOsIdentifier","enum":{"darwinGuest":"darwinGuest","dosGuest":"dosGuest","freebsd64Guest":"freebsd64Guest","freebsdGuest":"freebsdGuest","mandrake64Guest":"mandrake64Guest","mandrakeGuest":"mandrakeGuest","netware4Guest":"netware4Guest","netware5Guest":"netware5Guest","netware6Guest":"netware6Guest","nld9Guest":"nld9Guest","oesGuest":"oesGuest","os2Guest":"os2Guest","other24xLinux64Guest":"other24xLinux64Guest","other24xLinuxGuest":"other24xLinuxGuest","other26xLinux64Guest":"other26xLinux64Guest","other26xLinuxGuest":"other26xLinuxGuest","otherGuest":"otherGuest","otherGuest64":"otherGuest64","otherLinux64Guest":"otherLinux64Guest","otherLinuxGuest":"otherLinuxGuest","redhatGuest":"redhatGuest","rhel2Guest":"rhel2Guest","rhel3_64Guest":"rhel3_64Guest","rhel3Guest":"rhel3Guest","rhel4_64Guest":"rhel4_64Guest","rhel4Guest":"rhel4Guest","rhel5_64Guest":"rhel5_64Guest","rhel5Guest":"rhel5Guest","sjdsGuest":"sjdsGuest","sles10_64Guest":"sles10_64Guest","sles10Guest":"sles10Guest","sles64Guest":"sles64Guest","slesGuest":"slesGuest","solaris10_64Guest":"solaris10_64Guest","solaris10Guest":"solaris10Guest","solaris6Guest":"solaris6Guest","solaris7Guest":"solaris7Guest","solaris8Guest":"solaris8Guest","solaris9Guest":"solaris9Guest","suse64Guest":"suse64Guest","suseGuest":"suseGuest","turboLinuxGuest":"turboLinuxGuest","ubuntu64Guest":"ubuntu64Guest","ubuntuGuest":"ubuntuGuest","win2000AdvServGuest":"win2000AdvServGuest","win2000ProGuest":"win2000ProGuest","win2000ServGuest":"win2000ServGuest","win31Guest":"win31Guest","win95Guest":"win95Guest","win98Guest":"win98Guest","winLonghorn64Guest":"winLonghorn64Guest","winLonghornGuest":"winLonghornGuest","winMeGuest":"winMeGuest","winNetBusinessGuest":"winNetBusinessGuest","winNetDatacenter64Guest":"winNetDatacenter64Guest","winNetDatacenterGuest":"winNetDatacenterGuest","winNetEnterprise64Guest":"winNetEnterprise64Guest","winNetEnterpriseGuest":"winNetEnterpriseGuest","winNetStandard64Guest":"winNetStandard64Guest","winNetStandardGuest":"winNetStandardGuest","winNetWebGuest":"winNetWebGuest","winNTGuest":"winNTGuest","winVista64Guest":"winVista64Guest","winVistaGuest":"winVistaGuest","winXPHomeGuest":"winXPHomeGuest","winXPPro64Guest":"winXPPro64Guest","winXPProGuest":"winXPProGuest"}};
    _self.VirtualMachineGuestState = {"type":"VirtualMachineGuestState","enum":{"notRunning":"notRunning","resetting":"resetting","running":"running","shuttingDown":"shuttingDown","standby":"standby","unknown":"unknown"}};
    _self.VirtualMachineHtSharing = {"type":"VirtualMachineHtSharing","enum":{"any":"any","internal":"internal","none":"none"}};
    _self.VirtualMachineMemoryAllocationPolicy = {"type":"VirtualMachineMemoryAllocationPolicy","enum":{"swapMost":"swapMost","swapNone":"swapNone","swapSome":"swapSome"}};
    _self.VirtualMachineMovePriority = {"type":"VirtualMachineMovePriority","enum":{"defaultPriority":"defaultPriority","highPriority":"highPriority","lowPriority":"lowPriority"}};
    _self.VirtualMachinePowerOffBehavior = {"type":"VirtualMachinePowerOffBehavior","enum":{"powerOff":"powerOff","prompt":"prompt","revert":"revert"}};
    _self.VirtualMachinePowerOpType = {"type":"VirtualMachinePowerOpType","enum":{"hard":"hard","preset":"preset","soft":"soft"}};
    _self.VirtualMachineRelocateTransformation = {"type":"VirtualMachineRelocateTransformation","enum":{"flat":"flat","sparse":"sparse"}};
    _self.VirtualMachineScsiPassthroughType = {"type":"VirtualMachineScsiPassthroughType","enum":{"cdrom":"cdrom","com":"com","disk":"disk","media":"media","optical":"optical","printer":"printer","processor":"processor","raid":"raid","scanner":"scanner","tape":"tape","unknown":"unknown","worm":"worm"}};
    _self.VirtualMachineStandbyActionType = {"type":"VirtualMachineStandbyActionType","enum":{"checkpoint":"checkpoint","powerOnSuspend":"powerOnSuspend"}};
    _self.VirtualMachineTargetInfoConfigurationTag = {"type":"VirtualMachineTargetInfoConfigurationTag","enum":{"clusterWide":"clusterWide","compliant":"compliant"}};
    _self.VirtualMachineUsbInfoFamily = {"type":"VirtualMachineUsbInfoFamily","enum":{"audio":"audio","bluetooth":"bluetooth","communication":"communication","hid":"hid","hid_bootable":"hid_bootable","hub":"hub","imaging":"imaging","other":"other","pda":"pda","physical":"physical","printer":"printer","security":"security","smart_card":"smart_card","storage":"storage","unknownFamily":"unknownFamily","vendor_specific":"vendor_specific","video":"video","wireless":"wireless","wusb":"wusb"}};
    _self.VirtualMachineUsbInfoSpeed = {"type":"VirtualMachineUsbInfoSpeed","enum":{"full":"full","high":"high","low":"low","unknownSpeed":"unknownSpeed"}};
    _self.VirtualPointingDeviceHostChoice = {"type":"VirtualPointingDeviceHostChoice","enum":{"autodetect":"autodetect","intellimouseExplorer":"intellimouseExplorer","intellimousePs2":"intellimousePs2","logitechMouseman":"logitechMouseman","microsoft_serial":"microsoft_serial","mousemanSerial":"mousemanSerial","mouseSystems":"mouseSystems","ps2":"ps2"}};
    _self.VirtualSCSISharing = {"type":"VirtualSCSISharing","enum":{"noSharing":"noSharing","physicalSharing":"physicalSharing","virtualSharing":"virtualSharing"}};
    _self.VirtualSerialPortEndPoint = {"type":"VirtualSerialPortEndPoint","enum":{"client":"client","server":"server"}};
    _self.VmConfigFault = merge({"type":"VmConfigFault"}, _self.VimFault);
    _self.VMotionCompatibilityType = {"type":"VMotionCompatibilityType","enum":{"cpu":"cpu","software":"software"}};
    _self.VmToolsUpgradeFault = merge({"type":"VmToolsUpgradeFault"}, _self.VimFault);
    _self.AlreadyExists = merge({"type":"AlreadyExists","properties":{"name":"xsd:string"}}, _self.VimFault);
    _self.AlreadyUpgraded = merge({"type":"AlreadyUpgraded"}, _self.VimFault);
    _self.AuthMinimumAdminPermission = merge({"type":"AuthMinimumAdminPermission"}, _self.VimFault);
    _self.CannotAccessLocalSource = merge({"type":"CannotAccessLocalSource"}, _self.VimFault);
    _self.CannotAccessVmComponent = merge({"type":"CannotAccessVmComponent"}, _self.VmConfigFault);
    _self.CannotAccessVmDevice = merge({"type":"CannotAccessVmDevice","properties":{"backing":"xsd:string","connected":"xsd:boolean","device":"xsd:string"}}, _self.CannotAccessVmComponent);
    _self.CannotDisableSnapshot = merge({"type":"CannotDisableSnapshot"}, _self.VmConfigFault);
    _self.ConcurrentAccess = merge({"type":"ConcurrentAccess"}, _self.VimFault);
    _self.CustomizationFault = merge({"type":"CustomizationFault"}, _self.VimFault);
    _self.CustomizationPending = merge({"type":"CustomizationPending"}, _self.CustomizationFault);
    _self.DasConfigFault = merge({"type":"DasConfigFault"}, _self.VimFault);
    _self.DatabaseError = merge({"type":"DatabaseError"}, _self.RuntimeFault);
    _self.DuplicateName = merge({"type":"DuplicateName","properties":{"name":"xsd:string","object":_self.ManagedObjectReference}}, _self.VimFault);
    _self.DynamicData = {"type":"DynamicData","properties":{"dynamicProperty":_self.DynamicProperty,"dynamicType":"xsd:string"}};
    _self.EventArgument = merge({"type":"EventArgument"}, _self.DynamicData);
    _self.EventDescriptionEventDetail = merge({"type":"EventDescriptionEventDetail","properties":{"category":"xsd:string","formatOnComputeResource":"xsd:string","formatOnDatacenter":"xsd:string","formatOnHost":"xsd:string","formatOnVm":"xsd:string","fullFormat":"xsd:string","key":"xsd:string"}}, _self.DynamicData);
    _self.EventFilterSpecByEntity = merge({"type":"EventFilterSpecByEntity","properties":{"entity":_self.ManagedObjectReference,"recursion":_self.EventFilterSpecRecursionOption}}, _self.DynamicData);
    _self.EventFilterSpecByTime = merge({"type":"EventFilterSpecByTime","properties":{"beginTime":"xsd:dateTime","endTime":"xsd:dateTime"}}, _self.DynamicData);
    _self.EventFilterSpecByUsername = merge({"type":"EventFilterSpecByUsername","properties":{"systemUser":"xsd:boolean","userList":"xsd:string[]"}}, _self.DynamicData);
    _self.ExtendedEventPair = merge({"type":"ExtendedEventPair","properties":{"key":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.KeyValue = merge({"type":"KeyValue","properties":{"key":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionEventTypeInfo = merge({"type":"ExtensionEventTypeInfo","properties":{"eventID":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionFaultTypeInfo = merge({"type":"ExtensionFaultTypeInfo","properties":{"faultID":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionPrivilegeInfo = merge({"type":"ExtensionPrivilegeInfo","properties":{"privGroupName":"xsd:string","privID":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionResourceInfo = merge({"type":"ExtensionResourceInfo","properties":{"data":_self.KeyValue,"locale":"xsd:string","module":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionTaskTypeInfo = merge({"type":"ExtensionTaskTypeInfo","properties":{"taskID":"xsd:string"}}, _self.DynamicData);
    _self.FileFault = merge({"type":"FileFault","properties":{"file":"xsd:string"}}, _self.VimFault);
    _self.FileInfo = merge({"type":"FileInfo","properties":{"fileSize":"xsd:long","modification":"xsd:dateTime","path":"xsd:string"}}, _self.DynamicData);
    _self.FileLocked = merge({"type":"FileLocked"}, _self.FileFault);
    _self.FileNotFound = merge({"type":"FileNotFound"}, _self.FileFault);
    _self.FileNotWritable = merge({"type":"FileNotWritable"}, _self.FileFault);
    _self.FileQuery = merge({"type":"FileQuery"}, _self.DynamicData);
    _self.FileQueryFlags = merge({"type":"FileQueryFlags","properties":{"fileSize":"xsd:boolean","fileType":"xsd:boolean","modification":"xsd:boolean"}}, _self.DynamicData);
    _self.FileTooLarge = merge({"type":"FileTooLarge","properties":{"datastore":"xsd:string","fileSize":"xsd:long","maxFileSize":"xsd:long"}}, _self.FileFault);
    _self.FloppyImageFileInfo = merge({"type":"FloppyImageFileInfo"}, _self.FileInfo);
    _self.FloppyImageFileQuery = merge({"type":"FloppyImageFileQuery"}, _self.FileQuery);
    _self.FolderFileInfo = merge({"type":"FolderFileInfo"}, _self.FileInfo);
    _self.FolderFileQuery = merge({"type":"FolderFileQuery"}, _self.FileQuery);
    _self.GenericDrsFault = merge({"type":"GenericDrsFault","properties":{"hostFaults":_self.MethodFault}}, _self.VimFault);
    _self.GenericVmConfigFault = merge({"type":"GenericVmConfigFault","properties":{"reason":"xsd:string"}}, _self.VmConfigFault);
    _self.GuestDiskInfo = merge({"type":"GuestDiskInfo","properties":{"capacity":"xsd:long","diskPath":"xsd:string","freeSpace":"xsd:long"}}, _self.DynamicData);
    _self.GuestNicInfo = merge({"type":"GuestNicInfo","properties":{"connected":"xsd:boolean","deviceConfigId":"xsd:int","ipAddress":"xsd:string[]","macAddress":"xsd:string","network":"xsd:string"}}, _self.DynamicData);
    _self.GuestScreenInfo = merge({"type":"GuestScreenInfo","properties":{"height":"xsd:int","width":"xsd:int"}}, _self.DynamicData);
    _self.HostCpuIdInfo = merge({"type":"HostCpuIdInfo","properties":{"eax":"xsd:string","ebx":"xsd:string","ecx":"xsd:string","edx":"xsd:string","level":"xsd:int","vendor":"xsd:string"}}, _self.DynamicData);
    _self.HostBIOSInfo = merge({"type":"HostBIOSInfo","properties":{"biosVersion":"xsd:string","releaseDate":"xsd:dateTime"}}, _self.DynamicData);
    _self.HostBootDevice = merge({"type":"HostBootDevice","properties":{"description":"xsd:string","key":"xsd:string"}}, _self.DynamicData);
    _self.HostBootDeviceInfo = merge({"type":"HostBootDeviceInfo","properties":{"bootDevices":_self.HostBootDevice,"currentBootDeviceKey":"xsd:string"}}, _self.DynamicData);
    _self.HostCapability = merge({"type":"HostCapability","properties":{"backgroundSnapshotsSupported":"xsd:boolean","cpuMemoryResourceConfigurationSupported":"xsd:boolean","datastorePrincipalSupported":"xsd:boolean","highGuestMemSupported":"xsd:boolean","iscsiSupported":"xsd:boolean","localSwapDatastoreSupported":"xsd:boolean","maintenanceModeSupported":"xsd:boolean","maxRunningVMs":"xsd:int","maxSupportedVcpus":"xsd:int","maxSupportedVMs":"xsd:int","nfsSupported":"xsd:boolean","nicTeamingSupported":"xsd:boolean","perVmSwapFiles":"xsd:boolean","preAssignedPCIUnitNumbersSupported":"xsd:boolean","rebootSupported":"xsd:boolean","recursiveResourcePoolsSupported":"xsd:boolean","restrictedSnapshotRelocateSupported":"xsd:boolean","sanSupported":"xsd:boolean","scaledScreenshotSupported":"xsd:boolean","screenshotSupported":"xsd:boolean","shutdownSupported":"xsd:boolean","standbySupported":"xsd:boolean","suspendedRelocateSupported":"xsd:boolean","unsharedSwapVMotionSupported":"xsd:boolean","vlanTaggingSupported":"xsd:boolean","vmotionSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.HostCommunication = merge({"type":"HostCommunication"}, _self.RuntimeFault);
    _self.HostConfigChange = merge({"type":"HostConfigChange"}, _self.DynamicData);
    _self.HostConfigFault = merge({"type":"HostConfigFault"}, _self.VimFault);
    _self.HostNetCapabilities = merge({"type":"HostNetCapabilities","properties":{"canSetPhysicalNicLinkSpeed":"xsd:boolean","dhcpOnVnicSupported":"xsd:boolean","dnsConfigSupported":"xsd:boolean","ipRouteConfigSupported":"xsd:boolean","maxPortGroupsPerVswitch":"xsd:int","nicTeamingPolicy":"xsd:string[]","supportsNetworkHints":"xsd:boolean","supportsNicTeaming":"xsd:boolean","supportsVlan":"xsd:boolean","usesServiceConsoleNic":"xsd:boolean","vnicConfigSupported":"xsd:boolean","vswitchConfigSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.ServiceConsoleReservationInfo = merge({"type":"ServiceConsoleReservationInfo","properties":{"serviceConsoleReserved":"xsd:long","serviceConsoleReservedCfg":"xsd:long","unreserved":"xsd:long"}}, _self.DynamicData);
    _self.HostDatastoreSystemCapabilities = merge({"type":"HostDatastoreSystemCapabilities","properties":{"localDatastoreSupported":"xsd:boolean","nfsMountCreationRequired":"xsd:boolean","nfsMountCreationSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.HostFlagInfo = merge({"type":"HostFlagInfo","properties":{"backgroundSnapshotsEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostHyperThreadScheduleInfo = merge({"type":"HostHyperThreadScheduleInfo","properties":{"active":"xsd:boolean","available":"xsd:boolean","config":"xsd:boolean"}}, _self.DynamicData);
    _self.HostNetOffloadCapabilities = merge({"type":"HostNetOffloadCapabilities","properties":{"csumOffload":"xsd:boolean","tcpSegmentation":"xsd:boolean","zeroCopyXmit":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineMemoryReservationInfo = merge({"type":"VirtualMachineMemoryReservationInfo","properties":{"allocationPolicy":"xsd:string","virtualMachineMax":"xsd:long","virtualMachineMin":"xsd:long","virtualMachineReserved":"xsd:long"}}, _self.DynamicData);
    _self.HostConfigManager = merge({"type":"HostConfigManager","properties":{"advancedOption":_self.ManagedObjectReference,"autoStartManager":_self.ManagedObjectReference,"bootDeviceSystem":_self.ManagedObjectReference,"cpuScheduler":_self.ManagedObjectReference,"datastoreSystem":_self.ManagedObjectReference,"dateTimeSystem":_self.ManagedObjectReference,"diagnosticSystem":_self.ManagedObjectReference,"firewallSystem":_self.ManagedObjectReference,"firmwareSystem":_self.ManagedObjectReference,"healthStatusSystem":_self.ManagedObjectReference,"memoryManager":_self.ManagedObjectReference,"networkSystem":_self.ManagedObjectReference,"patchManager":_self.ManagedObjectReference,"serviceSystem":_self.ManagedObjectReference,"snmpSystem":_self.ManagedObjectReference,"storageSystem":_self.ManagedObjectReference,"vmotionSystem":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostConnectFault = merge({"type":"HostConnectFault"}, _self.VimFault);
    _self.NetworkSummary = merge({"type":"NetworkSummary","properties":{"accessible":"xsd:boolean","name":"xsd:string","network":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostConnectSpec = merge({"type":"HostConnectSpec","properties":{"force":"xsd:boolean","hostName":"xsd:string","password":"xsd:string","port":"xsd:int","sslThumbprint":"xsd:string","userName":"xsd:string","vimAccountName":"xsd:string","vimAccountPassword":"xsd:string","vmFolder":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostCpuInfo = merge({"type":"HostCpuInfo","properties":{"hz":"xsd:long","numCpuCores":"xsd:short","numCpuPackages":"xsd:short","numCpuThreads":"xsd:short"}}, _self.DynamicData);
    _self.HostCpuPackage = merge({"type":"HostCpuPackage","properties":{"busHz":"xsd:long","cpuFeature":_self.HostCpuIdInfo,"description":"xsd:string","hz":"xsd:long","index":"xsd:short","threadId":"xsd:short[]","vendor":"xsd:string"}}, _self.DynamicData);
    _self.HostDatastoreBrowser = {"type":"HostDatastoreBrowser","properties":{"datastore":_self.ManagedObjectReference,"supportedType":_self.FileQuery},"methods":{"DeleteFile":{"params":{"_this":"ManagedObjectReference","datastorePath":"xsd:string"},"returns":null},"SearchDatastore_Task":{"params":{"_this":"ManagedObjectReference","datastorePath":"xsd:string","searchSpec":"HostDatastoreBrowserSearchSpec"},"returns":"ManagedObjectReference"},"SearchDatastoreSubFolders_Task":{"params":{"_this":"ManagedObjectReference","datastorePath":"xsd:string","searchSpec":"HostDatastoreBrowserSearchSpec"},"returns":"ManagedObjectReference"}}};
    _self.HostDatastoreBrowserSearchResults = merge({"type":"HostDatastoreBrowserSearchResults","properties":{"datastore":_self.ManagedObjectReference,"file":_self.FileInfo,"folderPath":"xsd:string"}}, _self.DynamicData);
    _self.HostDatastoreBrowserSearchSpec = merge({"type":"HostDatastoreBrowserSearchSpec","properties":{"details":_self.FileQueryFlags,"matchPattern":"xsd:string[]","query":_self.FileQuery,"searchCaseInsensitive":"xsd:boolean","sortFoldersFirst":"xsd:boolean"}}, _self.DynamicData);
    _self.HostDatastoreSystem = {"type":"HostDatastoreSystem","properties":{"capabilities":_self.HostDatastoreSystemCapabilities,"datastore":_self.ManagedObjectReference},"methods":{"ConfigureDatastorePrincipal":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string","password":"xsd:string"},"returns":null},"CreateLocalDatastore":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","path":"xsd:string"},"returns":"ManagedObjectReference"},"CreateNasDatastore":{"params":{"_this":"ManagedObjectReference","spec":"HostNasVolumeSpec"},"returns":"ManagedObjectReference"},"CreateVmfsDatastore":{"params":{"_this":"ManagedObjectReference","spec":"VmfsDatastoreCreateSpec"},"returns":"ManagedObjectReference"},"ExtendVmfsDatastore":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore","spec":"VmfsDatastoreExtendSpec"},"returns":"ManagedObjectReference"},"QueryAvailableDisksForVmfs":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore"},"returns":"HostScsiDisk"},"QueryVmfsDatastoreCreateOptions":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string"},"returns":"VmfsDatastoreOption"},"QueryVmfsDatastoreExtendOptions":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore","devicePath":"xsd:string"},"returns":"VmfsDatastoreOption"},"RemoveDatastore":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore"},"returns":null},"UpdateLocalSwapDatastore":{"params":{"_this":"ManagedObjectReference","datastore":"ManagedObjectReferencetoaDatastore"},"returns":null}}};
    _self.HostNtpConfig = merge({"type":"HostNtpConfig","properties":{"server":"xsd:string[]"}}, _self.DynamicData);
    _self.HostDateTimeSystemTimeZone = merge({"type":"HostDateTimeSystemTimeZone","properties":{"description":"xsd:string","gmtOffset":"xsd:int","key":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.HostDevice = merge({"type":"HostDevice","properties":{"deviceName":"xsd:string","deviceType":"xsd:string"}}, _self.DynamicData);
    _self.HostDhcpServiceSpec = merge({"type":"HostDhcpServiceSpec","properties":{"defaultLeaseDuration":"xsd:int","ipSubnetAddr":"xsd:string","ipSubnetMask":"xsd:string","leaseBeginIp":"xsd:string","leaseEndIp":"xsd:string","maxLeaseDuration":"xsd:int","unlimitedLease":"xsd:boolean","virtualSwitch":"xsd:string"}}, _self.DynamicData);
    _self.HostDhcpServiceConfig = merge({"type":"HostDhcpServiceConfig","properties":{"changeOperation":"xsd:string","key":"xsd:string","spec":_self.HostDhcpServiceSpec}}, _self.DynamicData);
    _self.HostScsiDiskPartition = merge({"type":"HostScsiDiskPartition","properties":{"diskName":"xsd:string","partition":"xsd:int"}}, _self.DynamicData);
    _self.HostDiskDimensions = merge({"type":"HostDiskDimensions"}, _self.DynamicData);
    _self.HostDiskDimensionsChs = merge({"type":"HostDiskDimensionsChs","properties":{"cylinder":"xsd:long","head":"xsd:int","sector":"xsd:int"}}, _self.DynamicData);
    _self.HostDiskDimensionsLba = merge({"type":"HostDiskDimensionsLba","properties":{"block":"xsd:long","blockSize":"xsd:int"}}, _self.DynamicData);
    _self.HostDiskMappingPartitionInfo = merge({"type":"HostDiskMappingPartitionInfo","properties":{"capacityInKb":"xsd:long","fileSystem":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.HostDiskMappingPartitionOption = merge({"type":"HostDiskMappingPartitionOption","properties":{"capacityInKb":"xsd:long","fileSystem":"xsd:string","name":"xsd:string"}}, _self.DynamicData);
    _self.HostDiskPartitionAttributes = merge({"type":"HostDiskPartitionAttributes","properties":{"attributes":"xsd:byte","endSector":"xsd:long","logical":"xsd:boolean","partition":"xsd:int","startSector":"xsd:long","type":"xsd:string"}}, _self.DynamicData);
    _self.HostDiskPartitionBlockRange = merge({"type":"HostDiskPartitionBlockRange","properties":{"end":_self.HostDiskDimensionsLba,"partition":"xsd:int","start":_self.HostDiskDimensionsLba,"type":"xsd:string"}}, _self.DynamicData);
    _self.HostDnsConfig = merge({"type":"HostDnsConfig","properties":{"address":"xsd:string[]","dhcp":"xsd:boolean","domainName":"xsd:string","hostName":"xsd:string","searchDomain":"xsd:string[]","virtualNicDevice":"xsd:string"}}, _self.DynamicData);
    _self.Permission = merge({"type":"Permission","properties":{"entity":_self.ManagedObjectReference,"group":"xsd:boolean","principal":"xsd:string","propagate":"xsd:boolean","roleId":"xsd:int"}}, _self.DynamicData);
    _self.HostFileAccess = merge({"type":"HostFileAccess","properties":{"what":"xsd:string","who":"xsd:string"}}, _self.DynamicData);
    _self.HostFileSystemVolume = merge({"type":"HostFileSystemVolume","properties":{"capacity":"xsd:long","name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.HostFirewallDefaultPolicy = merge({"type":"HostFirewallDefaultPolicy","properties":{"incomingBlocked":"xsd:boolean","outgoingBlocked":"xsd:boolean"}}, _self.DynamicData);
    _self.HostFirewallRule = merge({"type":"HostFirewallRule","properties":{"direction":_self.HostFirewallRuleDirection,"endPort":"xsd:int","port":"xsd:int","protocol":"xsd:string"}}, _self.DynamicData);
    _self.HostPciDevice = merge({"type":"HostPciDevice","properties":{"bus":"xsd:byte","classId":"xsd:short","deviceId":"xsd:short","deviceName":"xsd:string","function":"xsd:byte","id":"xsd:string","slot":"xsd:byte","subDeviceId":"xsd:short","subVendorId":"xsd:short","vendorId":"xsd:short","vendorName":"xsd:string"}}, _self.DynamicData);
    _self.HostHostBusAdapter = merge({"type":"HostHostBusAdapter","properties":{"bus":"xsd:int","device":"xsd:string","driver":"xsd:string","key":"xsd:string","model":"xsd:string","pci":"xsd:string","status":"xsd:string"}}, _self.DynamicData);
    _self.HostInternetScsiHbaAuthenticationCapabilities = merge({"type":"HostInternetScsiHbaAuthenticationCapabilities","properties":{"chapAuthSettable":"xsd:boolean","krb5AuthSettable":"xsd:boolean","spkmAuthSettable":"xsd:boolean","srpAuthSettable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaAuthenticationProperties = merge({"type":"HostInternetScsiHbaAuthenticationProperties","properties":{"chapAuthEnabled":"xsd:boolean","chapName":"xsd:string","chapSecret":"xsd:string"}}, _self.DynamicData);
    _self.HostInternetScsiHbaSendTarget = merge({"type":"HostInternetScsiHbaSendTarget","properties":{"address":"xsd:string","port":"xsd:int"}}, _self.DynamicData);
    _self.HostInternetScsiHbaStaticTarget = merge({"type":"HostInternetScsiHbaStaticTarget","properties":{"address":"xsd:string","iScsiName":"xsd:string","port":"xsd:int"}}, _self.DynamicData);
    _self.HostInternetScsiHbaDiscoveryCapabilities = merge({"type":"HostInternetScsiHbaDiscoveryCapabilities","properties":{"iSnsDiscoverySettable":"xsd:boolean","sendTargetsDiscoverySettable":"xsd:boolean","slpDiscoverySettable":"xsd:boolean","staticTargetDiscoverySettable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaDiscoveryProperties = merge({"type":"HostInternetScsiHbaDiscoveryProperties","properties":{"iSnsDiscoveryEnabled":"xsd:boolean","iSnsDiscoveryMethod":"xsd:string","iSnsHost":"xsd:string","sendTargetsDiscoveryEnabled":"xsd:boolean","slpDiscoveryEnabled":"xsd:boolean","slpDiscoveryMethod":"xsd:string","slpHost":"xsd:string","staticTargetDiscoveryEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaIPCapabilities = merge({"type":"HostInternetScsiHbaIPCapabilities","properties":{"addressSettable":"xsd:boolean","alternateDnsServerAddressSettable":"xsd:boolean","defaultGatewaySettable":"xsd:boolean","ipConfigurationMethodSettable":"xsd:boolean","primaryDnsServerAddressSettable":"xsd:boolean","subnetMaskSettable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostInternetScsiHbaIPProperties = merge({"type":"HostInternetScsiHbaIPProperties","properties":{"address":"xsd:string","alternateDnsServerAddress":"xsd:string","defaultGateway":"xsd:string","dhcpConfigurationEnabled":"xsd:boolean","mac":"xsd:string","primaryDnsServerAddress":"xsd:string","subnetMask":"xsd:string"}}, _self.DynamicData);
    _self.HostIpConfig = merge({"type":"HostIpConfig","properties":{"dhcp":"xsd:boolean","ipAddress":"xsd:string","subnetMask":"xsd:string"}}, _self.DynamicData);
    _self.HostIpRouteConfig = merge({"type":"HostIpRouteConfig","properties":{"defaultGateway":"xsd:string","gatewayDevice":"xsd:string"}}, _self.DynamicData);
    _self.HostListSummaryQuickStats = merge({"type":"HostListSummaryQuickStats","properties":{"distributedCpuFairness":"xsd:int","distributedMemoryFairness":"xsd:int","overallCpuUsage":"xsd:int","overallMemoryUsage":"xsd:int"}}, _self.DynamicData);
    _self.HostLocalFileSystemVolume = merge({"type":"HostLocalFileSystemVolume","properties":{"device":"xsd:string"}}, _self.HostFileSystemVolume);
    _self.HostLocalFileSystemVolumeSpec = merge({"type":"HostLocalFileSystemVolumeSpec","properties":{"device":"xsd:string","localPath":"xsd:string"}}, _self.DynamicData);
    _self.HostMultipathInfoLogicalUnitPolicy = merge({"type":"HostMultipathInfoLogicalUnitPolicy","properties":{"policy":"xsd:string"}}, _self.DynamicData);
    _self.HostTargetTransport = merge({"type":"HostTargetTransport"}, _self.DynamicData);
    _self.HostNasVolume = merge({"type":"HostNasVolume","properties":{"remoteHost":"xsd:string","remotePath":"xsd:string","userName":"xsd:string"}}, _self.HostFileSystemVolume);
    _self.HostNasVolumeSpec = merge({"type":"HostNasVolumeSpec","properties":{"accessMode":"xsd:string","localPath":"xsd:string","password":"xsd:string","remoteHost":"xsd:string","remotePath":"xsd:string","type":"xsd:string","userName":"xsd:string"}}, _self.DynamicData);
    _self.HostNatServiceNameServiceSpec = merge({"type":"HostNatServiceNameServiceSpec","properties":{"dnsAutoDetect":"xsd:boolean","dnsNameServer":"xsd:string[]","dnsPolicy":"xsd:string","dnsRetries":"xsd:int","dnsTimeout":"xsd:int","nbdsTimeout":"xsd:int","nbnsRetries":"xsd:int","nbnsTimeout":"xsd:int"}}, _self.DynamicData);
    _self.HostNatServicePortForwardSpec = merge({"type":"HostNatServicePortForwardSpec","properties":{"guestIpAddress":"xsd:string","guestPort":"xsd:int","hostPort":"xsd:int","name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.HostNetworkConfigResult = merge({"type":"HostNetworkConfigResult","properties":{"consoleVnicDevice":"xsd:string[]","vnicDevice":"xsd:string[]"}}, _self.DynamicData);
    _self.HostNetworkSecurityPolicy = merge({"type":"HostNetworkSecurityPolicy","properties":{"allowPromiscuous":"xsd:boolean","forgedTransmits":"xsd:boolean","macChanges":"xsd:boolean"}}, _self.DynamicData);
    _self.HostNetworkTrafficShapingPolicy = merge({"type":"HostNetworkTrafficShapingPolicy","properties":{"averageBandwidth":"xsd:long","burstSize":"xsd:long","enabled":"xsd:boolean","peakBandwidth":"xsd:long"}}, _self.DynamicData);
    _self.HostNicFailureCriteria = merge({"type":"HostNicFailureCriteria","properties":{"checkBeacon":"xsd:boolean","checkDuplex":"xsd:boolean","checkErrorPercent":"xsd:boolean","checkSpeed":"xsd:string","fullDuplex":"xsd:boolean","percentage":"xsd:int","speed":"xsd:int"}}, _self.DynamicData);
    _self.HostNicOrderPolicy = merge({"type":"HostNicOrderPolicy","properties":{"activeNic":"xsd:string[]","standbyNic":"xsd:string[]"}}, _self.DynamicData);
    _self.HostNotConnected = merge({"type":"HostNotConnected"}, _self.HostCommunication);
    _self.HostNotReachable = merge({"type":"HostNotReachable"}, _self.HostCommunication);
    _self.HostNumaNode = merge({"type":"HostNumaNode","properties":{"cpuID":"xsd:short[]","memoryRangeBegin":"xsd:long","memoryRangeLength":"xsd:long","typeId":"xsd:byte"}}, _self.DynamicData);
    _self.HostParallelScsiHba = merge({"type":"HostParallelScsiHba"}, _self.HostHostBusAdapter);
    _self.HostParallelScsiTargetTransport = merge({"type":"HostParallelScsiTargetTransport"}, _self.HostTargetTransport);
    _self.HostPatchManagerLocator = merge({"type":"HostPatchManagerLocator","properties":{"proxy":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.HostPatchManagerStatusPrerequisitePatch = merge({"type":"HostPatchManagerStatusPrerequisitePatch","properties":{"id":"xsd:string","installState":"xsd:string[]"}}, _self.DynamicData);
    _self.HostPortGroupPort = merge({"type":"HostPortGroupPort","properties":{"key":"xsd:string","mac":"xsd:string[]","type":"xsd:string"}}, _self.DynamicData);
    _self.HostPowerOpFailed = merge({"type":"HostPowerOpFailed"}, _self.VimFault);
    _self.HostScsiTopologyLun = merge({"type":"HostScsiTopologyLun","properties":{"key":"xsd:string","lun":"xsd:int","scsiLun":"xsd:string"}}, _self.DynamicData);
    _self.HostService = merge({"type":"HostService","properties":{"key":"xsd:string","label":"xsd:string","policy":"xsd:string","required":"xsd:boolean","ruleset":"xsd:string[]","running":"xsd:boolean","uninstallable":"xsd:boolean"}}, _self.DynamicData);
    _self.HostServiceTicket = merge({"type":"HostServiceTicket","properties":{"host":"xsd:string","port":"xsd:int","service":"xsd:string","serviceVersion":"xsd:string","sessionId":"xsd:string","sslThumbprint":"xsd:string"}}, _self.DynamicData);
    _self.HostSnmpDestination = merge({"type":"HostSnmpDestination","properties":{"community":"xsd:string","hostName":"xsd:string","port":"xsd:int"}}, _self.DynamicData);
    _self.HostSnmpSystemAgentLimits = merge({"type":"HostSnmpSystemAgentLimits","properties":{"maxBufferSize":"xsd:int","maxCommunityLength":"xsd:int","maxReadOnlyCommunities":"xsd:int","maxTrapDestinations":"xsd:int"}}, _self.DynamicData);
    _self.HostStorageOperationalInfo = merge({"type":"HostStorageOperationalInfo","properties":{"property":"xsd:string","value":"xsd:string"}}, _self.DynamicData);
    _self.HostVirtualNicSpec = merge({"type":"HostVirtualNicSpec","properties":{"ip":_self.HostIpConfig,"mac":"xsd:string"}}, _self.DynamicData);
    _self.HostVirtualSwitchBeaconConfig = merge({"type":"HostVirtualSwitchBeaconConfig","properties":{"interval":"xsd:int"}}, _self.DynamicData);
    _self.HostVirtualSwitchBridge = merge({"type":"HostVirtualSwitchBridge"}, _self.DynamicData);
    _self.HostVirtualSwitchSimpleBridge = merge({"type":"HostVirtualSwitchSimpleBridge","properties":{"nicDevice":"xsd:string"}}, _self.HostVirtualSwitchBridge);
    _self.HostVmfsSpec = merge({"type":"HostVmfsSpec","properties":{"blockSizeMb":"xsd:int","extent":_self.HostScsiDiskPartition,"majorVersion":"xsd:int","volumeName":"xsd:string"}}, _self.DynamicData);
    _self.HostVmfsVolume = merge({"type":"HostVmfsVolume","properties":{"blockSizeMb":"xsd:int","extent":_self.HostScsiDiskPartition,"majorVersion":"xsd:int","maxBlocks":"xsd:int","uuid":"xsd:string","version":"xsd:string","vmfsUpgradable":"xsd:boolean"}}, _self.HostFileSystemVolume);
    _self.HostVMotionCompatibility = merge({"type":"HostVMotionCompatibility","properties":{"compatibility":"xsd:string[]","host":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostVMotionConfig = merge({"type":"HostVMotionConfig","properties":{"enabled":"xsd:boolean","vmotionNicKey":"xsd:string"}}, _self.DynamicData);
    _self.IncorrectFileType = merge({"type":"IncorrectFileType"}, _self.FileFault);
    _self.InsufficientResourcesFault = merge({"type":"InsufficientResourcesFault"}, _self.VimFault);
    _self.InvalidAffinitySettingFault = merge({"type":"InvalidAffinitySettingFault"}, _self.VimFault);
    _self.InvalidArgument = merge({"type":"InvalidArgument","properties":{"invalidProperty":"xsd:string"}}, _self.RuntimeFault);
    _self.InvalidDatastore = merge({"type":"InvalidDatastore","properties":{"datastore":_self.ManagedObjectReference,"name":"xsd:string"}}, _self.VimFault);
    _self.InvalidDatastorePath = merge({"type":"InvalidDatastorePath","properties":{"datastorePath":"xsd:string"}}, _self.InvalidDatastore);
    _self.InvalidEvent = merge({"type":"InvalidEvent"}, _self.VimFault);
    _self.InvalidFolder = merge({"type":"InvalidFolder","properties":{"target":_self.ManagedObjectReference}}, _self.VimFault);
    _self.InvalidFormat = merge({"type":"InvalidFormat"}, _self.VmConfigFault);
    _self.InvalidLicense = merge({"type":"InvalidLicense","properties":{"licenseContent":"xsd:string"}}, _self.VimFault);
    _self.InvalidLocale = merge({"type":"InvalidLocale"}, _self.VimFault);
    _self.InvalidLogin = merge({"type":"InvalidLogin"}, _self.VimFault);
    _self.InvalidName = merge({"type":"InvalidName","properties":{"entity":_self.ManagedObjectReference,"name":"xsd:string"}}, _self.VimFault);
    _self.InvalidPrivilege = merge({"type":"InvalidPrivilege","properties":{"privilege":"xsd:string"}}, _self.VimFault);
    _self.InvalidRequest = merge({"type":"InvalidRequest"}, _self.RuntimeFault);
    _self.InvalidResourcePoolStructureFault = merge({"type":"InvalidResourcePoolStructureFault"}, _self.InsufficientResourcesFault);
    _self.InvalidSnapshotFormat = merge({"type":"InvalidSnapshotFormat"}, _self.InvalidFormat);
    _self.InvalidState = merge({"type":"InvalidState"}, _self.VimFault);
    _self.InvalidType = merge({"type":"InvalidType","properties":{"argument":"xsd:string"}}, _self.InvalidRequest);
    _self.InvalidVmConfig = merge({"type":"InvalidVmConfig","properties":{"property":"xsd:string"}}, _self.VmConfigFault);
    _self.IpHostnameGeneratorError = merge({"type":"IpHostnameGeneratorError"}, _self.CustomizationFault);
    _self.IsoImageFileInfo = merge({"type":"IsoImageFileInfo"}, _self.FileInfo);
    _self.IsoImageFileQuery = merge({"type":"IsoImageFileQuery"}, _self.FileQuery);
    _self.LicenseFeatureInfo = merge({"type":"LicenseFeatureInfo","properties":{"costUnit":"xsd:string","dependentKey":"xsd:string[]","edition":"xsd:boolean","expiresOn":"xsd:dateTime","featureDescription":"xsd:string","featureName":"xsd:string","key":"xsd:string","sourceRestriction":"xsd:string","state":_self.LicenseFeatureInfoState}}, _self.DynamicData);
    _self.LicenseDiagnostics = merge({"type":"LicenseDiagnostics","properties":{"lastStatusUpdate":"xsd:dateTime","licenseFeatureUnknowns":"xsd:string","licenseRequestFailures":"xsd:string","licenseRequests":"xsd:string","opFailureMessage":"xsd:string","opState":_self.LicenseManagerState,"sourceLastChanged":"xsd:dateTime","sourceLatency":"xsd:float","sourceLost":"xsd:string"}}, _self.DynamicData);
    _self.LicenseSource = merge({"type":"LicenseSource"}, _self.DynamicData);
    _self.LicenseReservationInfo = merge({"type":"LicenseReservationInfo","properties":{"key":"xsd:string","required":"xsd:int","state":_self.LicenseReservationInfoState}}, _self.DynamicData);
    _self.LicenseServerSource = merge({"type":"LicenseServerSource","properties":{"licenseServer":"xsd:string"}}, _self.LicenseSource);
    _self.LicenseServerUnavailable = merge({"type":"LicenseServerUnavailable","properties":{"licenseServer":"xsd:string"}}, _self.VimFault);
    _self.LicenseUsageInfo = merge({"type":"LicenseUsageInfo","properties":{"featureInfo":_self.LicenseFeatureInfo,"reservationInfo":_self.LicenseReservationInfo,"source":_self.LicenseSource,"sourceAvailable":"xsd:boolean"}}, _self.DynamicData);
    _self.LinuxVolumeNotClean = merge({"type":"LinuxVolumeNotClean"}, _self.CustomizationFault);
    _self.LocalLicenseSource = merge({"type":"LocalLicenseSource","properties":{"licenseKeys":"xsd:string"}}, _self.LicenseSource);
    _self.LogBundlingFailed = merge({"type":"LogBundlingFailed"}, _self.VimFault);
    _self.ManagedObjectNotFound = merge({"type":"ManagedObjectNotFound","properties":{"obj":_self.ManagedObjectReference}}, _self.RuntimeFault);
    _self.ManagedObjectView = merge({"type":"ManagedObjectView","properties":{"view":_self.ManagedObjectReference},"methods":{}}, _self.View);
    _self.MethodActionArgument = merge({"type":"MethodActionArgument","properties":{"value":"xsd:anyType"}}, _self.DynamicData);
    _self.MethodNotFound = merge({"type":"MethodNotFound","properties":{"method":"xsd:string","receiver":_self.ManagedObjectReference}}, _self.InvalidRequest);
    _self.PerfMetricId = merge({"type":"PerfMetricId","properties":{"counterId":"xsd:int","instance":"xsd:string"}}, _self.DynamicData);
    _self.MigrationFault = merge({"type":"MigrationFault"}, _self.VimFault);
    _self.MigrationFeatureNotSupported = merge({"type":"MigrationFeatureNotSupported","properties":{"atSourceHost":"xsd:boolean","failedHost":_self.ManagedObjectReference,"failedHostName":"xsd:string"}}, _self.MigrationFault);
    _self.MismatchedBundle = merge({"type":"MismatchedBundle","properties":{"bundleBuildNumber":"xsd:int","bundleUuid":"xsd:string","hostBuildNumber":"xsd:int","hostUuid":"xsd:string"}}, _self.VimFault);
    _self.MismatchedNetworkPolicies = merge({"type":"MismatchedNetworkPolicies","properties":{"backing":"xsd:string","connected":"xsd:boolean","device":"xsd:string"}}, _self.MigrationFault);
    _self.MismatchedVMotionNetworkNames = merge({"type":"MismatchedVMotionNetworkNames","properties":{"destNetwork":"xsd:string","sourceNetwork":"xsd:string"}}, _self.MigrationFault);
    _self.MissingLinuxCustResources = merge({"type":"MissingLinuxCustResources"}, _self.CustomizationFault);
    _self.MissingWindowsCustResources = merge({"type":"MissingWindowsCustResources"}, _self.CustomizationFault);
    _self.ModeInfo = merge({"type":"ModeInfo","properties":{"admin":"xsd:string","browse":"xsd:string","full":"xsd:string","modify":"xsd:string","read":"xsd:string","use":"xsd:string"}}, _self.DynamicData);
    _self.MountError = merge({"type":"MountError","properties":{"diskIndex":"xsd:int","vm":_self.ManagedObjectReference}}, _self.CustomizationFault);
    _self.NetworkCopyFault = merge({"type":"NetworkCopyFault"}, _self.FileFault);
    _self.NetworksMayNotBeTheSame = merge({"type":"NetworksMayNotBeTheSame","properties":{"name":"xsd:string"}}, _self.MigrationFault);
    _self.NicSettingMismatch = merge({"type":"NicSettingMismatch","properties":{"numberOfNicsInSpec":"xsd:int","numberOfNicsInVM":"xsd:int"}}, _self.CustomizationFault);
    _self.NoActiveHostInCluster = merge({"type":"NoActiveHostInCluster","properties":{"computeResource":_self.ManagedObjectReference}}, _self.InvalidState);
    _self.NoClientCertificate = merge({"type":"NoClientCertificate"}, _self.VimFault);
    _self.NoDiskFound = merge({"type":"NoDiskFound"}, _self.VimFault);
    _self.NoDiskSpace = merge({"type":"NoDiskSpace","properties":{"datastore":"xsd:string"}}, _self.FileFault);
    _self.NoDisksToCustomize = merge({"type":"NoDisksToCustomize"}, _self.CustomizationFault);
    _self.NoGateway = merge({"type":"NoGateway"}, _self.HostConfigFault);
    _self.NoGuestHeartbeat = merge({"type":"NoGuestHeartbeat"}, _self.MigrationFault);
    _self.NoHost = merge({"type":"NoHost","properties":{"name":"xsd:string"}}, _self.HostConnectFault);
    _self.NonHomeRDMVMotionNotSupported = merge({"type":"NonHomeRDMVMotionNotSupported","properties":{"device":"xsd:string"}}, _self.MigrationFeatureNotSupported);
    _self.NoPeerHostFound = merge({"type":"NoPeerHostFound"}, _self.HostPowerOpFailed);
    _self.NoPermission = merge({"type":"NoPermission","properties":{"object":_self.ManagedObjectReference,"privilegeId":"xsd:string"}}, _self.SecurityError);
    _self.NoPermissionOnHost = merge({"type":"NoPermissionOnHost"}, _self.HostConnectFault);
    _self.NoSubjectName = merge({"type":"NoSubjectName"}, _self.VimFault);
    _self.NotAuthenticated = merge({"type":"NotAuthenticated"}, _self.NoPermission);
    _self.NotEnoughLicenses = merge({"type":"NotEnoughLicenses"}, _self.RuntimeFault);
    _self.NotFound = merge({"type":"NotFound"}, _self.VimFault);
    _self.NotImplemented = merge({"type":"NotImplemented"}, _self.RuntimeFault);
    _self.NotSupported = merge({"type":"NotSupported"}, _self.RuntimeFault);
    _self.NotSupportedHost = merge({"type":"NotSupportedHost","properties":{"productName":"xsd:string","productVersion":"xsd:string"}}, _self.HostConnectFault);
    _self.NoVirtualNic = merge({"type":"NoVirtualNic"}, _self.HostConfigFault);
    _self.SelectionSpec = merge({"type":"SelectionSpec","properties":{"name":"xsd:string"}}, _self.DynamicData);
    _self.PropertyChange = merge({"type":"PropertyChange","properties":{"name":"xsd:string","op":_self.PropertyChangeOp,"val":"xsd:anyType"}}, _self.DynamicData);
    _self.OptionType = merge({"type":"OptionType","properties":{"valueIsReadonly":"xsd:boolean"}}, _self.DynamicData);
    _self.OutOfBounds = merge({"type":"OutOfBounds","properties":{"argumentName":"xsd:string"}}, _self.VimFault);
    _self.PatchBinariesNotFound = merge({"type":"PatchBinariesNotFound","properties":{"binary":"xsd:string[]","patchID":"xsd:string"}}, _self.VimFault);
    _self.PatchMetadataInvalid = merge({"type":"PatchMetadataInvalid","properties":{"metaData":"xsd:string[]","patchID":"xsd:string"}}, _self.VimFault);
    _self.PatchMetadataNotFound = merge({"type":"PatchMetadataNotFound"}, _self.PatchMetadataInvalid);
    _self.PatchNotApplicable = merge({"type":"PatchNotApplicable","properties":{"patchID":"xsd:string"}}, _self.VimFault);
    _self.PatchSuperseded = merge({"type":"PatchSuperseded","properties":{"supersede":"xsd:string[]"}}, _self.PatchNotApplicable);
    _self.PerfEntityMetricBase = merge({"type":"PerfEntityMetricBase","properties":{"entity":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.PerfSampleInfo = merge({"type":"PerfSampleInfo","properties":{"interval":"xsd:int","timestamp":"xsd:dateTime"}}, _self.DynamicData);
    _self.PerfMetricSeries = merge({"type":"PerfMetricSeries","properties":{"id":_self.PerfMetricId}}, _self.DynamicData);
    _self.PerfMetricSeriesCSV = merge({"type":"PerfMetricSeriesCSV","properties":{"value":"xsd:string"}}, _self.PerfMetricSeries);
    _self.PerfInterval = merge({"type":"PerfInterval","properties":{"enabled":"xsd:boolean","key":"xsd:int","length":"xsd:int","level":"xsd:int","name":"xsd:string","samplingPeriod":"xsd:int"}}, _self.DynamicData);
    _self.PerfMetricIntSeries = merge({"type":"PerfMetricIntSeries","properties":{"value":"xsd:long[]"}}, _self.PerfMetricSeries);
    _self.PerfProviderSummary = merge({"type":"PerfProviderSummary","properties":{"currentSupported":"xsd:boolean","entity":_self.ManagedObjectReference,"refreshRate":"xsd:int","summarySupported":"xsd:boolean"}}, _self.DynamicData);
    _self.PerfQuerySpec = merge({"type":"PerfQuerySpec","properties":{"endTime":"xsd:dateTime","entity":_self.ManagedObjectReference,"format":"xsd:string","intervalId":"xsd:int","maxSample":"xsd:int","metricId":_self.PerfMetricId,"startTime":"xsd:dateTime"}}, _self.DynamicData);
    _self.RoleEventArgument = merge({"type":"RoleEventArgument","properties":{"name":"xsd:string","roleId":"xsd:int"}}, _self.EventArgument);
    _self.PhysicalNicLinkInfo = merge({"type":"PhysicalNicLinkInfo","properties":{"duplex":"xsd:boolean","speedMb":"xsd:int"}}, _self.DynamicData);
    _self.PhysicalNicSpec = merge({"type":"PhysicalNicSpec","properties":{"ip":_self.HostIpConfig,"linkSpeed":_self.PhysicalNicLinkInfo}}, _self.DynamicData);
    _self.PhysicalNicCdpDeviceCapability = merge({"type":"PhysicalNicCdpDeviceCapability","properties":{"host":"xsd:boolean","igmpEnabled":"xsd:boolean","networkSwitch":"xsd:boolean","repeater":"xsd:boolean","router":"xsd:boolean","sourceRouteBridge":"xsd:boolean","transparentBridge":"xsd:boolean"}}, _self.DynamicData);
    _self.PhysicalNicCdpInfo = merge({"type":"PhysicalNicCdpInfo","properties":{"address":"xsd:string","cdpVersion":"xsd:int","deviceCapability":_self.PhysicalNicCdpDeviceCapability,"devId":"xsd:string","fullDuplex":"xsd:boolean","hardwarePlatform":"xsd:string","ipPrefix":"xsd:string","ipPrefixLen":"xsd:int","location":"xsd:string","mgmtAddr":"xsd:string","mtu":"xsd:int","portId":"xsd:string","samples":"xsd:int","softwareVersion":"xsd:string","systemName":"xsd:string","systemOID":"xsd:string","timeout":"xsd:int","ttl":"xsd:int","vlan":"xsd:int"}}, _self.DynamicData);
    _self.PhysicalNicHint = merge({"type":"PhysicalNicHint","properties":{"vlanId":"xsd:int"}}, _self.DynamicData);
    _self.PhysicalNicNameHint = merge({"type":"PhysicalNicNameHint","properties":{"network":"xsd:string"}}, _self.PhysicalNicHint);
    _self.PhysicalNicIpHint = merge({"type":"PhysicalNicIpHint","properties":{"ipSubnet":"xsd:string"}}, _self.PhysicalNicHint);
    _self.PlatformConfigFault = merge({"type":"PlatformConfigFault","properties":{"text":"xsd:string"}}, _self.HostConfigFault);
    _self.ProductComponentInfo = merge({"type":"ProductComponentInfo","properties":{"id":"xsd:string","name":"xsd:string","release":"xsd:int","version":"xsd:string"}}, _self.DynamicData);
    _self.PropertySpec = merge({"type":"PropertySpec","properties":{"all":"xsd:boolean","pathSet":"xsd:string[]","type":"xsd:string"}}, _self.DynamicData);
    _self.RDMNotPreserved = merge({"type":"RDMNotPreserved","properties":{"device":"xsd:string"}}, _self.MigrationFault);
    _self.RDMNotSupportedOnDatastore = merge({"type":"RDMNotSupportedOnDatastore","properties":{"datastore":_self.ManagedObjectReference,"datastoreName":"xsd:string","device":"xsd:string"}}, _self.VmConfigFault);
    _self.ReadOnlyDisksWithLegacyDestination = merge({"type":"ReadOnlyDisksWithLegacyDestination","properties":{"roDiskCount":"xsd:int","timeoutDanger":"xsd:boolean"}}, _self.MigrationFault);
    _self.RebootRequired = merge({"type":"RebootRequired","properties":{"patch":"xsd:string"}}, _self.VimFault);
    _self.RemoveFailed = merge({"type":"RemoveFailed"}, _self.VimFault);
    _self.RequestCanceled = merge({"type":"RequestCanceled"}, _self.RuntimeFault);
    _self.SharesInfo = merge({"type":"SharesInfo","properties":{"level":_self.SharesLevel,"shares":"xsd:int"}}, _self.DynamicData);
    _self.ResourceInUse = merge({"type":"ResourceInUse","properties":{"name":"xsd:string","type":"xsd:string"}}, _self.VimFault);
    _self.ResourcePoolResourceUsage = merge({"type":"ResourcePoolResourceUsage","properties":{"maxUsage":"xsd:long","overallUsage":"xsd:long","reservationUsed":"xsd:long","reservationUsedForVm":"xsd:long","unreservedForPool":"xsd:long","unreservedForVm":"xsd:long"}}, _self.DynamicData);
    _self.RestrictedVersion = merge({"type":"RestrictedVersion"}, _self.SecurityError);
    _self.RuleViolation = merge({"type":"RuleViolation","properties":{"host":_self.ManagedObjectReference}}, _self.VmConfigFault);
    _self.TaskScheduler = merge({"type":"TaskScheduler","properties":{"activeTime":"xsd:dateTime","expireTime":"xsd:dateTime"}}, _self.DynamicData);
    _self.ScsiLunDurableName = merge({"type":"ScsiLunDurableName","properties":{"data":"xsd:byte[]","namespace":"xsd:string","namespaceId":"xsd:byte"}}, _self.DynamicData);
    _self.UserSession = merge({"type":"UserSession","properties":{"fullName":"xsd:string","key":"xsd:string","lastActiveTime":"xsd:dateTime","locale":"xsd:string","loginTime":"xsd:dateTime","messageLocale":"xsd:string","userName":"xsd:string"}}, _self.DynamicData);
    _self.SessionManagerLocalTicket = merge({"type":"SessionManagerLocalTicket","properties":{"passwordFilePath":"xsd:string","userName":"xsd:string"}}, _self.DynamicData);
    _self.SnapshotCopyNotSupported = merge({"type":"SnapshotCopyNotSupported"}, _self.MigrationFault);
    _self.SnapshotFault = merge({"type":"SnapshotFault"}, _self.VimFault);
    _self.SnapshotLocked = merge({"type":"SnapshotLocked"}, _self.SnapshotFault);
    _self.SnapshotMoveFromNonHomeNotSupported = merge({"type":"SnapshotMoveFromNonHomeNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.SnapshotMoveNotSupported = merge({"type":"SnapshotMoveNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.SnapshotMoveToNonHomeNotSupported = merge({"type":"SnapshotMoveToNonHomeNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.SnapshotNoChange = merge({"type":"SnapshotNoChange"}, _self.SnapshotFault);
    _self.SSLVerifyFault = merge({"type":"SSLVerifyFault","properties":{"selfSigned":"xsd:boolean","thumbprint":"xsd:string"}}, _self.HostConnectFault);
    _self.SSPIChallenge = merge({"type":"SSPIChallenge","properties":{"base64Token":"xsd:string"}}, _self.VimFault);
    _self.StringOption = merge({"type":"StringOption","properties":{"defaultValue":"xsd:string","validCharacters":"xsd:string"}}, _self.OptionType);
    _self.SuspendedRelocateNotSupported = merge({"type":"SuspendedRelocateNotSupported"}, _self.MigrationFault);
    _self.SwapDatastoreUnset = merge({"type":"SwapDatastoreUnset"}, _self.VimFault);
    _self.SwapPlacementOverrideNotSupported = merge({"type":"SwapPlacementOverrideNotSupported"}, _self.InvalidVmConfig);
    _self.TaskFilterSpecByEntity = merge({"type":"TaskFilterSpecByEntity","properties":{"entity":_self.ManagedObjectReference,"recursion":_self.TaskFilterSpecRecursionOption}}, _self.DynamicData);
    _self.TaskFilterSpecByTime = merge({"type":"TaskFilterSpecByTime","properties":{"beginTime":"xsd:dateTime","endTime":"xsd:dateTime","timeType":_self.TaskFilterSpecTimeOption}}, _self.DynamicData);
    _self.TaskFilterSpecByUsername = merge({"type":"TaskFilterSpecByUsername","properties":{"systemUser":"xsd:boolean","userList":"xsd:string[]"}}, _self.DynamicData);
    _self.TaskReason = merge({"type":"TaskReason"}, _self.DynamicData);
    _self.TaskInProgress = merge({"type":"TaskInProgress","properties":{"task":_self.ManagedObjectReference}}, _self.VimFault);
    _self.TaskReasonAlarm = merge({"type":"TaskReasonAlarm","properties":{"alarm":_self.ManagedObjectReference,"alarmName":"xsd:string","entity":_self.ManagedObjectReference,"entityName":"xsd:string"}}, _self.TaskReason);
    _self.TaskReasonSchedule = merge({"type":"TaskReasonSchedule","properties":{"name":"xsd:string","scheduledTask":_self.ManagedObjectReference}}, _self.TaskReason);
    _self.TaskReasonSystem = merge({"type":"TaskReasonSystem"}, _self.TaskReason);
    _self.TaskReasonUser = merge({"type":"TaskReasonUser","properties":{"userName":"xsd:string"}}, _self.TaskReason);
    _self.Timedout = merge({"type":"Timedout"}, _self.VimFault);
    _self.ToolsConfigInfo = merge({"type":"ToolsConfigInfo","properties":{"afterPowerOn":"xsd:boolean","afterResume":"xsd:boolean","beforeGuestReboot":"xsd:boolean","beforeGuestShutdown":"xsd:boolean","beforeGuestStandby":"xsd:boolean","pendingCustomization":"xsd:string","syncTimeWithHost":"xsd:boolean","toolsUpgradePolicy":"xsd:string","toolsVersion":"xsd:int"}}, _self.DynamicData);
    _self.ToolsUnavailable = merge({"type":"ToolsUnavailable"}, _self.VimFault);
    _self.TooManyConsecutiveOverrides = merge({"type":"TooManyConsecutiveOverrides"}, _self.VimFault);
    _self.TooManyDevices = merge({"type":"TooManyDevices"}, _self.InvalidVmConfig);
    _self.TooManyDisksOnLegacyHost = merge({"type":"TooManyDisksOnLegacyHost","properties":{"diskCount":"xsd:int","timeoutDanger":"xsd:boolean"}}, _self.MigrationFault);
    _self.TooManyHosts = merge({"type":"TooManyHosts"}, _self.HostConnectFault);
    _self.TooManySnapshotLevels = merge({"type":"TooManySnapshotLevels"}, _self.SnapshotFault);
    _self.TraversalSpec = merge({"type":"TraversalSpec","properties":{"path":"xsd:string","selectSet":_self.SelectionSpec,"skip":"xsd:boolean","type":"xsd:string"}}, _self.SelectionSpec);
    _self.UncommittedUndoableDisk = merge({"type":"UncommittedUndoableDisk"}, _self.MigrationFault);
    _self.UncustomizableGuest = merge({"type":"UncustomizableGuest","properties":{"uncustomizableGuestOS":"xsd:string"}}, _self.CustomizationFault);
    _self.UnexpectedCustomizationFault = merge({"type":"UnexpectedCustomizationFault"}, _self.CustomizationFault);
    _self.UnrecognizedHost = merge({"type":"UnrecognizedHost","properties":{"hostName":"xsd:string"}}, _self.VimFault);
    _self.UnsharedSwapVMotionNotSupported = merge({"type":"UnsharedSwapVMotionNotSupported"}, _self.MigrationFeatureNotSupported);
    _self.UnsupportedDatastore = merge({"type":"UnsupportedDatastore","properties":{"datastore":_self.ManagedObjectReference}}, _self.VmConfigFault);
    _self.UnsupportedGuest = merge({"type":"UnsupportedGuest","properties":{"unsupportedGuestOS":"xsd:string"}}, _self.InvalidVmConfig);
    _self.UnsupportedVmxLocation = merge({"type":"UnsupportedVmxLocation"}, _self.VmConfigFault);
    _self.UserNotFound = merge({"type":"UserNotFound","properties":{"principal":"xsd:string","unresolved":"xsd:boolean"}}, _self.VimFault);
    _self.UserSearchResult = merge({"type":"UserSearchResult","properties":{"fullName":"xsd:string","group":"xsd:boolean","principal":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDeviceBackingInfo = merge({"type":"VirtualDeviceBackingInfo"}, _self.DynamicData);
    _self.VirtualDeviceConnectInfo = merge({"type":"VirtualDeviceConnectInfo","properties":{"allowGuestControl":"xsd:boolean","connected":"xsd:boolean","startConnected":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualDeviceBackingOption = merge({"type":"VirtualDeviceBackingOption","properties":{"type":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDeviceDeviceBackingInfo = merge({"type":"VirtualDeviceDeviceBackingInfo","properties":{"deviceName":"xsd:string","useAutoDetect":"xsd:boolean"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDeviceFileBackingInfo = merge({"type":"VirtualDeviceFileBackingInfo","properties":{"datastore":_self.ManagedObjectReference,"fileName":"xsd:string"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDevicePipeBackingInfo = merge({"type":"VirtualDevicePipeBackingInfo","properties":{"pipeName":"xsd:string"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDevicePipeBackingOption = merge({"type":"VirtualDevicePipeBackingOption"}, _self.VirtualDeviceBackingOption);
    _self.VirtualDeviceRemoteDeviceBackingInfo = merge({"type":"VirtualDeviceRemoteDeviceBackingInfo","properties":{"deviceName":"xsd:string","useAutoDetect":"xsd:boolean"}}, _self.VirtualDeviceBackingInfo);
    _self.VirtualDiskFlatVer1BackingInfo = merge({"type":"VirtualDiskFlatVer1BackingInfo","properties":{"diskMode":"xsd:string","split":"xsd:boolean","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskFlatVer2BackingInfo = merge({"type":"VirtualDiskFlatVer2BackingInfo","properties":{"diskMode":"xsd:string","split":"xsd:boolean","thinProvisioned":"xsd:boolean","uuid":"xsd:string","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskRawDiskMappingVer1BackingInfo = merge({"type":"VirtualDiskRawDiskMappingVer1BackingInfo","properties":{"compatibilityMode":"xsd:string","deviceName":"xsd:string","diskMode":"xsd:string","lunUuid":"xsd:string","uuid":"xsd:string"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskRawDiskVer2BackingInfo = merge({"type":"VirtualDiskRawDiskVer2BackingInfo","properties":{"descriptorFileName":"xsd:string","uuid":"xsd:string"}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualDiskSparseVer1BackingInfo = merge({"type":"VirtualDiskSparseVer1BackingInfo","properties":{"diskMode":"xsd:string","spaceUsedInKB":"xsd:long","split":"xsd:boolean","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskSparseVer2BackingInfo = merge({"type":"VirtualDiskSparseVer2BackingInfo","properties":{"diskMode":"xsd:string","spaceUsedInKB":"xsd:long","split":"xsd:boolean","uuid":"xsd:string","writeThrough":"xsd:boolean"}}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualDiskSpec = merge({"type":"VirtualDiskSpec","properties":{"adapterType":"xsd:string","diskType":"xsd:string"}}, _self.DynamicData);
    _self.VirtualEthernetCardLegacyNetworkBackingInfo = merge({"type":"VirtualEthernetCardLegacyNetworkBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualEthernetCardNetworkBackingInfo = merge({"type":"VirtualEthernetCardNetworkBackingInfo","properties":{"network":_self.ManagedObjectReference}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualFloppyDeviceBackingInfo = merge({"type":"VirtualFloppyDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualFloppyImageBackingInfo = merge({"type":"VirtualFloppyImageBackingInfo"}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualFloppyRemoteDeviceBackingInfo = merge({"type":"VirtualFloppyRemoteDeviceBackingInfo"}, _self.VirtualDeviceRemoteDeviceBackingInfo);
    _self.VirtualHardwareCompatibilityIssue = merge({"type":"VirtualHardwareCompatibilityIssue"}, _self.VmConfigFault);
    _self.VirtualHardwareVersionNotSupported = merge({"type":"VirtualHardwareVersionNotSupported","properties":{"host":_self.ManagedObjectReference,"hostName":"xsd:string"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.VirtualMachineCapability = merge({"type":"VirtualMachineCapability","properties":{"bootOptionsSupported":"xsd:boolean","consolePreferencesSupported":"xsd:boolean","cpuFeatureMaskSupported":"xsd:boolean","disableSnapshotsSupported":"xsd:boolean","diskSharesSupported":"xsd:boolean","lockSnapshotsSupported":"xsd:boolean","memorySnapshotsSupported":"xsd:boolean","multipleSnapshotsSupported":"xsd:boolean","npivWwnOnNonRdmVmSupported":"xsd:boolean","poweredOffSnapshotsSupported":"xsd:boolean","quiescedSnapshotsSupported":"xsd:boolean","revertToSnapshotSupported":"xsd:boolean","s1AcpiManagementSupported":"xsd:boolean","settingScreenResolutionSupported":"xsd:boolean","settingVideoRamSizeSupported":"xsd:boolean","snapshotConfigSupported":"xsd:boolean","snapshotOperationsSupported":"xsd:boolean","swapPlacementSupported":"xsd:boolean","toolsAutoUpdateSupported":"xsd:boolean","toolsSyncTimeSupported":"xsd:boolean","virtualMmuUsageSupported":"xsd:boolean","vmNpivWwnSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineAffinityInfo = merge({"type":"VirtualMachineAffinityInfo","properties":{"affinitySet":"xsd:int[]"}}, _self.DynamicData);
    _self.VirtualMachineBootOptions = merge({"type":"VirtualMachineBootOptions","properties":{"bootDelay":"xsd:long","enterBIOSSetup":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineConsolePreferences = merge({"type":"VirtualMachineConsolePreferences","properties":{"closeOnPowerOffOrSuspend":"xsd:boolean","enterFullScreenOnPowerOn":"xsd:boolean","powerOnWhenOpened":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineConfigInfoDatastoreUrlPair = merge({"type":"VirtualMachineConfigInfoDatastoreUrlPair","properties":{"name":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineDefaultPowerOpInfo = merge({"type":"VirtualMachineDefaultPowerOpInfo","properties":{"defaultPowerOffType":"xsd:string","defaultResetType":"xsd:string","defaultSuspendType":"xsd:string","powerOffType":"xsd:string","resetType":"xsd:string","standbyAction":"xsd:string","suspendType":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineFileInfo = merge({"type":"VirtualMachineFileInfo","properties":{"logDirectory":"xsd:string","snapshotDirectory":"xsd:string","suspendDirectory":"xsd:string","vmPathName":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineFlagInfo = merge({"type":"VirtualMachineFlagInfo","properties":{"disableAcceleration":"xsd:boolean","diskUuidEnabled":"xsd:boolean","enableLogging":"xsd:boolean","htSharing":"xsd:string","monitorType":"xsd:string","runWithDebugInfo":"xsd:boolean","snapshotDisabled":"xsd:boolean","snapshotLocked":"xsd:boolean","snapshotPowerOffBehavior":"xsd:string","useToe":"xsd:boolean","virtualMmuUsage":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineNetworkShaperInfo = merge({"type":"VirtualMachineNetworkShaperInfo","properties":{"averageBps":"xsd:long","burstSize":"xsd:long","enabled":"xsd:boolean","peakBps":"xsd:long"}}, _self.DynamicData);
    _self.VirtualMachineConfigOptionDescriptor = merge({"type":"VirtualMachineConfigOptionDescriptor","properties":{"description":"xsd:string","host":_self.ManagedObjectReference,"key":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineConfigSummary = merge({"type":"VirtualMachineConfigSummary","properties":{"annotation":"xsd:string","cpuReservation":"xsd:int","guestFullName":"xsd:string","guestId":"xsd:string","memoryReservation":"xsd:int","memorySizeMB":"xsd:int","name":"xsd:string","numCpu":"xsd:int","numEthernetCards":"xsd:int","numVirtualDisks":"xsd:int","template":"xsd:boolean","uuid":"xsd:string","vmPathName":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineFileLayoutDiskLayout = merge({"type":"VirtualMachineFileLayoutDiskLayout","properties":{"diskFile":"xsd:string[]","key":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineFileLayoutSnapshotLayout = merge({"type":"VirtualMachineFileLayoutSnapshotLayout","properties":{"key":_self.ManagedObjectReference,"snapshotFile":"xsd:string[]"}}, _self.DynamicData);
    _self.VirtualMachineGuestSummary = merge({"type":"VirtualMachineGuestSummary","properties":{"guestFullName":"xsd:string","guestId":"xsd:string","hostName":"xsd:string","ipAddress":"xsd:string","toolsStatus":_self.VirtualMachineToolsStatus}}, _self.DynamicData);
    _self.VirtualMachineIdeDiskDevicePartitionInfo = merge({"type":"VirtualMachineIdeDiskDevicePartitionInfo","properties":{"capacity":"xsd:int","id":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineMemoryReservationSpec = merge({"type":"VirtualMachineMemoryReservationSpec","properties":{"allocationPolicy":"xsd:string","virtualMachineReserved":"xsd:long"}}, _self.DynamicData);
    _self.VirtualMachineMessage = merge({"type":"VirtualMachineMessage","properties":{"argument":"xsd:anyType[]","id":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineMksTicket = merge({"type":"VirtualMachineMksTicket","properties":{"cfgFile":"xsd:string","host":"xsd:string","port":"xsd:int","sslThumbprint":"xsd:string","ticket":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineQuickStats = merge({"type":"VirtualMachineQuickStats","properties":{"distributedCpuEntitlement":"xsd:int","distributedMemoryEntitlement":"xsd:int","guestHeartbeatStatus":_self.ManagedEntityStatus,"guestMemoryUsage":"xsd:int","hostMemoryUsage":"xsd:int","overallCpuUsage":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineRelocateSpecDiskLocator = merge({"type":"VirtualMachineRelocateSpecDiskLocator","properties":{"datastore":_self.ManagedObjectReference,"diskId":"xsd:int"}}, _self.DynamicData);
    _self.VirtualMachineTargetInfo = merge({"type":"VirtualMachineTargetInfo","properties":{"configurationTag":"xsd:string[]","name":"xsd:string"}}, _self.DynamicData);
    _self.VirtualParallelPortDeviceBackingInfo = merge({"type":"VirtualParallelPortDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualParallelPortFileBackingInfo = merge({"type":"VirtualParallelPortFileBackingInfo"}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualPointingDeviceDeviceBackingInfo = merge({"type":"VirtualPointingDeviceDeviceBackingInfo","properties":{"hostPointingDevice":"xsd:string"}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualSCSIPassthroughDeviceBackingInfo = merge({"type":"VirtualSCSIPassthroughDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualSerialPortDeviceBackingInfo = merge({"type":"VirtualSerialPortDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualSerialPortFileBackingInfo = merge({"type":"VirtualSerialPortFileBackingInfo"}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualSerialPortPipeBackingInfo = merge({"type":"VirtualSerialPortPipeBackingInfo","properties":{"endpoint":"xsd:string","noRxLoss":"xsd:boolean"}}, _self.VirtualDevicePipeBackingInfo);
    _self.VirtualSoundCardDeviceBackingInfo = merge({"type":"VirtualSoundCardDeviceBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualUSBUSBBackingInfo = merge({"type":"VirtualUSBUSBBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VmConfigFileInfo = merge({"type":"VmConfigFileInfo","properties":{"configVersion":"xsd:int"}}, _self.FileInfo);
    _self.VmConfigFileQueryFlags = merge({"type":"VmConfigFileQueryFlags","properties":{"configVersion":"xsd:boolean"}}, _self.DynamicData);
    _self.VmConfigFileQueryFilter = merge({"type":"VmConfigFileQueryFilter","properties":{"matchConfigVersion":"xsd:int[]"}}, _self.DynamicData);
    _self.VmDiskFileInfo = merge({"type":"VmDiskFileInfo","properties":{"capacityKb":"xsd:long","controllerType":"xsd:string","diskExtents":"xsd:string[]","diskType":"xsd:string","hardwareVersion":"xsd:int"}}, _self.FileInfo);
    _self.VmDiskFileQueryFlags = merge({"type":"VmDiskFileQueryFlags","properties":{"capacityKb":"xsd:boolean","controllerType":"xsd:boolean","diskExtents":"xsd:boolean","diskType":"xsd:boolean","hardwareVersion":"xsd:boolean"}}, _self.DynamicData);
    _self.VmDiskFileQueryFilter = merge({"type":"VmDiskFileQueryFilter","properties":{"controllerType":"xsd:string[]","diskType":"xsd:string[]","matchHardwareVersion":"xsd:int[]"}}, _self.DynamicData);
    _self.VmfsDatastoreSpec = merge({"type":"VmfsDatastoreSpec","properties":{"diskUuid":"xsd:string"}}, _self.DynamicData);
    _self.VmLimitLicense = merge({"type":"VmLimitLicense","properties":{"limit":"xsd:int"}}, _self.NotEnoughLicenses);
    _self.VmLogFileInfo = merge({"type":"VmLogFileInfo"}, _self.FileInfo);
    _self.VmLogFileQuery = merge({"type":"VmLogFileQuery"}, _self.FileQuery);
    _self.VmNvramFileInfo = merge({"type":"VmNvramFileInfo"}, _self.FileInfo);
    _self.VmNvramFileQuery = merge({"type":"VmNvramFileQuery"}, _self.FileQuery);
    _self.VMotionInterfaceIssue = merge({"type":"VMotionInterfaceIssue","properties":{"atSourceHost":"xsd:boolean","failedHost":"xsd:string","failedHostEntity":_self.ManagedObjectReference}}, _self.MigrationFault);
    _self.VmotionInterfaceNotEnabled = merge({"type":"VmotionInterfaceNotEnabled"}, _self.HostPowerOpFailed);
    _self.VMotionLinkCapacityLow = merge({"type":"VMotionLinkCapacityLow","properties":{"network":"xsd:string"}}, _self.VMotionInterfaceIssue);
    _self.VMotionLinkDown = merge({"type":"VMotionLinkDown","properties":{"network":"xsd:string"}}, _self.VMotionInterfaceIssue);
    _self.VMotionNotConfigured = merge({"type":"VMotionNotConfigured"}, _self.VMotionInterfaceIssue);
    _self.VMotionNotLicensed = merge({"type":"VMotionNotLicensed"}, _self.VMotionInterfaceIssue);
    _self.VMotionNotSupported = merge({"type":"VMotionNotSupported"}, _self.VMotionInterfaceIssue);
    _self.VMotionProtocolIncompatible = merge({"type":"VMotionProtocolIncompatible"}, _self.MigrationFault);
    _self.VmSnapshotFileInfo = merge({"type":"VmSnapshotFileInfo"}, _self.FileInfo);
    _self.VmSnapshotFileQuery = merge({"type":"VmSnapshotFileQuery"}, _self.FileQuery);
    _self.VmWwnConflict = merge({"type":"VmWwnConflict","properties":{"host":_self.ManagedObjectReference,"name":"xsd:string","vm":_self.ManagedObjectReference,"wwn":"xsd:long"}}, _self.InvalidVmConfig);
    _self.VolumeEditorError = merge({"type":"VolumeEditorError"}, _self.CustomizationFault);
    _self.WakeOnLanNotSupported = merge({"type":"WakeOnLanNotSupported"}, _self.VirtualHardwareCompatibilityIssue);
    _self.WakeOnLanNotSupportedByVmotionNIC = merge({"type":"WakeOnLanNotSupportedByVmotionNIC"}, _self.HostPowerOpFailed);
    _self.WillModifyConfigCpuRequirements = merge({"type":"WillModifyConfigCpuRequirements"}, _self.MigrationFault);
    _self.AboutInfo = merge({"type":"AboutInfo","properties":{"apiType":"xsd:string","apiVersion":"xsd:string","build":"xsd:string","fullName":"xsd:string","localeBuild":"xsd:string","localeVersion":"xsd:string","name":"xsd:string","osType":"xsd:string","productLineId":"xsd:string","vendor":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.HostAccountSpec = merge({"type":"HostAccountSpec","properties":{"description":"xsd:string","id":"xsd:string","password":"xsd:string"}}, _self.DynamicData);
    _self.Action = merge({"type":"Action"}, _self.DynamicData);
    _self.AdminDisabled = merge({"type":"AdminDisabled"}, _self.HostConfigFault);
    _self.AdminNotDisabled = merge({"type":"AdminNotDisabled"}, _self.HostConfigFault);
    _self.AffinityConfigured = merge({"type":"AffinityConfigured","properties":{"configuredAffinity":"xsd:string[]"}}, _self.MigrationFault);
    _self.AfterStartupTaskScheduler = merge({"type":"AfterStartupTaskScheduler","properties":{"minute":"xsd:int"}}, _self.TaskScheduler);
    _self.AgentInstallFailed = merge({"type":"AgentInstallFailed"}, _self.HostConnectFault);
    _self.AlarmAction = merge({"type":"AlarmAction"}, _self.DynamicData);
    _self.LocalizedMethodFault = merge({"type":"LocalizedMethodFault","properties":{"fault":_self.MethodFault,"localizedMessage":"xsd:string"}}, _self.DynamicData);
    _self.AlarmExpression = merge({"type":"AlarmExpression"}, _self.DynamicData);
    _self.AlarmSetting = merge({"type":"AlarmSetting","properties":{"reportingFrequency":"xsd:int","toleranceRange":"xsd:int"}}, _self.DynamicData);
    _self.AlarmSpec = merge({"type":"AlarmSpec","properties":{"action":_self.AlarmAction,"description":"xsd:string","enabled":"xsd:boolean","expression":_self.AlarmExpression,"name":"xsd:string","setting":_self.AlarmSetting}}, _self.DynamicData);
    _self.AlarmState = merge({"type":"AlarmState","properties":{"alarm":_self.ManagedObjectReference,"entity":_self.ManagedObjectReference,"key":"xsd:string","overallStatus":_self.ManagedEntityStatus,"time":"xsd:dateTime"}}, _self.DynamicData);
    _self.AlarmTriggeringAction = merge({"type":"AlarmTriggeringAction","properties":{"action":_self.Action,"green2yellow":"xsd:boolean","red2yellow":"xsd:boolean","yellow2green":"xsd:boolean","yellow2red":"xsd:boolean"}}, _self.AlarmAction);
    _self.AlreadyBeingManaged = merge({"type":"AlreadyBeingManaged","properties":{"ipAddress":"xsd:string"}}, _self.HostConnectFault);
    _self.AlreadyConnected = merge({"type":"AlreadyConnected","properties":{"name":"xsd:string"}}, _self.HostConnectFault);
    _self.AndAlarmExpression = merge({"type":"AndAlarmExpression","properties":{"expression":_self.AlarmExpression}}, _self.AlarmExpression);
    _self.ApplicationQuiesceFault = merge({"type":"ApplicationQuiesceFault"}, _self.SnapshotFault);
    _self.ArrayUpdateSpec = merge({"type":"ArrayUpdateSpec","properties":{"operation":_self.ArrayUpdateOperation,"removeKey":"xsd:anyType"}}, _self.DynamicData);
    _self.AuthorizationPrivilege = merge({"type":"AuthorizationPrivilege","properties":{"name":"xsd:string","onParent":"xsd:boolean","privGroupName":"xsd:string","privId":"xsd:string"}}, _self.DynamicData);
    _self.Description = merge({"type":"Description","properties":{"label":"xsd:string","summary":"xsd:string"}}, _self.DynamicData);
    _self.AutoStartDefaults = merge({"type":"AutoStartDefaults","properties":{"enabled":"xsd:boolean","startDelay":"xsd:int","stopAction":"xsd:string","stopDelay":"xsd:int","waitForHeartbeat":"xsd:boolean"}}, _self.DynamicData);
    _self.AutoStartPowerInfo = merge({"type":"AutoStartPowerInfo","properties":{"key":_self.ManagedObjectReference,"startAction":"xsd:string","startDelay":"xsd:int","startOrder":"xsd:int","stopAction":"xsd:string","stopDelay":"xsd:int","waitForHeartbeat":_self.AutoStartWaitHeartbeatSetting}}, _self.DynamicData);
    _self.BoolOption = merge({"type":"BoolOption","properties":{"defaultValue":"xsd:boolean","supported":"xsd:boolean"}}, _self.OptionType);
    _self.CannotAccessFile = merge({"type":"CannotAccessFile"}, _self.FileFault);
    _self.CannotAccessNetwork = merge({"type":"CannotAccessNetwork"}, _self.CannotAccessVmDevice);
    _self.CannotAccessVmConfig = merge({"type":"CannotAccessVmConfig","properties":{"reason":_self.LocalizedMethodFault}}, _self.CannotAccessVmComponent);
    _self.CannotAccessVmDisk = merge({"type":"CannotAccessVmDisk","properties":{"fault":_self.LocalizedMethodFault}}, _self.CannotAccessVmDevice);
    _self.CannotCreateFile = merge({"type":"CannotCreateFile"}, _self.FileFault);
    _self.CannotDecryptPasswords = merge({"type":"CannotDecryptPasswords"}, _self.CustomizationFault);
    _self.CannotDeleteFile = merge({"type":"CannotDeleteFile"}, _self.FileFault);
    _self.CannotModifyConfigCpuRequirements = merge({"type":"CannotModifyConfigCpuRequirements"}, _self.MigrationFault);
    _self.Capability = merge({"type":"Capability","properties":{"multiHostSupported":"xsd:boolean","provisioningSupported":"xsd:boolean","userShellAccessSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.ClusterAction = merge({"type":"ClusterAction","properties":{"target":_self.ManagedObjectReference,"type":"xsd:string"}}, _self.DynamicData);
    _self.ClusterActionHistory = merge({"type":"ClusterActionHistory","properties":{"action":_self.ClusterAction,"time":"xsd:dateTime"}}, _self.DynamicData);
    _self.ClusterAttemptedVmInfo = merge({"type":"ClusterAttemptedVmInfo","properties":{"task":_self.ManagedObjectReference,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterDrsMigration = merge({"type":"ClusterDrsMigration","properties":{"cpuLoad":"xsd:int","destination":_self.ManagedObjectReference,"destinationCpuLoad":"xsd:int","destinationMemoryLoad":"xsd:long","key":"xsd:string","memoryLoad":"xsd:long","source":_self.ManagedObjectReference,"sourceCpuLoad":"xsd:int","sourceMemoryLoad":"xsd:long","time":"xsd:dateTime","vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterRecommendation = merge({"type":"ClusterRecommendation","properties":{"action":_self.ClusterAction,"key":"xsd:string","prerequisite":"xsd:string[]","rating":"xsd:int","reason":"xsd:string","reasonText":"xsd:string","target":_self.ManagedObjectReference,"time":"xsd:dateTime","type":"xsd:string"}}, _self.DynamicData);
    _self.ClusterDrsVmConfigInfo = merge({"type":"ClusterDrsVmConfigInfo","properties":{"behavior":_self.DrsBehavior,"enabled":"xsd:boolean","key":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterRuleInfo = merge({"type":"ClusterRuleInfo","properties":{"enabled":"xsd:boolean","key":"xsd:int","name":"xsd:string","status":_self.ManagedEntityStatus}}, _self.DynamicData);
    _self.ClusterDpmHostConfigInfo = merge({"type":"ClusterDpmHostConfigInfo","properties":{"behavior":_self.DpmBehavior,"enabled":"xsd:boolean","key":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterDrsVmConfigSpec = merge({"type":"ClusterDrsVmConfigSpec","properties":{"info":_self.ClusterDrsVmConfigInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterRuleSpec = merge({"type":"ClusterRuleSpec","properties":{"info":_self.ClusterRuleInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterDpmHostConfigSpec = merge({"type":"ClusterDpmHostConfigSpec","properties":{"info":_self.ClusterDpmHostConfigInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterDasVmSettings = merge({"type":"ClusterDasVmSettings","properties":{"isolationResponse":"xsd:string","restartPriority":"xsd:string"}}, _self.DynamicData);
    _self.OptionValue = merge({"type":"OptionValue","properties":{"key":"xsd:string","value":"xsd:anyType"}}, _self.DynamicData);
    _self.ClusterHostPowerAction = merge({"type":"ClusterHostPowerAction","properties":{"cpuCapacityMHz":"xsd:int","memCapacityMB":"xsd:int","operationType":_self.HostPowerOperationType,"powerConsumptionWatt":"xsd:int"}}, _self.ClusterAction);
    _self.ClusterHostRecommendation = merge({"type":"ClusterHostRecommendation","properties":{"host":_self.ManagedObjectReference,"rating":"xsd:int"}}, _self.DynamicData);
    _self.ClusterInitialPlacementAction = merge({"type":"ClusterInitialPlacementAction","properties":{"pool":_self.ManagedObjectReference,"targetHost":_self.ManagedObjectReference}}, _self.ClusterAction);
    _self.ClusterMigrationAction = merge({"type":"ClusterMigrationAction","properties":{"drsMigration":_self.ClusterDrsMigration}}, _self.ClusterAction);
    _self.ClusterNotAttemptedVmInfo = merge({"type":"ClusterNotAttemptedVmInfo","properties":{"fault":_self.LocalizedMethodFault,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.ClusterPowerOnVmResult = merge({"type":"ClusterPowerOnVmResult","properties":{"attempted":_self.ClusterAttemptedVmInfo,"notAttempted":_self.ClusterNotAttemptedVmInfo,"recommendations":_self.ClusterRecommendation}}, _self.DynamicData);
    _self.ComputeResourceConfigInfo = merge({"type":"ComputeResourceConfigInfo","properties":{"vmSwapPlacement":"xsd:string"}}, _self.DynamicData);
    _self.ComputeResourceSummary = merge({"type":"ComputeResourceSummary","properties":{"effectiveCpu":"xsd:int","effectiveMemory":"xsd:long","numCpuCores":"xsd:short","numCpuThreads":"xsd:short","numEffectiveHosts":"xsd:int","numHosts":"xsd:int","overallStatus":_self.ManagedEntityStatus,"totalCpu":"xsd:int","totalMemory":"xsd:long"}}, _self.DynamicData);
    _self.ComputeResourceConfigSpec = merge({"type":"ComputeResourceConfigSpec","properties":{"vmSwapPlacement":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineCdromInfo = merge({"type":"VirtualMachineCdromInfo"}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineFloppyInfo = merge({"type":"VirtualMachineFloppyInfo"}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineLegacyNetworkSwitchInfo = merge({"type":"VirtualMachineLegacyNetworkSwitchInfo","properties":{"name":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineNetworkInfo = merge({"type":"VirtualMachineNetworkInfo","properties":{"network":_self.NetworkSummary}}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineParallelInfo = merge({"type":"VirtualMachineParallelInfo"}, _self.VirtualMachineTargetInfo);
    _self.ResourcePoolRuntimeInfo = merge({"type":"ResourcePoolRuntimeInfo","properties":{"cpu":_self.ResourcePoolResourceUsage,"memory":_self.ResourcePoolResourceUsage,"overallStatus":_self.ManagedEntityStatus}}, _self.DynamicData);
    _self.VirtualMachineScsiPassthroughInfo = merge({"type":"VirtualMachineScsiPassthroughInfo","properties":{"physicalUnitNumber":"xsd:int","scsiClass":"xsd:string","vendor":"xsd:string"}}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineSerialInfo = merge({"type":"VirtualMachineSerialInfo"}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineSoundInfo = merge({"type":"VirtualMachineSoundInfo"}, _self.VirtualMachineTargetInfo);
    _self.ContainerView = merge({"type":"ContainerView","properties":{"container":_self.ManagedObjectReference,"recursive":"xsd:boolean","type":"xsd:string[]"},"methods":{}}, _self.ManagedObjectView);
    _self.CpuIncompatible = merge({"type":"CpuIncompatible","properties":{"desiredBits":"xsd:string","host":_self.ManagedObjectReference,"level":"xsd:int","registerBits":"xsd:string","registerName":"xsd:string"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.CpuIncompatible1ECX = merge({"type":"CpuIncompatible1ECX","properties":{"other":"xsd:boolean","otherOnly":"xsd:boolean","sse3":"xsd:boolean","sse41":"xsd:boolean","sse42":"xsd:boolean","ssse3":"xsd:boolean"}}, _self.CpuIncompatible);
    _self.CpuIncompatible81EDX = merge({"type":"CpuIncompatible81EDX","properties":{"ffxsr":"xsd:boolean","lm":"xsd:boolean","nx":"xsd:boolean","other":"xsd:boolean","otherOnly":"xsd:boolean","rdtscp":"xsd:boolean"}}, _self.CpuIncompatible);
    _self.CreateTaskAction = merge({"type":"CreateTaskAction","properties":{"cancelable":"xsd:boolean","taskTypeId":"xsd:string"}}, _self.Action);
    _self.PrivilegePolicyDef = merge({"type":"PrivilegePolicyDef","properties":{"createPrivilege":"xsd:string","deletePrivilege":"xsd:string","readPrivilege":"xsd:string","updatePrivilege":"xsd:string"}}, _self.DynamicData);
    _self.CustomFieldValue = merge({"type":"CustomFieldValue","properties":{"key":"xsd:int"}}, _self.DynamicData);
    _self.CustomizationGlobalIPSettings = merge({"type":"CustomizationGlobalIPSettings","properties":{"dnsServerList":"xsd:string[]","dnsSuffixList":"xsd:string[]"}}, _self.DynamicData);
    _self.CustomizationGuiRunOnce = merge({"type":"CustomizationGuiRunOnce","properties":{"commandList":"xsd:string[]"}}, _self.DynamicData);
    _self.CustomizationPassword = merge({"type":"CustomizationPassword","properties":{"plainText":"xsd:boolean","value":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationIdentification = merge({"type":"CustomizationIdentification","properties":{"domainAdmin":"xsd:string","domainAdminPassword":_self.CustomizationPassword,"joinDomain":"xsd:string","joinWorkgroup":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationIdentitySettings = merge({"type":"CustomizationIdentitySettings"}, _self.DynamicData);
    _self.CustomizationIpGenerator = merge({"type":"CustomizationIpGenerator"}, _self.DynamicData);
    _self.CustomizationLicenseFilePrintData = merge({"type":"CustomizationLicenseFilePrintData","properties":{"autoMode":_self.CustomizationLicenseDataMode,"autoUsers":"xsd:int"}}, _self.DynamicData);
    _self.CustomizationName = merge({"type":"CustomizationName"}, _self.DynamicData);
    _self.CustomizationOptions = merge({"type":"CustomizationOptions"}, _self.DynamicData);
    _self.CustomizationPrefixName = merge({"type":"CustomizationPrefixName","properties":{"base":"xsd:string"}}, _self.CustomizationName);
    _self.CustomizationSpecInfo = merge({"type":"CustomizationSpecInfo","properties":{"changeVersion":"xsd:string","description":"xsd:string","lastUpdateTime":"xsd:dateTime","name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationSpecManager = {"type":"CustomizationSpecManager","properties":{"encryptionKey":"xsd:byte[]","info":_self.CustomizationSpecInfo},"methods":{"CheckCustomizationResources":{"params":{"_this":"ManagedObjectReference","guestOs":"xsd:string"},"returns":null},"CreateCustomizationSpec":{"params":{"_this":"ManagedObjectReference","item":"CustomizationSpecItem"},"returns":null},"CustomizationSpecItemToXml":{"params":{"_this":"ManagedObjectReference","item":"CustomizationSpecItem"},"returns":"xsd:string"},"DeleteCustomizationSpec":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":null},"DoesCustomizationSpecExist":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"xsd:boolean"},"DuplicateCustomizationSpec":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","newName":"xsd:string"},"returns":null},"GetCustomizationSpec":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"CustomizationSpecItem"},"OverwriteCustomizationSpec":{"params":{"_this":"ManagedObjectReference","item":"CustomizationSpecItem"},"returns":null},"RenameCustomizationSpec":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","newName":"xsd:string"},"returns":null},"XmlToCustomizationSpecItem":{"params":{"_this":"ManagedObjectReference","specItemXml":"xsd:string"},"returns":"CustomizationSpecItem"}}};
    _self.CustomizationUserData = merge({"type":"CustomizationUserData","properties":{"computerName":_self.CustomizationName,"fullName":"xsd:string","orgName":"xsd:string","productId":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationSysprepText = merge({"type":"CustomizationSysprepText","properties":{"value":"xsd:string"}}, _self.CustomizationIdentitySettings);
    _self.CustomizationUnknownIpGenerator = merge({"type":"CustomizationUnknownIpGenerator"}, _self.CustomizationIpGenerator);
    _self.CustomizationUnknownName = merge({"type":"CustomizationUnknownName"}, _self.CustomizationName);
    _self.CustomizationVirtualMachineName = merge({"type":"CustomizationVirtualMachineName"}, _self.CustomizationName);
    _self.CustomizationWinOptions = merge({"type":"CustomizationWinOptions","properties":{"changeSID":"xsd:boolean","deleteAccounts":"xsd:boolean","reboot":_self.CustomizationSysprepRebootOption}}, _self.CustomizationOptions);
    _self.DatacenterMismatchArgument = merge({"type":"DatacenterMismatchArgument","properties":{"entity":_self.ManagedObjectReference,"inputDatacenter":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.DatastoreCapability = merge({"type":"DatastoreCapability","properties":{"directoryHierarchySupported":"xsd:boolean","perFileThinProvisioningSupported":"xsd:boolean","rawDiskMappingsSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.DatastoreInfo = merge({"type":"DatastoreInfo","properties":{"freeSpace":"xsd:long","maxFileSize":"xsd:long","name":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.DatastoreSummary = merge({"type":"DatastoreSummary","properties":{"accessible":"xsd:boolean","capacity":"xsd:long","datastore":_self.ManagedObjectReference,"freeSpace":"xsd:long","multipleHostAccess":"xsd:boolean","name":"xsd:string","type":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.HostMountInfo = merge({"type":"HostMountInfo","properties":{"accessible":"xsd:boolean","accessMode":"xsd:string","path":"xsd:string"}}, _self.DynamicData);
    _self.DatastoreNotWritableOnHost = merge({"type":"DatastoreNotWritableOnHost","properties":{"host":_self.ManagedObjectReference}}, _self.InvalidDatastore);
    _self.VirtualMachineDatastoreVolumeOption = merge({"type":"VirtualMachineDatastoreVolumeOption","properties":{"fileSystemType":"xsd:string","majorVersion":"xsd:int"}}, _self.DynamicData);
    _self.DestinationSwitchFull = merge({"type":"DestinationSwitchFull"}, _self.CannotAccessNetwork);
    _self.DeviceBackedVirtualDiskSpec = merge({"type":"DeviceBackedVirtualDiskSpec","properties":{"device":"xsd:string"}}, _self.VirtualDiskSpec);
    _self.DeviceNotSupported = merge({"type":"DeviceNotSupported","properties":{"device":"xsd:string","reason":"xsd:string"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.DiagnosticManagerBundleInfo = merge({"type":"DiagnosticManagerBundleInfo","properties":{"system":_self.ManagedObjectReference,"url":"xsd:string"}}, _self.DynamicData);
    _self.DiagnosticManagerLogDescriptor = merge({"type":"DiagnosticManagerLogDescriptor","properties":{"creator":"xsd:string","fileName":"xsd:string","format":"xsd:string","info":_self.Description,"key":"xsd:string","mimeType":"xsd:string"}}, _self.DynamicData);
    _self.DiagnosticManagerLogHeader = merge({"type":"DiagnosticManagerLogHeader","properties":{"lineEnd":"xsd:int","lineStart":"xsd:int","lineText":"xsd:string[]"}}, _self.DynamicData);
    _self.DisableAdminNotSupported = merge({"type":"DisableAdminNotSupported"}, _self.HostConfigFault);
    _self.DisallowedMigrationDeviceAttached = merge({"type":"DisallowedMigrationDeviceAttached","properties":{"fault":_self.LocalizedMethodFault}}, _self.MigrationFault);
    _self.DiskNotSupported = merge({"type":"DiskNotSupported","properties":{"disk":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.EntityEventArgument = merge({"type":"EntityEventArgument","properties":{"name":"xsd:string"}}, _self.EventArgument);
    _self.EvaluationLicenseSource = merge({"type":"EvaluationLicenseSource","properties":{"remainingHours":"xsd:long"}}, _self.LicenseSource);
    _self.VmEventArgument = merge({"type":"VmEventArgument","properties":{"vm":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.EventAlarmExpression = merge({"type":"EventAlarmExpression","properties":{"eventType":"xsd:string","eventTypeId":"xsd:string"}}, _self.AlarmExpression);
    _self.EventFilterSpec = merge({"type":"EventFilterSpec","properties":{"alarm":_self.ManagedObjectReference,"category":"xsd:string[]","disableFullMessage":"xsd:boolean","entity":_self.EventFilterSpecByEntity,"eventChainId":"xsd:int","scheduledTask":_self.ManagedObjectReference,"time":_self.EventFilterSpecByTime,"type":"xsd:string[]","userName":_self.EventFilterSpecByUsername}}, _self.DynamicData);
    _self.ExpiredFeatureLicense = merge({"type":"ExpiredFeatureLicense","properties":{"count":"xsd:int","expirationDate":"xsd:dateTime","feature":"xsd:string"}}, _self.NotEnoughLicenses);
    _self.ExtendedFault = merge({"type":"ExtendedFault","properties":{"data":_self.KeyValue,"faultTypeId":"xsd:string"}}, _self.VimFault);
    _self.ExtensionClientInfo = merge({"type":"ExtensionClientInfo","properties":{"company":"xsd:string","description":_self.Description,"type":"xsd:string","url":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionServerInfo = merge({"type":"ExtensionServerInfo","properties":{"adminEmail":"xsd:string[]","company":"xsd:string","description":_self.Description,"type":"xsd:string","url":"xsd:string"}}, _self.DynamicData);
    _self.FileAlreadyExists = merge({"type":"FileAlreadyExists"}, _self.FileFault);
    _self.FileBackedPortNotSupported = merge({"type":"FileBackedPortNotSupported"}, _self.DeviceNotSupported);
    _self.FileBackedVirtualDiskSpec = merge({"type":"FileBackedVirtualDiskSpec","properties":{"capacityKb":"xsd:long"}}, _self.VirtualDiskSpec);
    _self.FilesystemQuiesceFault = merge({"type":"FilesystemQuiesceFault"}, _self.SnapshotFault);
    _self.FloatOption = merge({"type":"FloatOption","properties":{"defaultValue":"xsd:float","max":"xsd:float","min":"xsd:float"}}, _self.OptionType);
    _self.FullStorageVMotionNotSupported = merge({"type":"FullStorageVMotionNotSupported"}, _self.MigrationFeatureNotSupported);
    _self.GroupAlarmAction = merge({"type":"GroupAlarmAction","properties":{"action":_self.AlarmAction}}, _self.AlarmAction);
    _self.GuestInfo = merge({"type":"GuestInfo","properties":{"disk":_self.GuestDiskInfo,"guestFamily":"xsd:string","guestFullName":"xsd:string","guestId":"xsd:string","guestState":"xsd:string","hostName":"xsd:string","ipAddress":"xsd:string","net":_self.GuestNicInfo,"screen":_self.GuestScreenInfo,"toolsStatus":_self.VirtualMachineToolsStatus,"toolsVersion":"xsd:string"}}, _self.DynamicData);
    _self.GuestOsDescriptor = merge({"type":"GuestOsDescriptor","properties":{"cpuFeatureMask":_self.HostCpuIdInfo,"family":"xsd:string","fullName":"xsd:string","id":"xsd:string","recommendedColorDepth":"xsd:int","recommendedDiskController":"xsd:string","recommendedDiskSizeMB":"xsd:int","recommendedEthernetCard":"xsd:string","recommendedMemMB":"xsd:int","recommendedSCSIController":"xsd:string","supportedDiskControllerList":"xsd:string[]","supportedEthernetCard":"xsd:string[]","supportedMaxCPUs":"xsd:int","supportedMaxMemMB":"xsd:int","supportedMinMemMB":"xsd:int","supportedNumDisks":"xsd:int","supportsSlaveDisk":"xsd:boolean","supportsWakeOnLan":"xsd:boolean"}}, _self.DynamicData);
    _self.HAErrorsAtDest = merge({"type":"HAErrorsAtDest"}, _self.MigrationFault);
    _self.HostAutoStartManagerConfig = merge({"type":"HostAutoStartManagerConfig","properties":{"defaults":_self.AutoStartDefaults,"powerInfo":_self.AutoStartPowerInfo}}, _self.DynamicData);
    _self.HostBlockAdapterTargetTransport = merge({"type":"HostBlockAdapterTargetTransport"}, _self.HostTargetTransport);
    _self.HostBlockHba = merge({"type":"HostBlockHba"}, _self.HostHostBusAdapter);
    _self.HostDiagnosticPartition = merge({"type":"HostDiagnosticPartition","properties":{"diagnosticType":"xsd:string","id":_self.HostScsiDiskPartition,"slots":"xsd:int","storageType":"xsd:string"}}, _self.DynamicData);
    _self.HostDateTimeInfo = merge({"type":"HostDateTimeInfo","properties":{"ntpConfig":_self.HostNtpConfig,"timeZone":_self.HostDateTimeSystemTimeZone}}, _self.DynamicData);
    _self.HostServiceInfo = merge({"type":"HostServiceInfo","properties":{"service":_self.HostService}}, _self.DynamicData);
    _self.HostConfigSummary = merge({"type":"HostConfigSummary","properties":{"name":"xsd:string","port":"xsd:int","product":_self.AboutInfo,"vmotionEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.HostDatastoreConnectInfo = merge({"type":"HostDatastoreConnectInfo","properties":{"summary":_self.DatastoreSummary}}, _self.DynamicData);
    _self.HostConnectInfoNetworkInfo = merge({"type":"HostConnectInfoNetworkInfo","properties":{"summary":_self.NetworkSummary}}, _self.DynamicData);
    _self.HostDatastoreExistsConnectInfo = merge({"type":"HostDatastoreExistsConnectInfo","properties":{"newDatastoreName":"xsd:string"}}, _self.HostDatastoreConnectInfo);
    _self.HostDatastoreNameConflictConnectInfo = merge({"type":"HostDatastoreNameConflictConnectInfo","properties":{"newDatastoreName":"xsd:string"}}, _self.HostDatastoreConnectInfo);
    _self.HostDateTimeConfig = merge({"type":"HostDateTimeConfig","properties":{"ntpConfig":_self.HostNtpConfig,"timeZone":"xsd:string"}}, _self.DynamicData);
    _self.HostDateTimeSystem = {"type":"HostDateTimeSystem","properties":{"dateTimeInfo":_self.HostDateTimeInfo},"methods":{"QueryAvailableTimeZones":{"params":{"_this":"ManagedObjectReference"},"returns":"HostDateTimeSystemTimeZone"},"QueryDateTime":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:dateTime"},"RefreshDateTimeSystem":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UpdateDateTime":{"params":{"_this":"ManagedObjectReference","dateTime":"xsd:dateTime"},"returns":null},"UpdateDateTimeConfig":{"params":{"_this":"ManagedObjectReference","config":"HostDateTimeConfig"},"returns":null}}};
    _self.HostDhcpService = merge({"type":"HostDhcpService","properties":{"key":"xsd:string","spec":_self.HostDhcpServiceSpec}}, _self.DynamicData);
    _self.HostDiskPartitionLayout = merge({"type":"HostDiskPartitionLayout","properties":{"partition":_self.HostDiskPartitionBlockRange,"total":_self.HostDiskDimensionsLba}}, _self.DynamicData);
    _self.HostDiskPartitionSpec = merge({"type":"HostDiskPartitionSpec","properties":{"chs":_self.HostDiskDimensionsChs,"partition":_self.HostDiskPartitionAttributes,"totalSectors":"xsd:long"}}, _self.DynamicData);
    _self.HostDiagnosticSystem = {"type":"HostDiagnosticSystem","properties":{"activePartition":_self.HostDiagnosticPartition},"methods":{"CreateDiagnosticPartition":{"params":{"_this":"ManagedObjectReference","spec":"HostDiagnosticPartitionCreateSpec"},"returns":null},"QueryAvailablePartition":{"params":{"_this":"ManagedObjectReference"},"returns":"HostDiagnosticPartition"},"QueryPartitionCreateDesc":{"params":{"_this":"ManagedObjectReference","diskUuid":"xsd:string","diagnosticType":"xsd:string"},"returns":"HostDiagnosticPartitionCreateDescription"},"QueryPartitionCreateOptions":{"params":{"_this":"ManagedObjectReference","storageType":"xsd:string","diagnosticType":"xsd:string"},"returns":"HostDiagnosticPartitionCreateOption"},"SelectActivePartition":{"params":{"_this":"ManagedObjectReference","partition":"HostScsiDiskPartition"},"returns":null}}};
    _self.HostDiskMappingInfo = merge({"type":"HostDiskMappingInfo","properties":{"exclusive":"xsd:boolean","name":"xsd:string","physicalPartition":_self.HostDiskMappingPartitionInfo}}, _self.DynamicData);
    _self.HostDiskMappingOption = merge({"type":"HostDiskMappingOption","properties":{"name":"xsd:string","physicalPartition":_self.HostDiskMappingPartitionOption}}, _self.DynamicData);
    _self.HostDiskPartitionInfo = merge({"type":"HostDiskPartitionInfo","properties":{"deviceName":"xsd:string","layout":_self.HostDiskPartitionLayout,"spec":_self.HostDiskPartitionSpec}}, _self.DynamicData);
    _self.HostFibreChannelHba = merge({"type":"HostFibreChannelHba","properties":{"nodeWorldWideName":"xsd:long","portType":_self.FibreChannelPortType,"portWorldWideName":"xsd:long","speed":"xsd:long"}}, _self.HostHostBusAdapter);
    _self.HostFibreChannelTargetTransport = merge({"type":"HostFibreChannelTargetTransport","properties":{"nodeWorldWideName":"xsd:long","portWorldWideName":"xsd:long"}}, _self.HostTargetTransport);
    _self.HostFileSystemMountInfo = merge({"type":"HostFileSystemMountInfo","properties":{"mountInfo":_self.HostMountInfo,"volume":_self.HostFileSystemVolume}}, _self.DynamicData);
    _self.HostFirewallRuleset = merge({"type":"HostFirewallRuleset","properties":{"enabled":"xsd:boolean","key":"xsd:string","label":"xsd:string","required":"xsd:boolean","rule":_self.HostFirewallRule,"service":"xsd:string"}}, _self.DynamicData);
    _self.HostNumaInfo = merge({"type":"HostNumaInfo","properties":{"numaNode":_self.HostNumaNode,"numNodes":"xsd:int","type":"xsd:string"}}, _self.DynamicData);
    _self.HostInternetScsiHba = merge({"type":"HostInternetScsiHba","properties":{"authenticationCapabilities":_self.HostInternetScsiHbaAuthenticationCapabilities,"authenticationProperties":_self.HostInternetScsiHbaAuthenticationProperties,"configuredSendTarget":_self.HostInternetScsiHbaSendTarget,"configuredStaticTarget":_self.HostInternetScsiHbaStaticTarget,"currentSpeedMb":"xsd:int","discoveryCapabilities":_self.HostInternetScsiHbaDiscoveryCapabilities,"discoveryProperties":_self.HostInternetScsiHbaDiscoveryProperties,"ipCapabilities":_self.HostInternetScsiHbaIPCapabilities,"ipProperties":_self.HostInternetScsiHbaIPProperties,"iScsiAlias":"xsd:string","iScsiName":"xsd:string","isSoftwareBased":"xsd:boolean","maxSpeedMb":"xsd:int"}}, _self.HostHostBusAdapter);
    _self.HostInternetScsiTargetTransport = merge({"type":"HostInternetScsiTargetTransport","properties":{"address":"xsd:string[]","iScsiAlias":"xsd:string","iScsiName":"xsd:string"}}, _self.HostTargetTransport);
    _self.HostInventoryFull = merge({"type":"HostInventoryFull","properties":{"capacity":"xsd:int"}}, _self.NotEnoughLicenses);
    _self.HostMultipathInfoFixedLogicalUnitPolicy = merge({"type":"HostMultipathInfoFixedLogicalUnitPolicy","properties":{"prefer":"xsd:string"}}, _self.HostMultipathInfoLogicalUnitPolicy);
    _self.HostMultipathInfoPath = merge({"type":"HostMultipathInfoPath","properties":{"adapter":"xsd:string","key":"xsd:string","lun":"xsd:string","name":"xsd:string","pathState":"xsd:string","transport":_self.HostTargetTransport}}, _self.DynamicData);
    _self.HostNatServiceSpec = merge({"type":"HostNatServiceSpec","properties":{"activeFtp":"xsd:boolean","allowAnyOui":"xsd:boolean","configPort":"xsd:boolean","ipGatewayAddress":"xsd:string","nameService":_self.HostNatServiceNameServiceSpec,"portForward":_self.HostNatServicePortForwardSpec,"udpTimeout":"xsd:int","virtualSwitch":"xsd:string"}}, _self.DynamicData);
    _self.HostNatServiceConfig = merge({"type":"HostNatServiceConfig","properties":{"changeOperation":"xsd:string","key":"xsd:string","spec":_self.HostNatServiceSpec}}, _self.DynamicData);
    _self.HostVirtualNicConfig = merge({"type":"HostVirtualNicConfig","properties":{"changeOperation":"xsd:string","device":"xsd:string","portgroup":"xsd:string","spec":_self.HostVirtualNicSpec}}, _self.DynamicData);
    _self.PhysicalNicConfig = merge({"type":"PhysicalNicConfig","properties":{"device":"xsd:string","spec":_self.PhysicalNicSpec}}, _self.DynamicData);
    _self.HostVirtualNic = merge({"type":"HostVirtualNic","properties":{"device":"xsd:string","key":"xsd:string","port":"xsd:string","portgroup":"xsd:string","spec":_self.HostVirtualNicSpec}}, _self.DynamicData);
    _self.PhysicalNic = merge({"type":"PhysicalNic","properties":{"device":"xsd:string","driver":"xsd:string","key":"xsd:string","linkSpeed":_self.PhysicalNicLinkInfo,"mac":"xsd:string","pci":"xsd:string","spec":_self.PhysicalNicSpec,"validLinkSpecification":_self.PhysicalNicLinkInfo,"wakeOnLanSupported":"xsd:boolean"}}, _self.DynamicData);
    _self.HostNicTeamingPolicy = merge({"type":"HostNicTeamingPolicy","properties":{"failureCriteria":_self.HostNicFailureCriteria,"nicOrder":_self.HostNicOrderPolicy,"notifySwitches":"xsd:boolean","policy":"xsd:string","reversePolicy":"xsd:boolean","rollingOrder":"xsd:boolean"}}, _self.DynamicData);
    _self.HostNewNetworkConnectInfo = merge({"type":"HostNewNetworkConnectInfo"}, _self.HostConnectInfoNetworkInfo);
    _self.HostPatchManagerStatus = merge({"type":"HostPatchManagerStatus","properties":{"applicable":"xsd:boolean","id":"xsd:string","installed":"xsd:boolean","installState":"xsd:string[]","integrity":"xsd:string","prerequisitePatch":_self.HostPatchManagerStatusPrerequisitePatch,"reason":"xsd:string[]","reconnectRequired":"xsd:boolean","restartRequired":"xsd:boolean","supersededPatchIds":"xsd:string[]","vmOffRequired":"xsd:boolean"}}, _self.DynamicData);
    _self.HostPosixAccountSpec = merge({"type":"HostPosixAccountSpec","properties":{"posixId":"xsd:int","shellAccess":"xsd:boolean"}}, _self.HostAccountSpec);
    _self.HostScsiTopologyTarget = merge({"type":"HostScsiTopologyTarget","properties":{"key":"xsd:string","lun":_self.HostScsiTopologyLun,"target":"xsd:int","transport":_self.HostTargetTransport}}, _self.DynamicData);
    _self.HostSnmpConfigSpec = merge({"type":"HostSnmpConfigSpec","properties":{"enabled":"xsd:boolean","port":"xsd:int","readOnlyCommunities":"xsd:string[]","trapTargets":_self.HostSnmpDestination}}, _self.DynamicData);
    _self.HostSnmpSystem = {"type":"HostSnmpSystem","properties":{"configuration":_self.HostSnmpConfigSpec,"limits":_self.HostSnmpSystemAgentLimits},"methods":{"ReconfigureSnmpAgent":{"params":{"_this":"ManagedObjectReference","spec":"HostSnmpConfigSpec"},"returns":null},"SendTestNotification":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.ScsiLun = merge({"type":"ScsiLun","properties":{"alternateName":_self.ScsiLunDurableName,"canonicalName":"xsd:string","durableName":_self.ScsiLunDurableName,"key":"xsd:string","lunType":"xsd:string","model":"xsd:string","operationalState":"xsd:string[]","queueDepth":"xsd:int","revision":"xsd:string","scsiLevel":"xsd:int","serialNumber":"xsd:string","standardInquiry":"xsd:byte[]","uuid":"xsd:string","vendor":"xsd:string"}}, _self.HostDevice);
    _self.HostVirtualSwitchAutoBridge = merge({"type":"HostVirtualSwitchAutoBridge","properties":{"excludedNicDevice":"xsd:string[]"}}, _self.HostVirtualSwitchBridge);
    _self.HostVirtualSwitchBondBridge = merge({"type":"HostVirtualSwitchBondBridge","properties":{"beacon":_self.HostVirtualSwitchBeaconConfig,"nicDevice":"xsd:string[]"}}, _self.HostVirtualSwitchBridge);
    _self.HostVMotionNetConfig = merge({"type":"HostVMotionNetConfig","properties":{"candidateVnic":_self.HostVirtualNic,"selectedVnic":"xsd:string"}}, _self.DynamicData);
    _self.HotSnapshotMoveNotSupported = merge({"type":"HotSnapshotMoveNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.IDEDiskNotSupported = merge({"type":"IDEDiskNotSupported"}, _self.DiskNotSupported);
    _self.InaccessibleDatastore = merge({"type":"InaccessibleDatastore"}, _self.InvalidDatastore);
    _self.IncompatibleDefaultDevice = merge({"type":"IncompatibleDefaultDevice","properties":{"device":"xsd:string"}}, _self.MigrationFault);
    _self.IncompatibleSetting = merge({"type":"IncompatibleSetting","properties":{"conflictingProperty":"xsd:string"}}, _self.InvalidArgument);
    _self.IncorrectHostInformation = merge({"type":"IncorrectHostInformation"}, _self.NotEnoughLicenses);
    _self.IndependentDiskVMotionNotSupported = merge({"type":"IndependentDiskVMotionNotSupported"}, _self.MigrationFeatureNotSupported);
    _self.InsufficientCpuResourcesFault = merge({"type":"InsufficientCpuResourcesFault","properties":{"requested":"xsd:long","unreserved":"xsd:long"}}, _self.InsufficientResourcesFault);
    _self.InsufficientFailoverResourcesFault = merge({"type":"InsufficientFailoverResourcesFault"}, _self.InsufficientResourcesFault);
    _self.InsufficientHostCapacityFault = merge({"type":"InsufficientHostCapacityFault","properties":{"host":_self.ManagedObjectReference}}, _self.InsufficientResourcesFault);
    _self.InsufficientMemoryResourcesFault = merge({"type":"InsufficientMemoryResourcesFault","properties":{"requested":"xsd:long","unreserved":"xsd:long"}}, _self.InsufficientResourcesFault);
    _self.InsufficientPerCpuCapacity = merge({"type":"InsufficientPerCpuCapacity"}, _self.InsufficientHostCapacityFault);
    _self.IntOption = merge({"type":"IntOption","properties":{"defaultValue":"xsd:int","max":"xsd:int","min":"xsd:int"}}, _self.OptionType);
    _self.InvalidBundle = merge({"type":"InvalidBundle"}, _self.PlatformConfigFault);
    _self.InvalidDeviceSpec = merge({"type":"InvalidDeviceSpec","properties":{"deviceIndex":"xsd:int"}}, _self.InvalidVmConfig);
    _self.InvalidDiskFormat = merge({"type":"InvalidDiskFormat"}, _self.InvalidFormat);
    _self.InvalidEditionLicense = merge({"type":"InvalidEditionLicense","properties":{"feature":"xsd:string"}}, _self.NotEnoughLicenses);
    _self.InvalidHostState = merge({"type":"InvalidHostState","properties":{"host":_self.ManagedObjectReference}}, _self.InvalidState);
    _self.InvalidPowerState = merge({"type":"InvalidPowerState","properties":{"existingState":_self.VirtualMachinePowerState,"requestedState":_self.VirtualMachinePowerState}}, _self.InvalidState);
    _self.InventoryView = merge({"type":"InventoryView","methods":{"CloseInventoryViewFolder":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"OpenInventoryViewFolder":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"}}}, _self.ManagedObjectView);
    _self.LegacyNetworkInterfaceInUse = merge({"type":"LegacyNetworkInterfaceInUse"}, _self.CannotAccessNetwork);
    _self.LicenseAvailabilityInfo = merge({"type":"LicenseAvailabilityInfo","properties":{"available":"xsd:int","feature":_self.LicenseFeatureInfo,"total":"xsd:int"}}, _self.DynamicData);
    _self.LicenseManager = {"type":"LicenseManager","properties":{"diagnostics":_self.LicenseDiagnostics,"featureInfo":_self.LicenseFeatureInfo,"licensedEdition":"xsd:string","source":_self.LicenseSource,"sourceAvailable":"xsd:boolean"},"methods":{"CheckLicenseFeature":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","featureKey":"xsd:string"},"returns":"xsd:boolean"},"ConfigureLicenseSource":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","licenseSource":"LicenseSource"},"returns":null},"DisableFeature":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","featureKey":"xsd:string"},"returns":"xsd:boolean"},"EnableFeature":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","featureKey":"xsd:string"},"returns":"xsd:boolean"},"QueryLicenseSourceAvailability":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"LicenseAvailabilityInfo"},"QueryLicenseUsage":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"LicenseUsageInfo"},"QuerySupportedFeatures":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"LicenseFeatureInfo"},"SetLicenseEdition":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem","featureKey":"xsd:string"},"returns":null}}};
    _self.LicenseRestricted = merge({"type":"LicenseRestricted"}, _self.NotEnoughLicenses);
    _self.LicenseSourceUnavailable = merge({"type":"LicenseSourceUnavailable","properties":{"licenseSource":_self.LicenseSource}}, _self.NotEnoughLicenses);
    _self.ListView = merge({"type":"ListView","methods":{"ModifyListView":{"params":{"_this":"ManagedObjectReference","addP":"ManagedObjectReference","removeP":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ResetListView":{"params":{"_this":"ManagedObjectReference","objP":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ResetListViewFromView":{"params":{"_this":"ManagedObjectReference","view":"ManagedObjectReferencetoaView"},"returns":null}}}, _self.ManagedObjectView);
    _self.LocalDatastoreInfo = merge({"type":"LocalDatastoreInfo","properties":{"path":"xsd:string"}}, _self.DatastoreInfo);
    _self.LongOption = merge({"type":"LongOption","properties":{"defaultValue":"xsd:long","max":"xsd:long","min":"xsd:long"}}, _self.OptionType);
    _self.MaintenanceModeFileMove = merge({"type":"MaintenanceModeFileMove"}, _self.MigrationFault);
    _self.MemorySizeNotRecommended = merge({"type":"MemorySizeNotRecommended","properties":{"maxMemorySizeMB":"xsd:int","memorySizeMB":"xsd:int","minMemorySizeMB":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.MemorySizeNotSupported = merge({"type":"MemorySizeNotSupported","properties":{"maxMemorySizeMB":"xsd:int","memorySizeMB":"xsd:int","minMemorySizeMB":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.MemorySnapshotOnIndependentDisk = merge({"type":"MemorySnapshotOnIndependentDisk"}, _self.SnapshotFault);
    _self.MethodAction = merge({"type":"MethodAction","properties":{"argument":_self.MethodActionArgument,"name":"xsd:string"}}, _self.Action);
    _self.MethodDescription = merge({"type":"MethodDescription","properties":{"key":"xsd:string"}}, _self.Description);
    _self.MetricAlarmExpression = merge({"type":"MetricAlarmExpression","properties":{"metric":_self.PerfMetricId,"operator":_self.MetricAlarmOperator,"red":"xsd:int","type":"xsd:string","yellow":"xsd:int"}}, _self.AlarmExpression);
    _self.ResourcePoolEventArgument = merge({"type":"ResourcePoolEventArgument","properties":{"resourcePool":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.MissingController = merge({"type":"MissingController"}, _self.InvalidDeviceSpec);
    _self.MissingObject = merge({"type":"MissingObject","properties":{"fault":_self.LocalizedMethodFault,"obj":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.MissingProperty = merge({"type":"MissingProperty","properties":{"fault":_self.LocalizedMethodFault,"path":"xsd:string"}}, _self.DynamicData);
    _self.MultipleSnapshotsNotSupported = merge({"type":"MultipleSnapshotsNotSupported"}, _self.SnapshotFault);
    _self.NasDatastoreInfo = merge({"type":"NasDatastoreInfo","properties":{"nas":_self.HostNasVolume}}, _self.DatastoreInfo);
    _self.NonPersistentDisksNotSupported = merge({"type":"NonPersistentDisksNotSupported"}, _self.DeviceNotSupported);
    _self.NotEnoughCpus = merge({"type":"NotEnoughCpus","properties":{"numCpuDest":"xsd:int","numCpuVm":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.NotEnoughLogicalCpus = merge({"type":"NotEnoughLogicalCpus","properties":{"host":_self.ManagedObjectReference}}, _self.NotEnoughCpus);
    _self.NumVirtualCpusNotSupported = merge({"type":"NumVirtualCpusNotSupported","properties":{"maxSupportedVcpusDest":"xsd:int","numCpuVm":"xsd:int"}}, _self.VirtualHardwareCompatibilityIssue);
    _self.ObjectContent = merge({"type":"ObjectContent","properties":{"missingSet":_self.MissingProperty,"obj":_self.ManagedObjectReference,"propSet":_self.DynamicProperty}}, _self.DynamicData);
    _self.ObjectSpec = merge({"type":"ObjectSpec","properties":{"obj":_self.ManagedObjectReference,"selectSet":_self.SelectionSpec,"skip":"xsd:boolean"}}, _self.DynamicData);
    _self.ObjectUpdate = merge({"type":"ObjectUpdate","properties":{"changeSet":_self.PropertyChange,"kind":_self.ObjectUpdateKind,"missingSet":_self.MissingProperty,"obj":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.OnceTaskScheduler = merge({"type":"OnceTaskScheduler","properties":{"runAt":"xsd:dateTime"}}, _self.TaskScheduler);
    _self.OrAlarmExpression = merge({"type":"OrAlarmExpression","properties":{"expression":_self.AlarmExpression}}, _self.AlarmExpression);
    _self.PatchAlreadyInstalled = merge({"type":"PatchAlreadyInstalled"}, _self.PatchNotApplicable);
    _self.PatchInstallFailed = merge({"type":"PatchInstallFailed","properties":{"rolledBack":"xsd:boolean"}}, _self.PlatformConfigFault);
    _self.PatchIntegrityError = merge({"type":"PatchIntegrityError"}, _self.PlatformConfigFault);
    _self.PatchMetadataCorrupted = merge({"type":"PatchMetadataCorrupted"}, _self.PatchMetadataInvalid);
    _self.PatchMissingDependencies = merge({"type":"PatchMissingDependencies","properties":{"prerequisiteLib":"xsd:string[]","prerequisitePatch":"xsd:string[]"}}, _self.PatchNotApplicable);
    _self.PerfCompositeMetric = merge({"type":"PerfCompositeMetric","properties":{"childEntity":_self.PerfEntityMetricBase,"entity":_self.PerfEntityMetricBase}}, _self.DynamicData);
    _self.PerfEntityMetric = merge({"type":"PerfEntityMetric","properties":{"sampleInfo":_self.PerfSampleInfo,"value":_self.PerfMetricSeries}}, _self.PerfEntityMetricBase);
    _self.PerfEntityMetricCSV = merge({"type":"PerfEntityMetricCSV","properties":{"sampleInfoCSV":"xsd:string","value":_self.PerfMetricSeriesCSV}}, _self.PerfEntityMetricBase);
    _self.PhysicalNicHintInfo = merge({"type":"PhysicalNicHintInfo","properties":{"connectedSwitchPort":_self.PhysicalNicCdpInfo,"device":"xsd:string","network":_self.PhysicalNicNameHint,"subnet":_self.PhysicalNicIpHint}}, _self.DynamicData);
    _self.PosixUserSearchResult = merge({"type":"PosixUserSearchResult","properties":{"id":"xsd:int","shellAccess":"xsd:boolean"}}, _self.UserSearchResult);
    _self.PropertyFilterSpec = merge({"type":"PropertyFilterSpec","properties":{"objectSet":_self.ObjectSpec,"propSet":_self.PropertySpec}}, _self.DynamicData);
    _self.PropertyFilterUpdate = merge({"type":"PropertyFilterUpdate","properties":{"filter":_self.ManagedObjectReference,"missingSet":_self.MissingObject,"objectSet":_self.ObjectUpdate}}, _self.DynamicData);
    _self.RawDiskNotSupported = merge({"type":"RawDiskNotSupported"}, _self.DeviceNotSupported);
    _self.RDMNotSupported = merge({"type":"RDMNotSupported"}, _self.DeviceNotSupported);
    _self.RDMPointsToInaccessibleDisk = merge({"type":"RDMPointsToInaccessibleDisk"}, _self.CannotAccessVmDisk);
    _self.RecurrentTaskScheduler = merge({"type":"RecurrentTaskScheduler","properties":{"interval":"xsd:int"}}, _self.TaskScheduler);
    _self.RemoteDeviceNotSupported = merge({"type":"RemoteDeviceNotSupported"}, _self.DeviceNotSupported);
    _self.ResourceAllocationInfo = merge({"type":"ResourceAllocationInfo","properties":{"expandableReservation":"xsd:boolean","limit":"xsd:long","overheadLimit":"xsd:long","reservation":"xsd:long","shares":_self.SharesInfo}}, _self.DynamicData);
    _self.RunScriptAction = merge({"type":"RunScriptAction","properties":{"script":"xsd:string"}}, _self.Action);
    _self.ScheduledTaskEventArgument = merge({"type":"ScheduledTaskEventArgument","properties":{"scheduledTask":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.ScheduledTaskSpec = merge({"type":"ScheduledTaskSpec","properties":{"action":_self.Action,"description":"xsd:string","enabled":"xsd:boolean","name":"xsd:string","notification":"xsd:string","scheduler":_self.TaskScheduler}}, _self.DynamicData);
    _self.SendEmailAction = merge({"type":"SendEmailAction","properties":{"body":"xsd:string","ccList":"xsd:string","subject":"xsd:string","toList":"xsd:string"}}, _self.Action);
    _self.SendSNMPAction = merge({"type":"SendSNMPAction"}, _self.Action);
    _self.ServiceContent = merge({"type":"ServiceContent","properties":{"about":_self.AboutInfo,"accountManager":_self.ManagedObjectReference,"alarmManager":_self.ManagedObjectReference,"authorizationManager":_self.ManagedObjectReference,"customFieldsManager":_self.ManagedObjectReference,"customizationSpecManager":_self.ManagedObjectReference,"diagnosticManager":_self.ManagedObjectReference,"eventManager":_self.ManagedObjectReference,"extensionManager":_self.ManagedObjectReference,"fileManager":_self.ManagedObjectReference,"licenseManager":_self.ManagedObjectReference,"perfManager":_self.ManagedObjectReference,"propertyCollector":_self.ManagedObjectReference,"rootFolder":_self.ManagedObjectReference,"scheduledTaskManager":_self.ManagedObjectReference,"searchIndex":_self.ManagedObjectReference,"sessionManager":_self.ManagedObjectReference,"setting":_self.ManagedObjectReference,"taskManager":_self.ManagedObjectReference,"userDirectory":_self.ManagedObjectReference,"viewManager":_self.ManagedObjectReference,"virtualDiskManager":_self.ManagedObjectReference,"virtualizationManager":"vim.VirtualizationManager"}}, _self.DynamicData);
    _self.ServiceInstance = {"type":"ServiceInstance","properties":{"capability":_self.Capability,"content":_self.ServiceContent,"serverClock":"xsd:dateTime"},"methods":{"CurrentTime":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:dateTime"},"QueryVMotionCompatibility":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","host":"ManagedObjectReferencetoaHostSystem","compatibility":"xsd:string"},"returns":"HostVMotionCompatibility"},"RetrieveProductComponents":{"params":{"_this":"ManagedObjectReference"},"returns":"ProductComponentInfo"},"RetrieveServiceContent":{"params":{"_this":"ManagedObjectReference"},"returns":"ServiceContent"},"ValidateMigration":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","state":"VirtualMachinePowerState","testType":"xsd:string","pool":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem"},"returns":"Event"}}};
    _self.SessionManager = {"type":"SessionManager","properties":{"currentSession":_self.UserSession,"defaultLocale":"xsd:string","message":"xsd:string","messageLocaleList":"xsd:string[]","sessionList":_self.UserSession,"supportedLocaleList":"xsd:string[]"},"methods":{"AcquireLocalTicket":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string"},"returns":"SessionManagerLocalTicket"},"ImpersonateUser":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string","locale":"xsd:string"},"returns":"UserSession"},"Login":{"params":{"_this":"ManagedObjectReference","userName":"xsd:string","password":"xsd:string","locale":"xsd:string"},"returns":"UserSession"},"LoginBySSPI":{"params":{"_this":"ManagedObjectReference","base64Token":"xsd:string","locale":"xsd:string"},"returns":"UserSession"},"Logout":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SessionIsActive":{"params":{"_this":"ManagedObjectReference","sessionID":"xsd:string","userName":"xsd:string"},"returns":"xsd:boolean"},"SetLocale":{"params":{"_this":"ManagedObjectReference","locale":"xsd:string"},"returns":null},"TerminateSession":{"params":{"_this":"ManagedObjectReference","sessionId":"xsd:string"},"returns":null},"UpdateServiceMessage":{"params":{"_this":"ManagedObjectReference","message":"xsd:string"},"returns":null}}};
    _self.SharedBusControllerNotSupported = merge({"type":"SharedBusControllerNotSupported"}, _self.DeviceNotSupported);
    _self.SnapshotCloneNotSupported = merge({"type":"SnapshotCloneNotSupported"}, _self.SnapshotCopyNotSupported);
    _self.SnapshotDisabled = merge({"type":"SnapshotDisabled"}, _self.SnapshotFault);
    _self.SnapshotIncompatibleDeviceInVm = merge({"type":"SnapshotIncompatibleDeviceInVm","properties":{"fault":_self.LocalizedMethodFault}}, _self.SnapshotFault);
    _self.StateAlarmExpression = merge({"type":"StateAlarmExpression","properties":{"operator":_self.StateAlarmOperator,"red":"xsd:string","statePath":"xsd:string","type":"xsd:string","yellow":"xsd:string"}}, _self.AlarmExpression);
    _self.SwapDatastoreNotWritableOnHost = merge({"type":"SwapDatastoreNotWritableOnHost"}, _self.DatastoreNotWritableOnHost);
    _self.TaskInfo = merge({"type":"TaskInfo","properties":{"cancelable":"xsd:boolean","cancelled":"xsd:boolean","completeTime":"xsd:dateTime","descriptionId":"xsd:string","entity":_self.ManagedObjectReference,"entityName":"xsd:string","error":_self.LocalizedMethodFault,"eventChainId":"xsd:int","key":"xsd:string","locked":_self.ManagedObjectReference,"name":"xsd:string","progress":"xsd:int","queueTime":"xsd:dateTime","reason":_self.TaskReason,"result":"xsd:anyType","startTime":"xsd:dateTime","state":_self.TaskInfoState,"task":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.TaskFilterSpec = merge({"type":"TaskFilterSpec","properties":{"alarm":_self.ManagedObjectReference,"entity":_self.TaskFilterSpecByEntity,"scheduledTask":_self.ManagedObjectReference,"state":_self.TaskInfoState,"time":_self.TaskFilterSpecByTime,"userName":_self.TaskFilterSpecByUsername}}, _self.DynamicData);
    _self.TaskHistoryCollector = merge({"type":"TaskHistoryCollector","properties":{"latestPage":_self.TaskInfo},"methods":{"ReadNextTasks":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":"TaskInfo"},"ReadPreviousTasks":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":"TaskInfo"}}}, _self.HistoryCollector);
    _self.TemplateConfigFileInfo = merge({"type":"TemplateConfigFileInfo"}, _self.VmConfigFileInfo);
    _self.UnexpectedFault = merge({"type":"UnexpectedFault","properties":{"fault":_self.LocalizedMethodFault,"faultName":"xsd:string"}}, _self.RuntimeFault);
    _self.UpdateSet = merge({"type":"UpdateSet","properties":{"filterSet":_self.PropertyFilterUpdate,"version":"xsd:string"}}, _self.DynamicData);
    _self.VirtualCdromAtapiBackingInfo = merge({"type":"VirtualCdromAtapiBackingInfo"}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualCdromIsoBackingInfo = merge({"type":"VirtualCdromIsoBackingInfo"}, _self.VirtualDeviceFileBackingInfo);
    _self.VirtualCdromPassthroughBackingInfo = merge({"type":"VirtualCdromPassthroughBackingInfo","properties":{"exclusive":"xsd:boolean"}}, _self.VirtualDeviceDeviceBackingInfo);
    _self.VirtualCdromRemoteAtapiBackingInfo = merge({"type":"VirtualCdromRemoteAtapiBackingInfo"}, _self.VirtualDeviceRemoteDeviceBackingInfo);
    _self.VirtualCdromRemotePassthroughBackingInfo = merge({"type":"VirtualCdromRemotePassthroughBackingInfo","properties":{"exclusive":"xsd:boolean"}}, _self.VirtualDeviceRemoteDeviceBackingInfo);
    _self.VirtualDevice = merge({"type":"VirtualDevice","properties":{"backing":_self.VirtualDeviceBackingInfo,"connectable":_self.VirtualDeviceConnectInfo,"controllerKey":"xsd:int","deviceInfo":_self.Description,"key":"xsd:int","unitNumber":"xsd:int"}}, _self.DynamicData);
    _self.VirtualDeviceConfigSpec = merge({"type":"VirtualDeviceConfigSpec","properties":{"device":_self.VirtualDevice,"fileOperation":_self.VirtualDeviceConfigSpecFileOperation,"operation":_self.VirtualDeviceConfigSpecOperation}}, _self.DynamicData);
    _self.VirtualDeviceConnectOption = merge({"type":"VirtualDeviceConnectOption","properties":{"allowGuestControl":_self.BoolOption,"startConnected":_self.BoolOption}}, _self.DynamicData);
    _self.VirtualDeviceDeviceBackingOption = merge({"type":"VirtualDeviceDeviceBackingOption","properties":{"autoDetectAvailable":_self.BoolOption}}, _self.VirtualDeviceBackingOption);
    _self.VirtualDeviceOption = merge({"type":"VirtualDeviceOption","properties":{"autoAssignController":_self.BoolOption,"backingOption":_self.VirtualDeviceBackingOption,"connectOption":_self.VirtualDeviceConnectOption,"controllerType":"xsd:string","defaultBackingOptionIndex":"xsd:int","deprecated":"xsd:boolean","licensingLimit":"xsd:string[]","plugAndPlay":"xsd:boolean","type":"xsd:string"}}, _self.DynamicData);
    _self.VirtualDeviceRemoteDeviceBackingOption = merge({"type":"VirtualDeviceRemoteDeviceBackingOption","properties":{"autoDetectAvailable":_self.BoolOption}}, _self.VirtualDeviceBackingOption);
    _self.VirtualDisk = merge({"type":"VirtualDisk","properties":{"capacityInKB":"xsd:long","shares":_self.SharesInfo}}, _self.VirtualDevice);
    _self.VirtualDiskOption = merge({"type":"VirtualDiskOption","properties":{"capacityInKB":_self.LongOption}}, _self.VirtualDeviceOption);
    _self.VirtualDiskPartitionedRawDiskVer2BackingInfo = merge({"type":"VirtualDiskPartitionedRawDiskVer2BackingInfo","properties":{"partition":"xsd:int[]"}}, _self.VirtualDiskRawDiskVer2BackingInfo);
    _self.VirtualEthernetCard = merge({"type":"VirtualEthernetCard","properties":{"addressType":"xsd:string","macAddress":"xsd:string","wakeOnLanEnabled":"xsd:boolean"}}, _self.VirtualDevice);
    _self.VirtualEthernetCardLegacyNetworkBackingOption = merge({"type":"VirtualEthernetCardLegacyNetworkBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualEthernetCardNetworkBackingOption = merge({"type":"VirtualEthernetCardNetworkBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualEthernetCardNotSupported = merge({"type":"VirtualEthernetCardNotSupported"}, _self.DeviceNotSupported);
    _self.VirtualFloppy = merge({"type":"VirtualFloppy"}, _self.VirtualDevice);
    _self.VirtualFloppyDeviceBackingOption = merge({"type":"VirtualFloppyDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualFloppyOption = merge({"type":"VirtualFloppyOption"}, _self.VirtualDeviceOption);
    _self.VirtualFloppyRemoteDeviceBackingOption = merge({"type":"VirtualFloppyRemoteDeviceBackingOption"}, _self.VirtualDeviceRemoteDeviceBackingOption);
    _self.VirtualHardware = merge({"type":"VirtualHardware","properties":{"device":_self.VirtualDevice,"memoryMB":"xsd:int","numCPU":"xsd:int"}}, _self.DynamicData);
    _self.VirtualHardwareOption = merge({"type":"VirtualHardwareOption","properties":{"deviceListReadonly":"xsd:boolean","hwVersion":"xsd:int","licensingLimit":"xsd:string[]","memoryMB":_self.LongOption,"numCPU":"xsd:int[]","numCpuReadonly":"xsd:boolean","numIDEControllers":_self.IntOption,"numPCIControllers":_self.IntOption,"numPS2Controllers":_self.IntOption,"numSIOControllers":_self.IntOption,"numUSBControllers":_self.IntOption,"virtualDeviceOption":_self.VirtualDeviceOption}}, _self.DynamicData);
    _self.VirtualKeyboard = merge({"type":"VirtualKeyboard"}, _self.VirtualDevice);
    _self.VirtualKeyboardOption = merge({"type":"VirtualKeyboardOption"}, _self.VirtualDeviceOption);
    _self.VirtualMachineConfigInfo = merge({"type":"VirtualMachineConfigInfo","properties":{"alternateGuestName":"xsd:string","annotation":"xsd:string","bootOptions":_self.VirtualMachineBootOptions,"changeVersion":"xsd:string","consolePreferences":_self.VirtualMachineConsolePreferences,"cpuAffinity":_self.VirtualMachineAffinityInfo,"cpuAllocation":_self.ResourceAllocationInfo,"cpuFeatureMask":_self.HostCpuIdInfo,"datastoreUrl":_self.VirtualMachineConfigInfoDatastoreUrlPair,"defaultPowerOps":_self.VirtualMachineDefaultPowerOpInfo,"extraConfig":_self.OptionValue,"files":_self.VirtualMachineFileInfo,"flags":_self.VirtualMachineFlagInfo,"guestFullName":"xsd:string","guestId":"xsd:string","hardware":_self.VirtualHardware,"locationId":"xsd:string","memoryAffinity":_self.VirtualMachineAffinityInfo,"memoryAllocation":_self.ResourceAllocationInfo,"modified":"xsd:dateTime","name":"xsd:string","networkShaper":_self.VirtualMachineNetworkShaperInfo,"npivNodeWorldWideName":"xsd:long[]","npivPortWorldWideName":"xsd:long[]","npivWorldWideNameType":"xsd:string","swapPlacement":"xsd:string","template":"xsd:boolean","tools":_self.ToolsConfigInfo,"uuid":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineFileLayout = merge({"type":"VirtualMachineFileLayout","properties":{"configFile":"xsd:string[]","disk":_self.VirtualMachineFileLayoutDiskLayout,"logFile":"xsd:string[]","snapshot":_self.VirtualMachineFileLayoutSnapshotLayout,"swapFile":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineRelocateSpec = merge({"type":"VirtualMachineRelocateSpec","properties":{"datastore":_self.ManagedObjectReference,"disk":_self.VirtualMachineRelocateSpecDiskLocator,"host":_self.ManagedObjectReference,"pool":_self.ManagedObjectReference,"transform":_self.VirtualMachineRelocateTransformation}}, _self.DynamicData);
    _self.VirtualMachineCpuIdInfoSpec = merge({"type":"VirtualMachineCpuIdInfoSpec","properties":{"info":_self.HostCpuIdInfo}}, _self.ArrayUpdateSpec);
    _self.VirtualMachineDiskDeviceInfo = merge({"type":"VirtualMachineDiskDeviceInfo","properties":{"capacity":"xsd:long","vm":_self.ManagedObjectReference}}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineVideoCard = merge({"type":"VirtualMachineVideoCard","properties":{"videoRamSizeInKB":"xsd:long"}}, _self.VirtualDevice);
    _self.VirtualMachineVMIROM = merge({"type":"VirtualMachineVMIROM"}, _self.VirtualDevice);
    _self.VirtualParallelPort = merge({"type":"VirtualParallelPort"}, _self.VirtualDevice);
    _self.VirtualParallelPortDeviceBackingOption = merge({"type":"VirtualParallelPortDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualParallelPortOption = merge({"type":"VirtualParallelPortOption"}, _self.VirtualDeviceOption);
    _self.VirtualPCNet32 = merge({"type":"VirtualPCNet32"}, _self.VirtualEthernetCard);
    _self.VirtualPointingDevice = merge({"type":"VirtualPointingDevice"}, _self.VirtualDevice);
    _self.VirtualPointingDeviceOption = merge({"type":"VirtualPointingDeviceOption"}, _self.VirtualDeviceOption);
    _self.VirtualSCSIPassthrough = merge({"type":"VirtualSCSIPassthrough"}, _self.VirtualDevice);
    _self.VirtualSCSIPassthroughDeviceBackingOption = merge({"type":"VirtualSCSIPassthroughDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualSCSIPassthroughOption = merge({"type":"VirtualSCSIPassthroughOption"}, _self.VirtualDeviceOption);
    _self.VirtualSerialPort = merge({"type":"VirtualSerialPort","properties":{"yieldOnPoll":"xsd:boolean"}}, _self.VirtualDevice);
    _self.VirtualSerialPortDeviceBackingOption = merge({"type":"VirtualSerialPortDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualSerialPortOption = merge({"type":"VirtualSerialPortOption","properties":{"yieldOnPoll":_self.BoolOption}}, _self.VirtualDeviceOption);
    _self.VirtualSoundCard = merge({"type":"VirtualSoundCard"}, _self.VirtualDevice);
    _self.VirtualSoundCardDeviceBackingOption = merge({"type":"VirtualSoundCardDeviceBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualSoundCardOption = merge({"type":"VirtualSoundCardOption"}, _self.VirtualDeviceOption);
    _self.VirtualUSB = merge({"type":"VirtualUSB","properties":{"connected":"xsd:boolean"}}, _self.VirtualDevice);
    _self.VirtualUSBOption = merge({"type":"VirtualUSBOption"}, _self.VirtualDeviceOption);
    _self.VirtualUSBUSBBackingOption = merge({"type":"VirtualUSBUSBBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualVideoCardOption = merge({"type":"VirtualVideoCardOption","properties":{"videoRamSizeInKB":_self.LongOption}}, _self.VirtualDeviceOption);
    _self.VirtualVMIROMOption = merge({"type":"VirtualVMIROMOption"}, _self.VirtualDeviceOption);
    _self.VirtualVmxnet = merge({"type":"VirtualVmxnet"}, _self.VirtualEthernetCard);
    _self.VirtualVmxnet2 = merge({"type":"VirtualVmxnet2"}, _self.VirtualVmxnet);
    _self.VmConfigFileQuery = merge({"type":"VmConfigFileQuery","properties":{"details":_self.VmConfigFileQueryFlags,"filter":_self.VmConfigFileQueryFilter}}, _self.FileQuery);
    _self.VmDiskFileQuery = merge({"type":"VmDiskFileQuery","properties":{"details":_self.VmDiskFileQueryFlags,"filter":_self.VmDiskFileQueryFilter}}, _self.FileQuery);
    _self.VmfsDatastoreBaseOption = merge({"type":"VmfsDatastoreBaseOption","properties":{"layout":_self.HostDiskPartitionLayout}}, _self.DynamicData);
    _self.VmfsDatastoreCreateSpec = merge({"type":"VmfsDatastoreCreateSpec","properties":{"extent":_self.HostScsiDiskPartition,"partition":_self.HostDiskPartitionSpec,"vmfs":_self.HostVmfsSpec}}, _self.VmfsDatastoreSpec);
    _self.VmfsDatastoreExtendSpec = merge({"type":"VmfsDatastoreExtendSpec","properties":{"extent":_self.HostScsiDiskPartition,"partition":_self.HostDiskPartitionSpec}}, _self.VmfsDatastoreSpec);
    _self.VmfsDatastoreInfo = merge({"type":"VmfsDatastoreInfo","properties":{"vmfs":_self.HostVmfsVolume}}, _self.DatastoreInfo);
    _self.VmfsDatastoreMultipleExtentOption = merge({"type":"VmfsDatastoreMultipleExtentOption","properties":{"vmfsExtent":_self.HostDiskPartitionBlockRange}}, _self.VmfsDatastoreBaseOption);
    _self.VmfsDatastoreOption = merge({"type":"VmfsDatastoreOption","properties":{"info":_self.VmfsDatastoreBaseOption,"spec":_self.VmfsDatastoreSpec}}, _self.DynamicData);
    _self.VmfsDatastoreSingleExtentOption = merge({"type":"VmfsDatastoreSingleExtentOption","properties":{"vmfsExtent":_self.HostDiskPartitionBlockRange}}, _self.VmfsDatastoreBaseOption);
    _self.VMINotSupported = merge({"type":"VMINotSupported"}, _self.DeviceNotSupported);
    _self.VMOnVirtualIntranet = merge({"type":"VMOnVirtualIntranet"}, _self.CannotAccessNetwork);
    _self.AlarmInfo = merge({"type":"AlarmInfo","properties":{"alarm":_self.ManagedObjectReference,"creationEventId":"xsd:int","entity":_self.ManagedObjectReference,"key":"xsd:string","lastModifiedTime":"xsd:dateTime","lastModifiedUser":"xsd:string"}}, _self.AlarmSpec);
    _self.ManagedEntityEventArgument = merge({"type":"ManagedEntityEventArgument","properties":{"entity":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.TypeDescription = merge({"type":"TypeDescription","properties":{"key":"xsd:string"}}, _self.Description);
    _self.ElementDescription = merge({"type":"ElementDescription","properties":{"key":"xsd:string"}}, _self.Description);
    _self.AlarmEventArgument = merge({"type":"AlarmEventArgument","properties":{"alarm":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.AuthorizationDescription = merge({"type":"AuthorizationDescription","properties":{"privilege":_self.ElementDescription,"privilegeGroup":_self.ElementDescription}}, _self.DynamicData);
    _self.AuthorizationRole = merge({"type":"AuthorizationRole","properties":{"info":_self.Description,"name":"xsd:string","privilege":"xsd:string[]","roleId":"xsd:int","system":"xsd:boolean"}}, _self.DynamicData);
    _self.ChoiceOption = merge({"type":"ChoiceOption","properties":{"choiceInfo":_self.ElementDescription,"defaultIndex":"xsd:int"}}, _self.OptionType);
    _self.ClusterAffinityRuleSpec = merge({"type":"ClusterAffinityRuleSpec","properties":{"vm":_self.ManagedObjectReference}}, _self.ClusterRuleInfo);
    _self.ClusterAntiAffinityRuleSpec = merge({"type":"ClusterAntiAffinityRuleSpec","properties":{"vm":_self.ManagedObjectReference}}, _self.ClusterRuleInfo);
    _self.ClusterDrsRecommendation = merge({"type":"ClusterDrsRecommendation","properties":{"key":"xsd:string","migrationList":_self.ClusterDrsMigration,"rating":"xsd:int","reason":"xsd:string","reasonText":"xsd:string"}}, _self.DynamicData);
    _self.ClusterComputeResourceSummary = merge({"type":"ClusterComputeResourceSummary","properties":{"currentFailoverLevel":"xsd:int","numVmotions":"xsd:int"}}, _self.ComputeResourceSummary);
    _self.ClusterDasConfigInfo = merge({"type":"ClusterDasConfigInfo","properties":{"admissionControlEnabled":"xsd:boolean","defaultVmSettings":_self.ClusterDasVmSettings,"enabled":"xsd:boolean","failoverLevel":"xsd:int","option":_self.OptionValue}}, _self.DynamicData);
    _self.ClusterDasVmConfigInfo = merge({"type":"ClusterDasVmConfigInfo","properties":{"dasSettings":_self.ClusterDasVmSettings,"key":_self.ManagedObjectReference,"powerOffOnIsolation":"xsd:boolean","restartPriority":_self.DasVmPriority}}, _self.DynamicData);
    _self.ClusterDrsConfigInfo = merge({"type":"ClusterDrsConfigInfo","properties":{"defaultVmBehavior":_self.DrsBehavior,"enabled":"xsd:boolean","option":_self.OptionValue,"vmotionRate":"xsd:int"}}, _self.DynamicData);
    _self.ClusterDpmConfigInfo = merge({"type":"ClusterDpmConfigInfo","properties":{"defaultDpmBehavior":_self.DpmBehavior,"enabled":"xsd:boolean","option":_self.OptionValue}}, _self.DynamicData);
    _self.ClusterDasVmConfigSpec = merge({"type":"ClusterDasVmConfigSpec","properties":{"info":_self.ClusterDasVmConfigInfo}}, _self.ArrayUpdateSpec);
    _self.ClusterConfigSpecEx = merge({"type":"ClusterConfigSpecEx","properties":{"dasConfig":_self.ClusterDasConfigInfo,"dasVmConfigSpec":_self.ClusterDasVmConfigSpec,"dpmConfig":_self.ClusterDpmConfigInfo,"dpmHostConfigSpec":_self.ClusterDpmHostConfigSpec,"drsConfig":_self.ClusterDrsConfigInfo,"drsVmConfigSpec":_self.ClusterDrsVmConfigSpec,"rulesSpec":_self.ClusterRuleSpec}}, _self.ComputeResourceConfigSpec);
    _self.FolderEventArgument = merge({"type":"FolderEventArgument","properties":{"folder":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.ComputeResourceEventArgument = merge({"type":"ComputeResourceEventArgument","properties":{"computeResource":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.VirtualMachineDatastoreInfo = merge({"type":"VirtualMachineDatastoreInfo","properties":{"capability":_self.DatastoreCapability,"datastore":_self.DatastoreSummary,"maxFileSize":"xsd:long","mode":"xsd:string"}}, _self.VirtualMachineTargetInfo);
    _self.VirtualMachineIdeDiskDeviceInfo = merge({"type":"VirtualMachineIdeDiskDeviceInfo","properties":{"partitionTable":_self.VirtualMachineIdeDiskDevicePartitionInfo}}, _self.VirtualMachineDiskDeviceInfo);
    _self.CpuCompatibilityUnknown = merge({"type":"CpuCompatibilityUnknown"}, _self.CpuIncompatible);
    _self.CustomFieldDef = merge({"type":"CustomFieldDef","properties":{"fieldDefPrivileges":_self.PrivilegePolicyDef,"fieldInstancePrivileges":_self.PrivilegePolicyDef,"key":"xsd:int","managedObjectType":"xsd:string","name":"xsd:string","type":"xsd:string"}}, _self.DynamicData);
    _self.CustomFieldsManager = {"type":"CustomFieldsManager","properties":{"field":_self.CustomFieldDef},"methods":{"AddCustomFieldDef":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","moType":"xsd:string","fieldDefPolicy":"PrivilegePolicyDef","fieldPolicy":"PrivilegePolicyDef"},"returns":"CustomFieldDef"},"RemoveCustomFieldDef":{"params":{"_this":"ManagedObjectReference","key":"xsd:int"},"returns":null},"RenameCustomFieldDef":{"params":{"_this":"ManagedObjectReference","key":"xsd:int","name":"xsd:string"},"returns":null},"SetField":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","key":"xsd:int","value":"xsd:string"},"returns":null}}};
    _self.CustomFieldStringValue = merge({"type":"CustomFieldStringValue","properties":{"value":"xsd:string"}}, _self.CustomFieldValue);
    _self.CustomizationIPSettings = merge({"type":"CustomizationIPSettings","properties":{"dnsDomain":"xsd:string","dnsServerList":"xsd:string[]","gateway":"xsd:string[]","ip":_self.CustomizationIpGenerator,"netBIOS":_self.CustomizationNetBIOSMode,"primaryWINS":"xsd:string","secondaryWINS":"xsd:string","subnetMask":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationCustomIpGenerator = merge({"type":"CustomizationCustomIpGenerator","properties":{"argument":"xsd:string"}}, _self.CustomizationIpGenerator);
    _self.CustomizationCustomName = merge({"type":"CustomizationCustomName","properties":{"argument":"xsd:string"}}, _self.CustomizationName);
    _self.CustomizationDhcpIpGenerator = merge({"type":"CustomizationDhcpIpGenerator"}, _self.CustomizationIpGenerator);
    _self.CustomizationFixedIp = merge({"type":"CustomizationFixedIp","properties":{"ipAddress":"xsd:string"}}, _self.CustomizationIpGenerator);
    _self.CustomizationFixedName = merge({"type":"CustomizationFixedName","properties":{"name":"xsd:string"}}, _self.CustomizationName);
    _self.CustomizationGuiUnattended = merge({"type":"CustomizationGuiUnattended","properties":{"autoLogon":"xsd:boolean","autoLogonCount":"xsd:int","password":_self.CustomizationPassword,"timeZone":"xsd:int"}}, _self.DynamicData);
    _self.CustomizationLinuxOptions = merge({"type":"CustomizationLinuxOptions"}, _self.CustomizationOptions);
    _self.CustomizationLinuxPrep = merge({"type":"CustomizationLinuxPrep","properties":{"domain":"xsd:string","hostName":_self.CustomizationName}}, _self.CustomizationIdentitySettings);
    _self.CustomizationSysprep = merge({"type":"CustomizationSysprep","properties":{"guiRunOnce":_self.CustomizationGuiRunOnce,"guiUnattended":_self.CustomizationGuiUnattended,"identification":_self.CustomizationIdentification,"licenseFilePrintData":_self.CustomizationLicenseFilePrintData,"userData":_self.CustomizationUserData}}, _self.CustomizationIdentitySettings);
    _self.HostEventArgument = merge({"type":"HostEventArgument","properties":{"host":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.DatacenterEventArgument = merge({"type":"DatacenterEventArgument","properties":{"datacenter":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.DatacenterMismatch = merge({"type":"DatacenterMismatch","properties":{"expectedDatacenter":_self.ManagedObjectReference,"invalidArgument":_self.DatacenterMismatchArgument}}, _self.MigrationFault);
    _self.DatastoreHostMount = merge({"type":"DatastoreHostMount","properties":{"key":_self.ManagedObjectReference,"mountInfo":_self.HostMountInfo}}, _self.DynamicData);
    _self.DatastoreEventArgument = merge({"type":"DatastoreEventArgument","properties":{"datastore":_self.ManagedObjectReference}}, _self.EntityEventArgument);
    _self.DatastoreOption = merge({"type":"DatastoreOption","properties":{"unsupportedVolumes":_self.VirtualMachineDatastoreVolumeOption}}, _self.DynamicData);
    _self.DeviceBackingNotSupported = merge({"type":"DeviceBackingNotSupported","properties":{"backing":"xsd:string"}}, _self.DeviceNotSupported);
    _self.DeviceControllerNotSupported = merge({"type":"DeviceControllerNotSupported","properties":{"controller":"xsd:string"}}, _self.DeviceNotSupported);
    _self.DeviceNotFound = merge({"type":"DeviceNotFound"}, _self.InvalidDeviceSpec);
    _self.DisallowedDiskModeChange = merge({"type":"DisallowedDiskModeChange"}, _self.InvalidDeviceSpec);
    _self.Event = merge({"type":"Event","properties":{"chainId":"xsd:int","computeResource":_self.ComputeResourceEventArgument,"createdTime":"xsd:dateTime","datacenter":_self.DatacenterEventArgument,"fullFormattedMessage":"xsd:string","host":_self.HostEventArgument,"key":"xsd:int","userName":"xsd:string","vm":_self.VmEventArgument}}, _self.DynamicData);
    _self.EventDescription = merge({"type":"EventDescription","properties":{"category":_self.ElementDescription,"eventInfo":_self.EventDescriptionEventDetail}}, _self.DynamicData);
    _self.EventHistoryCollector = merge({"type":"EventHistoryCollector","properties":{"latestPage":_self.Event},"methods":{"ReadNextEvents":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":"Event"},"ReadPreviousEvents":{"params":{"_this":"ManagedObjectReference","maxCount":"xsd:int"},"returns":"Event"}}}, _self.HistoryCollector);
    _self.EventManager = {"type":"EventManager","properties":{"description":_self.EventDescription,"latestEvent":_self.Event,"maxCollector":"xsd:int"},"methods":{"CreateCollectorForEvents":{"params":{"_this":"ManagedObjectReference","filter":"EventFilterSpec"},"returns":"ManagedObjectReference"},"LogUserEvent":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","msg":"xsd:string"},"returns":null},"PostEvent":{"params":{"_this":"ManagedObjectReference","eventToPost":"Event","taskInfo":"TaskInfo"},"returns":null},"QueryEvents":{"params":{"_this":"ManagedObjectReference","filter":"EventFilterSpec"},"returns":"Event"}}};
    _self.ExpiredAddonLicense = merge({"type":"ExpiredAddonLicense"}, _self.ExpiredFeatureLicense);
    _self.ExpiredEditionLicense = merge({"type":"ExpiredEditionLicense"}, _self.ExpiredFeatureLicense);
    _self.ExtensibleManagedObject = {"type":"ExtensibleManagedObject","properties":{"availableField":_self.CustomFieldDef,"value":_self.CustomFieldValue},"methods":{"setCustomValue":{"params":{"_this":"ManagedObjectReference","key":"xsd:string","value":"xsd:string"},"returns":null}}};
    _self.Extension = merge({"type":"Extension","properties":{"client":_self.ExtensionClientInfo,"description":_self.Description,"eventList":_self.ExtensionEventTypeInfo,"faultList":_self.ExtensionFaultTypeInfo,"key":"xsd:string","lastHeartbeatTime":"xsd:dateTime","privilegeList":_self.ExtensionPrivilegeInfo,"resourceList":_self.ExtensionResourceInfo,"server":_self.ExtensionServerInfo,"subjectName":"xsd:string","taskList":_self.ExtensionTaskTypeInfo,"version":"xsd:string"}}, _self.DynamicData);
    _self.ExtensionManager = {"type":"ExtensionManager","properties":{"extensionList":_self.Extension},"methods":{"FindExtension":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string"},"returns":"Extension"},"GetPublicKey":{"params":{"_this":"ManagedObjectReference"},"returns":"xsd:string"},"RegisterExtension":{"params":{"_this":"ManagedObjectReference","extension":"Extension"},"returns":null},"SetPublicKey":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string","publicKey":"xsd:string"},"returns":null},"UnregisterExtension":{"params":{"_this":"ManagedObjectReference","extensionKey":"xsd:string"},"returns":null},"UpdateExtension":{"params":{"_this":"ManagedObjectReference","extension":"Extension"},"returns":null}}};
    _self.GeneralEvent = merge({"type":"GeneralEvent","properties":{"message":"xsd:string"}}, _self.Event);
    _self.GeneralHostErrorEvent = merge({"type":"GeneralHostErrorEvent"}, _self.GeneralEvent);
    _self.GeneralHostInfoEvent = merge({"type":"GeneralHostInfoEvent"}, _self.GeneralEvent);
    _self.GeneralHostWarningEvent = merge({"type":"GeneralHostWarningEvent"}, _self.GeneralEvent);
    _self.GeneralUserEvent = merge({"type":"GeneralUserEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.GeneralEvent);
    _self.GeneralVmErrorEvent = merge({"type":"GeneralVmErrorEvent"}, _self.GeneralEvent);
    _self.GeneralVmInfoEvent = merge({"type":"GeneralVmInfoEvent"}, _self.GeneralEvent);
    _self.GeneralVmWarningEvent = merge({"type":"GeneralVmWarningEvent"}, _self.GeneralEvent);
    _self.HostAutoStartManager = {"type":"HostAutoStartManager","properties":{"config":_self.HostAutoStartManagerConfig},"methods":{"AutoStartPowerOff":{"params":{"_this":"ManagedObjectReference"},"returns":null},"AutoStartPowerOn":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ReconfigureAutostart":{"params":{"_this":"ManagedObjectReference","spec":"HostAutoStartManagerConfig"},"returns":null}}};
    _self.HostFileSystemVolumeInfo = merge({"type":"HostFileSystemVolumeInfo","properties":{"mountInfo":_self.HostFileSystemMountInfo,"volumeTypeList":"xsd:string[]"}}, _self.DynamicData);
    _self.HostFirewallInfo = merge({"type":"HostFirewallInfo","properties":{"defaultPolicy":_self.HostFirewallDefaultPolicy,"ruleset":_self.HostFirewallRuleset}}, _self.DynamicData);
    _self.OptionDef = merge({"type":"OptionDef","properties":{"optionType":_self.OptionType}}, _self.ElementDescription);
    _self.HostVMotionInfo = merge({"type":"HostVMotionInfo","properties":{"ipConfig":_self.HostIpConfig,"netConfig":_self.HostVMotionNetConfig}}, _self.DynamicData);
    _self.HostCpuSchedulerSystem = merge({"type":"HostCpuSchedulerSystem","properties":{"hyperthreadInfo":_self.HostHyperThreadScheduleInfo},"methods":{"DisableHyperThreading":{"params":{"_this":"ManagedObjectReference"},"returns":null},"EnableHyperThreading":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostDiagnosticPartitionCreateSpec = merge({"type":"HostDiagnosticPartitionCreateSpec","properties":{"active":"xsd:boolean","diagnosticType":"xsd:string","id":_self.HostScsiDiskPartition,"partition":_self.HostDiskPartitionSpec,"storageType":"xsd:string"}}, _self.DynamicData);
    _self.HostScsiDisk = merge({"type":"HostScsiDisk","properties":{"capacity":_self.HostDiskDimensionsLba,"devicePath":"xsd:string"}}, _self.ScsiLun);
    _self.HostEvent = merge({"type":"HostEvent"}, _self.Event);
    _self.HostFirewallSystem = merge({"type":"HostFirewallSystem","properties":{"firewallInfo":_self.HostFirewallInfo},"methods":{"DisableRuleset":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"EnableRuleset":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"RefreshFirewall":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UpdateDefaultPolicy":{"params":{"_this":"ManagedObjectReference","defaultPolicy":"HostFirewallDefaultPolicy"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostGetShortNameFailedEvent = merge({"type":"HostGetShortNameFailedEvent"}, _self.HostEvent);
    _self.HostHardwareElementInfo = merge({"type":"HostHardwareElementInfo","properties":{"name":"xsd:string","status":_self.ElementDescription}}, _self.DynamicData);
    _self.HostStorageElementInfo = merge({"type":"HostStorageElementInfo","properties":{"operationalInfo":_self.HostStorageOperationalInfo}}, _self.HostHardwareElementInfo);
    _self.HostSystemIdentificationInfo = merge({"type":"HostSystemIdentificationInfo","properties":{"identifierType":_self.ElementDescription,"identifierValue":"xsd:string"}}, _self.DynamicData);
    _self.HostIpChangedEvent = merge({"type":"HostIpChangedEvent","properties":{"newIP":"xsd:string","oldIP":"xsd:string"}}, _self.HostEvent);
    _self.HostIpInconsistentEvent = merge({"type":"HostIpInconsistentEvent","properties":{"ipAddress":"xsd:string","ipAddress2":"xsd:string"}}, _self.HostEvent);
    _self.HostIpToShortNameFailedEvent = merge({"type":"HostIpToShortNameFailedEvent"}, _self.HostEvent);
    _self.HostMemorySystem = merge({"type":"HostMemorySystem","properties":{"consoleReservationInfo":_self.ServiceConsoleReservationInfo,"virtualMachineReservationInfo":_self.VirtualMachineMemoryReservationInfo},"methods":{"ReconfigureServiceConsoleReservation":{"params":{"_this":"ManagedObjectReference","cfgBytes":"xsd:long"},"returns":null},"ReconfigureVirtualMachineReservation":{"params":{"_this":"ManagedObjectReference","spec":"VirtualMachineMemoryReservationSpec"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostMultipathInfoLogicalUnit = merge({"type":"HostMultipathInfoLogicalUnit","properties":{"id":"xsd:string","key":"xsd:string","lun":"xsd:string","path":_self.HostMultipathInfoPath,"policy":_self.HostMultipathInfoLogicalUnitPolicy}}, _self.DynamicData);
    _self.HostNatService = merge({"type":"HostNatService","properties":{"key":"xsd:string","spec":_self.HostNatServiceSpec}}, _self.DynamicData);
    _self.HostNetworkPolicy = merge({"type":"HostNetworkPolicy","properties":{"nicTeaming":_self.HostNicTeamingPolicy,"offloadPolicy":_self.HostNetOffloadCapabilities,"security":_self.HostNetworkSecurityPolicy,"shapingPolicy":_self.HostNetworkTrafficShapingPolicy}}, _self.DynamicData);
    _self.HostNumericSensorInfo = merge({"type":"HostNumericSensorInfo","properties":{"baseUnits":"xsd:string","currentReading":"xsd:long","healthState":_self.ElementDescription,"name":"xsd:string","rateUnits":"xsd:string","sensorType":"xsd:string","unitModifier":"xsd:int"}}, _self.DynamicData);
    _self.HostPortGroupSpec = merge({"type":"HostPortGroupSpec","properties":{"name":"xsd:string","policy":_self.HostNetworkPolicy,"vlanId":"xsd:int","vswitchName":"xsd:string"}}, _self.DynamicData);
    _self.HostReconnectionFailedEvent = merge({"type":"HostReconnectionFailedEvent"}, _self.HostEvent);
    _self.HostRemovedEvent = merge({"type":"HostRemovedEvent"}, _self.HostEvent);
    _self.HostScsiTopologyInterface = merge({"type":"HostScsiTopologyInterface","properties":{"adapter":"xsd:string","key":"xsd:string","target":_self.HostScsiTopologyTarget}}, _self.DynamicData);
    _self.HostServiceSystem = merge({"type":"HostServiceSystem","properties":{"serviceInfo":_self.HostServiceInfo},"methods":{"RefreshServices":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RestartService":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"StartService":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"StopService":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"UninstallService":{"params":{"_this":"ManagedObjectReference","id":"xsd:string"},"returns":null},"UpdateServicePolicy":{"params":{"_this":"ManagedObjectReference","id":"xsd:string","policy":"xsd:string"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostShortNameToIpFailedEvent = merge({"type":"HostShortNameToIpFailedEvent","properties":{"shortName":"xsd:string"}}, _self.HostEvent);
    _self.HostShutdownEvent = merge({"type":"HostShutdownEvent","properties":{"reason":"xsd:string"}}, _self.HostEvent);
    _self.ResourceConfigSpec = merge({"type":"ResourceConfigSpec","properties":{"changeVersion":"xsd:string","cpuAllocation":_self.ResourceAllocationInfo,"entity":_self.ManagedObjectReference,"lastModified":"xsd:dateTime","memoryAllocation":_self.ResourceAllocationInfo}}, _self.DynamicData);
    _self.HostUpgradeFailedEvent = merge({"type":"HostUpgradeFailedEvent"}, _self.HostEvent);
    _self.HostVirtualSwitchSpec = merge({"type":"HostVirtualSwitchSpec","properties":{"bridge":_self.HostVirtualSwitchBridge,"mtu":"xsd:int","numPorts":"xsd:int","policy":_self.HostNetworkPolicy}}, _self.DynamicData);
    _self.HostVMotionSystem = merge({"type":"HostVMotionSystem","properties":{"ipConfig":_self.HostIpConfig,"netConfig":_self.HostVMotionNetConfig},"methods":{"DeselectVnic":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SelectVnic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":null},"UpdateIpConfig":{"params":{"_this":"ManagedObjectReference","ipConfig":"HostIpConfig"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostWwnChangedEvent = merge({"type":"HostWwnChangedEvent","properties":{"newNodeWwns":"xsd:long[]","newPortWwns":"xsd:long[]","oldNodeWwns":"xsd:long[]","oldPortWwns":"xsd:long[]"}}, _self.HostEvent);
    _self.HostWwnConflictEvent = merge({"type":"HostWwnConflictEvent","properties":{"conflictedHosts":_self.HostEventArgument,"conflictedVms":_self.VmEventArgument,"wwn":"xsd:long"}}, _self.HostEvent);
    _self.HourlyTaskScheduler = merge({"type":"HourlyTaskScheduler","properties":{"minute":"xsd:int"}}, _self.RecurrentTaskScheduler);
    _self.InvalidController = merge({"type":"InvalidController","properties":{"controllerKey":"xsd:int"}}, _self.InvalidDeviceSpec);
    _self.InvalidDeviceBacking = merge({"type":"InvalidDeviceBacking"}, _self.InvalidDeviceSpec);
    _self.InvalidDeviceOperation = merge({"type":"InvalidDeviceOperation","properties":{"badFileOp":_self.VirtualDeviceConfigSpecFileOperation,"badOp":_self.VirtualDeviceConfigSpecOperation}}, _self.InvalidDeviceSpec);
    _self.LicenseEvent = merge({"type":"LicenseEvent"}, _self.Event);
    _self.LicenseExpiredEvent = merge({"type":"LicenseExpiredEvent","properties":{"feature":_self.LicenseFeatureInfo}}, _self.Event);
    _self.LicenseRestrictedEvent = merge({"type":"LicenseRestrictedEvent"}, _self.LicenseEvent);
    _self.LicenseServerAvailableEvent = merge({"type":"LicenseServerAvailableEvent","properties":{"licenseServer":"xsd:string"}}, _self.LicenseEvent);
    _self.LicenseServerUnavailableEvent = merge({"type":"LicenseServerUnavailableEvent","properties":{"licenseServer":"xsd:string"}}, _self.LicenseEvent);
    _self.LocalDatastoreCreatedEvent = merge({"type":"LocalDatastoreCreatedEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.LockerMisconfiguredEvent = merge({"type":"LockerMisconfiguredEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.Event);
    _self.LockerReconfiguredEvent = merge({"type":"LockerReconfiguredEvent","properties":{"newDatastore":_self.DatastoreEventArgument,"oldDatastore":_self.DatastoreEventArgument}}, _self.Event);
    _self.ManagedEntity = merge({"type":"ManagedEntity","properties":{"configIssue":_self.Event,"configStatus":_self.ManagedEntityStatus,"customValue":_self.CustomFieldValue,"declaredAlarmState":_self.AlarmState,"disabledMethod":"xsd:string[]","effectiveRole":"xsd:int[]","name":"xsd:string","overallStatus":_self.ManagedEntityStatus,"parent":_self.ManagedObjectReference,"permission":_self.Permission,"recentTask":_self.ManagedObjectReference,"triggeredAlarmState":_self.AlarmState},"methods":{"Destroy_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"Reload":{"params":{"_this":"ManagedObjectReference"},"returns":null},"Rename_Task":{"params":{"_this":"ManagedObjectReference","newName":"xsd:string"},"returns":"ManagedObjectReference"}}}, _self.ExtensibleManagedObject);
    _self.NASDatastoreCreatedEvent = merge({"type":"NASDatastoreCreatedEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.Network = merge({"type":"Network","properties":{"host":_self.ManagedObjectReference,"name":"xsd:string","summary":_self.NetworkSummary,"vm":_self.ManagedObjectReference},"methods":{"DestroyNetwork":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.NoDatastoresConfiguredEvent = merge({"type":"NoDatastoresConfiguredEvent"}, _self.HostEvent);
    _self.NoLicenseEvent = merge({"type":"NoLicenseEvent","properties":{"feature":_self.LicenseFeatureInfo}}, _self.LicenseEvent);
    _self.OptionManager = {"type":"OptionManager","properties":{"setting":_self.OptionValue,"supportedOption":_self.OptionDef},"methods":{"QueryOptions":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"OptionValue"},"UpdateOptions":{"params":{"_this":"ManagedObjectReference","changedValue":"OptionValue"},"returns":null}}};
    _self.PerfCounterInfo = merge({"type":"PerfCounterInfo","properties":{"associatedCounterId":"xsd:int[]","groupInfo":_self.ElementDescription,"key":"xsd:int","level":"xsd:int","nameInfo":_self.ElementDescription,"rollupType":_self.PerfSummaryType,"statsType":_self.PerfStatsType,"unitInfo":_self.ElementDescription}}, _self.DynamicData);
    _self.PerformanceDescription = merge({"type":"PerformanceDescription","properties":{"counterType":_self.ElementDescription,"statsType":_self.ElementDescription}}, _self.DynamicData);
    _self.PerformanceManager = {"type":"PerformanceManager","properties":{"description":_self.PerformanceDescription,"historicalInterval":_self.PerfInterval,"perfCounter":_self.PerfCounterInfo},"methods":{"CreatePerfInterval":{"params":{"_this":"ManagedObjectReference","intervalId":"PerfInterval"},"returns":null},"QueryAvailablePerfMetric":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReference","beginTime":"xsd:dateTime","endTime":"xsd:dateTime","intervalId":"xsd:int"},"returns":"PerfMetricId"},"QueryPerf":{"params":{"_this":"ManagedObjectReference","querySpec":"PerfQuerySpec"},"returns":"PerfEntityMetricBase"},"QueryPerfComposite":{"params":{"_this":"ManagedObjectReference","querySpec":"PerfQuerySpec"},"returns":"PerfCompositeMetric"},"QueryPerfCounter":{"params":{"_this":"ManagedObjectReference","counterId":"xsd:int"},"returns":"PerfCounterInfo"},"QueryPerfCounterByLevel":{"params":{"_this":"ManagedObjectReference","level":"xsd:int"},"returns":"PerfCounterInfo"},"QueryPerfProviderSummary":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReference"},"returns":"PerfProviderSummary"},"RemovePerfInterval":{"params":{"_this":"ManagedObjectReference","samplePeriod":"xsd:int"},"returns":null},"UpdatePerfInterval":{"params":{"_this":"ManagedObjectReference","interval":"PerfInterval"},"returns":null}}};
    _self.PhysCompatRDMNotSupported = merge({"type":"PhysCompatRDMNotSupported"}, _self.RDMNotSupported);
    _self.PropertyFilter = {"type":"PropertyFilter","properties":{"partialUpdates":"xsd:boolean","spec":_self.PropertyFilterSpec},"methods":{"DestroyPropertyFilter":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.ResourcePoolSummary = merge({"type":"ResourcePoolSummary","properties":{"config":_self.ResourceConfigSpec,"name":"xsd:string","runtime":_self.ResourcePoolRuntimeInfo}}, _self.DynamicData);
    _self.ResourcePoolEvent = merge({"type":"ResourcePoolEvent","properties":{"resourcePool":_self.ResourcePoolEventArgument}}, _self.Event);
    _self.ResourcePoolMovedEvent = merge({"type":"ResourcePoolMovedEvent","properties":{"newParent":_self.ResourcePoolEventArgument,"oldParent":_self.ResourcePoolEventArgument}}, _self.ResourcePoolEvent);
    _self.ResourcePoolReconfiguredEvent = merge({"type":"ResourcePoolReconfiguredEvent"}, _self.ResourcePoolEvent);
    _self.ResourceViolatedEvent = merge({"type":"ResourceViolatedEvent"}, _self.ResourcePoolEvent);
    _self.ScheduledTaskInfo = merge({"type":"ScheduledTaskInfo","properties":{"activeTask":_self.ManagedObjectReference,"entity":_self.ManagedObjectReference,"error":_self.LocalizedMethodFault,"lastModifiedTime":"xsd:dateTime","lastModifiedUser":"xsd:string","nextRunTime":"xsd:dateTime","prevRunTime":"xsd:dateTime","progress":"xsd:int","result":"xsd:anyType","scheduledTask":_self.ManagedObjectReference,"state":_self.TaskInfoState}}, _self.ScheduledTaskSpec);
    _self.ScheduledTaskDetail = merge({"type":"ScheduledTaskDetail","properties":{"frequency":"xsd:string"}}, _self.TypeDescription);
    _self.ScheduledTaskEvent = merge({"type":"ScheduledTaskEvent","properties":{"entity":_self.ManagedEntityEventArgument,"scheduledTask":_self.ScheduledTaskEventArgument}}, _self.Event);
    _self.ScheduledTaskFailedEvent = merge({"type":"ScheduledTaskFailedEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskReconfiguredEvent = merge({"type":"ScheduledTaskReconfiguredEvent"}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskRemovedEvent = merge({"type":"ScheduledTaskRemovedEvent"}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskStartedEvent = merge({"type":"ScheduledTaskStartedEvent"}, _self.ScheduledTaskEvent);
    _self.ServerLicenseExpiredEvent = merge({"type":"ServerLicenseExpiredEvent","properties":{"product":"xsd:string"}}, _self.LicenseEvent);
    _self.SessionEvent = merge({"type":"SessionEvent"}, _self.Event);
    _self.SessionTerminatedEvent = merge({"type":"SessionTerminatedEvent","properties":{"sessionId":"xsd:string","terminatedUsername":"xsd:string"}}, _self.SessionEvent);
    _self.SnapshotRevertIssue = merge({"type":"SnapshotRevertIssue","properties":{"errors":"xsd:boolean","event":_self.Event,"snapshotName":"xsd:string"}}, _self.MigrationFault);
    _self.Task = merge({"type":"Task","properties":{"info":_self.TaskInfo},"methods":{"CancelTask":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SetTaskState":{"params":{"_this":"ManagedObjectReference","state":"TaskInfoState","result":"xsd:anyType","fault":"MethodFault"},"returns":null},"UpdateProgress":{"params":{"_this":"ManagedObjectReference","percentDone":"xsd:int"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.TaskDescription = merge({"type":"TaskDescription","properties":{"methodInfo":_self.ElementDescription,"reason":_self.TypeDescription,"state":_self.ElementDescription}}, _self.DynamicData);
    _self.TaskEvent = merge({"type":"TaskEvent","properties":{"info":_self.TaskInfo}}, _self.Event);
    _self.TaskManager = {"type":"TaskManager","properties":{"description":_self.TaskDescription,"maxCollector":"xsd:int","recentTask":_self.ManagedObjectReference},"methods":{"CreateCollectorForTasks":{"params":{"_this":"ManagedObjectReference","filter":"TaskFilterSpec"},"returns":"ManagedObjectReference"},"CreateTask":{"params":{"_this":"ManagedObjectReference","obj":"ManagedObjectReference","taskTypeId":"xsd:string","initiatedBy":"xsd:string","cancelable":"xsd:boolean"},"returns":"TaskInfo"}}};
    _self.TaskTimeoutEvent = merge({"type":"TaskTimeoutEvent"}, _self.TaskEvent);
    _self.TemplateConfigFileQuery = merge({"type":"TemplateConfigFileQuery"}, _self.VmConfigFileQuery);
    _self.TemplateUpgradeEvent = merge({"type":"TemplateUpgradeEvent","properties":{"legacyTemplate":"xsd:string"}}, _self.Event);
    _self.TemplateUpgradeFailedEvent = merge({"type":"TemplateUpgradeFailedEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.TemplateUpgradeEvent);
    _self.TimedOutHostOperationEvent = merge({"type":"TimedOutHostOperationEvent"}, _self.HostEvent);
    _self.UnlicensedVirtualMachinesEvent = merge({"type":"UnlicensedVirtualMachinesEvent","properties":{"available":"xsd:int","unlicensed":"xsd:int"}}, _self.LicenseEvent);
    _self.UnlicensedVirtualMachinesFoundEvent = merge({"type":"UnlicensedVirtualMachinesFoundEvent","properties":{"available":"xsd:int"}}, _self.LicenseEvent);
    _self.UpdatedAgentBeingRestartedEvent = merge({"type":"UpdatedAgentBeingRestartedEvent"}, _self.HostEvent);
    _self.UpgradeEvent = merge({"type":"UpgradeEvent","properties":{"message":"xsd:string"}}, _self.Event);
    _self.UserAssignedToGroup = merge({"type":"UserAssignedToGroup","properties":{"group":"xsd:string","userLogin":"xsd:string"}}, _self.HostEvent);
    _self.UserLoginSessionEvent = merge({"type":"UserLoginSessionEvent","properties":{"ipAddress":"xsd:string","locale":"xsd:string","sessionId":"xsd:string"}}, _self.SessionEvent);
    _self.UserLogoutSessionEvent = merge({"type":"UserLogoutSessionEvent"}, _self.SessionEvent);
    _self.UserPasswordChanged = merge({"type":"UserPasswordChanged","properties":{"userLogin":"xsd:string"}}, _self.HostEvent);
    _self.UserUnassignedFromGroup = merge({"type":"UserUnassignedFromGroup","properties":{"group":"xsd:string","userLogin":"xsd:string"}}, _self.HostEvent);
    _self.UserUpgradeEvent = merge({"type":"UserUpgradeEvent"}, _self.UpgradeEvent);
    _self.VcAgentUpgradedEvent = merge({"type":"VcAgentUpgradedEvent"}, _self.HostEvent);
    _self.VcAgentUpgradeFailedEvent = merge({"type":"VcAgentUpgradeFailedEvent"}, _self.HostEvent);
    _self.VimAccountPasswordChangedEvent = merge({"type":"VimAccountPasswordChangedEvent"}, _self.HostEvent);
    _self.VirtualCdrom = merge({"type":"VirtualCdrom"}, _self.VirtualDevice);
    _self.VirtualCdromAtapiBackingOption = merge({"type":"VirtualCdromAtapiBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualCdromOption = merge({"type":"VirtualCdromOption"}, _self.VirtualDeviceOption);
    _self.VirtualCdromPassthroughBackingOption = merge({"type":"VirtualCdromPassthroughBackingOption","properties":{"exclusive":_self.BoolOption}}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualCdromRemoteAtapiBackingOption = merge({"type":"VirtualCdromRemoteAtapiBackingOption"}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualCdromRemotePassthroughBackingOption = merge({"type":"VirtualCdromRemotePassthroughBackingOption","properties":{"exclusive":_self.BoolOption}}, _self.VirtualDeviceRemoteDeviceBackingOption);
    _self.VirtualController = merge({"type":"VirtualController","properties":{"busNumber":"xsd:int","device":"xsd:int[]"}}, _self.VirtualDevice);
    _self.VirtualControllerOption = merge({"type":"VirtualControllerOption","properties":{"devices":_self.IntOption,"supportedDevice":"xsd:string[]"}}, _self.VirtualDeviceOption);
    _self.VirtualDeviceFileBackingOption = merge({"type":"VirtualDeviceFileBackingOption","properties":{"fileNameExtensions":_self.ChoiceOption}}, _self.VirtualDeviceBackingOption);
    _self.VirtualDiskFlatVer1BackingOption = merge({"type":"VirtualDiskFlatVer1BackingOption","properties":{"diskMode":_self.ChoiceOption,"growable":"xsd:boolean","split":_self.BoolOption,"writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskFlatVer2BackingOption = merge({"type":"VirtualDiskFlatVer2BackingOption","properties":{"diskMode":_self.ChoiceOption,"growable":"xsd:boolean","hotGrowable":"xsd:boolean","split":_self.BoolOption,"uuid":"xsd:boolean","writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskRawDiskMappingVer1BackingOption = merge({"type":"VirtualDiskRawDiskMappingVer1BackingOption","properties":{"compatibilityMode":_self.ChoiceOption,"descriptorFileNameExtensions":_self.ChoiceOption,"diskMode":_self.ChoiceOption,"uuid":"xsd:boolean"}}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualDiskRawDiskVer2BackingOption = merge({"type":"VirtualDiskRawDiskVer2BackingOption","properties":{"descriptorFileNameExtensions":_self.ChoiceOption,"uuid":"xsd:boolean"}}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualDiskSparseVer1BackingOption = merge({"type":"VirtualDiskSparseVer1BackingOption","properties":{"diskModes":_self.ChoiceOption,"growable":"xsd:boolean","split":_self.BoolOption,"writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskSparseVer2BackingOption = merge({"type":"VirtualDiskSparseVer2BackingOption","properties":{"diskMode":_self.ChoiceOption,"growable":"xsd:boolean","hotGrowable":"xsd:boolean","split":_self.BoolOption,"uuid":"xsd:boolean","writeThrough":_self.BoolOption}}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualE1000 = merge({"type":"VirtualE1000"}, _self.VirtualEthernetCard);
    _self.VirtualEnsoniq1371 = merge({"type":"VirtualEnsoniq1371"}, _self.VirtualSoundCard);
    _self.VirtualEnsoniq1371Option = merge({"type":"VirtualEnsoniq1371Option"}, _self.VirtualSoundCardOption);
    _self.VirtualEthernetCardOption = merge({"type":"VirtualEthernetCardOption","properties":{"macType":_self.ChoiceOption,"supportedOUI":_self.ChoiceOption,"wakeOnLanEnabled":_self.BoolOption}}, _self.VirtualDeviceOption);
    _self.VirtualFloppyImageBackingOption = merge({"type":"VirtualFloppyImageBackingOption"}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualIDEController = merge({"type":"VirtualIDEController"}, _self.VirtualController);
    _self.VirtualIDEControllerOption = merge({"type":"VirtualIDEControllerOption","properties":{"numIDECdroms":_self.IntOption,"numIDEDisks":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualMachineConfigSpec = merge({"type":"VirtualMachineConfigSpec","properties":{"alternateGuestName":"xsd:string","annotation":"xsd:string","bootOptions":_self.VirtualMachineBootOptions,"changeVersion":"xsd:string","consolePreferences":_self.VirtualMachineConsolePreferences,"cpuAffinity":_self.VirtualMachineAffinityInfo,"cpuAllocation":_self.ResourceAllocationInfo,"cpuFeatureMask":_self.VirtualMachineCpuIdInfoSpec,"deviceChange":_self.VirtualDeviceConfigSpec,"extraConfig":_self.OptionValue,"files":_self.VirtualMachineFileInfo,"flags":_self.VirtualMachineFlagInfo,"guestId":"xsd:string","locationId":"xsd:string","memoryAffinity":_self.VirtualMachineAffinityInfo,"memoryAllocation":_self.ResourceAllocationInfo,"memoryMB":"xsd:long","name":"xsd:string","networkShaper":_self.VirtualMachineNetworkShaperInfo,"npivNodeWorldWideName":"xsd:long[]","npivPortWorldWideName":"xsd:long[]","npivWorldWideNameOp":"xsd:string","npivWorldWideNameType":"xsd:string","numCPUs":"xsd:int","powerOpInfo":_self.VirtualMachineDefaultPowerOpInfo,"swapPlacement":"xsd:string","tools":_self.ToolsConfigInfo,"uuid":"xsd:string","version":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineConfigOption = merge({"type":"VirtualMachineConfigOption","properties":{"capabilities":_self.VirtualMachineCapability,"datastore":_self.DatastoreOption,"defaultDevice":_self.VirtualDevice,"description":"xsd:string","guestOSDefaultIndex":"xsd:int","guestOSDescriptor":_self.GuestOsDescriptor,"hardwareOptions":_self.VirtualHardwareOption,"supportedMonitorType":"xsd:string[]","version":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineQuestionInfo = merge({"type":"VirtualMachineQuestionInfo","properties":{"choice":_self.ChoiceOption,"id":"xsd:string","message":_self.VirtualMachineMessage,"text":"xsd:string"}}, _self.DynamicData);
    _self.VirtualMachineSnapshot = merge({"type":"VirtualMachineSnapshot","properties":{"config":_self.VirtualMachineConfigInfo},"methods":{"RemoveSnapshot_Task":{"params":{"_this":"ManagedObjectReference","removeChildren":"xsd:boolean"},"returns":"ManagedObjectReference"},"RenameSnapshot":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","description":"xsd:string"},"returns":null},"RevertToSnapshot_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"}}}, _self.ExtensibleManagedObject);
    _self.VirtualParallelPortFileBackingOption = merge({"type":"VirtualParallelPortFileBackingOption"}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualPCIController = merge({"type":"VirtualPCIController"}, _self.VirtualController);
    _self.VirtualPCIControllerOption = merge({"type":"VirtualPCIControllerOption","properties":{"numEthernetCards":_self.IntOption,"numSCSIControllers":_self.IntOption,"numSoundCards":_self.IntOption,"numVideoCards":_self.IntOption,"numVmiRoms":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualPCNet32Option = merge({"type":"VirtualPCNet32Option","properties":{"supportsMorphing":"xsd:boolean"}}, _self.VirtualEthernetCardOption);
    _self.VirtualPointingDeviceBackingOption = merge({"type":"VirtualPointingDeviceBackingOption","properties":{"hostPointingDevice":_self.ChoiceOption}}, _self.VirtualDeviceDeviceBackingOption);
    _self.VirtualPS2Controller = merge({"type":"VirtualPS2Controller"}, _self.VirtualController);
    _self.VirtualPS2ControllerOption = merge({"type":"VirtualPS2ControllerOption","properties":{"numKeyboards":_self.IntOption,"numPointingDevices":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualSCSIController = merge({"type":"VirtualSCSIController","properties":{"hotAddRemove":"xsd:boolean","scsiCtlrUnitNumber":"xsd:int","sharedBus":_self.VirtualSCSISharing}}, _self.VirtualController);
    _self.VirtualSCSIControllerOption = merge({"type":"VirtualSCSIControllerOption","properties":{"defaultSharedIndex":"xsd:int","hotAddRemove":_self.BoolOption,"numSCSICdroms":_self.IntOption,"numSCSIDisks":_self.IntOption,"numSCSIPassthrough":_self.IntOption,"scsiCtlrUnitNumber":"xsd:int","sharing":_self.VirtualSCSISharing}}, _self.VirtualControllerOption);
    _self.VirtualSerialPortFileBackingOption = merge({"type":"VirtualSerialPortFileBackingOption"}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualSerialPortPipeBackingOption = merge({"type":"VirtualSerialPortPipeBackingOption","properties":{"endpoint":_self.ChoiceOption,"noRxLoss":_self.BoolOption}}, _self.VirtualDevicePipeBackingOption);
    _self.VirtualSIOController = merge({"type":"VirtualSIOController"}, _self.VirtualController);
    _self.VirtualSIOControllerOption = merge({"type":"VirtualSIOControllerOption","properties":{"numFloppyDrives":_self.IntOption,"numParallelPorts":_self.IntOption,"numSerialPorts":_self.IntOption}}, _self.VirtualControllerOption);
    _self.VirtualSoundBlaster16 = merge({"type":"VirtualSoundBlaster16"}, _self.VirtualSoundCard);
    _self.VirtualSoundBlaster16Option = merge({"type":"VirtualSoundBlaster16Option"}, _self.VirtualSoundCardOption);
    _self.VirtualUSBController = merge({"type":"VirtualUSBController","properties":{"autoConnectDevices":"xsd:boolean","ehciEnabled":"xsd:boolean"}}, _self.VirtualController);
    _self.VirtualUSBControllerOption = merge({"type":"VirtualUSBControllerOption","properties":{"autoConnectDevices":_self.BoolOption,"ehciSupported":_self.BoolOption}}, _self.VirtualControllerOption);
    _self.VirtualVmxnetOption = merge({"type":"VirtualVmxnetOption"}, _self.VirtualEthernetCardOption);
    _self.VmEvent = merge({"type":"VmEvent","properties":{"template":"xsd:boolean"}}, _self.Event);
    _self.VmFailedMigrateEvent = merge({"type":"VmFailedMigrateEvent","properties":{"destHost":_self.HostEventArgument,"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedRelayoutEvent = merge({"type":"VmFailedRelayoutEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedRelayoutOnVmfs2DatastoreEvent = merge({"type":"VmFailedRelayoutOnVmfs2DatastoreEvent"}, _self.VmEvent);
    _self.VmFailedToPowerOffEvent = merge({"type":"VmFailedToPowerOffEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToPowerOnEvent = merge({"type":"VmFailedToPowerOnEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToRebootGuestEvent = merge({"type":"VmFailedToRebootGuestEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToResetEvent = merge({"type":"VmFailedToResetEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToShutdownGuestEvent = merge({"type":"VmFailedToShutdownGuestEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToStandbyGuestEvent = merge({"type":"VmFailedToStandbyGuestEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailedToSuspendEvent = merge({"type":"VmFailedToSuspendEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmFailoverFailed = merge({"type":"VmFailoverFailed"}, _self.VmEvent);
    _self.VmfsDatastoreAllExtentOption = merge({"type":"VmfsDatastoreAllExtentOption"}, _self.VmfsDatastoreSingleExtentOption);
    _self.VMFSDatastoreCreatedEvent = merge({"type":"VMFSDatastoreCreatedEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.VmGuestRebootEvent = merge({"type":"VmGuestRebootEvent"}, _self.VmEvent);
    _self.VmGuestShutdownEvent = merge({"type":"VmGuestShutdownEvent"}, _self.VmEvent);
    _self.VmGuestStandbyEvent = merge({"type":"VmGuestStandbyEvent"}, _self.VmEvent);
    _self.VmMacAssignedEvent = merge({"type":"VmMacAssignedEvent","properties":{"adapter":"xsd:string","mac":"xsd:string"}}, _self.VmEvent);
    _self.VmMacChangedEvent = merge({"type":"VmMacChangedEvent","properties":{"adapter":"xsd:string","newMac":"xsd:string","oldMac":"xsd:string"}}, _self.VmEvent);
    _self.VmMacConflictEvent = merge({"type":"VmMacConflictEvent","properties":{"conflictedVm":_self.VmEventArgument,"mac":"xsd:string"}}, _self.VmEvent);
    _self.VmMessageEvent = merge({"type":"VmMessageEvent","properties":{"message":"xsd:string","messageInfo":_self.VirtualMachineMessage}}, _self.VmEvent);
    _self.VmMigratedEvent = merge({"type":"VmMigratedEvent","properties":{"sourceHost":_self.HostEventArgument}}, _self.VmEvent);
    _self.VmNoNetworkAccessEvent = merge({"type":"VmNoNetworkAccessEvent","properties":{"destHost":_self.HostEventArgument}}, _self.VmEvent);
    _self.VmOrphanedEvent = merge({"type":"VmOrphanedEvent"}, _self.VmEvent);
    _self.VMotionLicenseExpiredEvent = merge({"type":"VMotionLicenseExpiredEvent"}, _self.LicenseEvent);
    _self.VmPoweredOffEvent = merge({"type":"VmPoweredOffEvent"}, _self.VmEvent);
    _self.VmPoweredOnEvent = merge({"type":"VmPoweredOnEvent"}, _self.VmEvent);
    _self.VmPowerOffOnIsolationEvent = merge({"type":"VmPowerOffOnIsolationEvent","properties":{"isolatedHost":_self.HostEventArgument}}, _self.VmPoweredOffEvent);
    _self.VmReconfiguredEvent = merge({"type":"VmReconfiguredEvent","properties":{"configSpec":_self.VirtualMachineConfigSpec}}, _self.VmEvent);
    _self.VmRegisteredEvent = merge({"type":"VmRegisteredEvent"}, _self.VmEvent);
    _self.VmRelayoutSuccessfulEvent = merge({"type":"VmRelayoutSuccessfulEvent"}, _self.VmEvent);
    _self.VmRelayoutUpToDateEvent = merge({"type":"VmRelayoutUpToDateEvent"}, _self.VmEvent);
    _self.VmRelocateSpecEvent = merge({"type":"VmRelocateSpecEvent"}, _self.VmEvent);
    _self.VmRemovedEvent = merge({"type":"VmRemovedEvent"}, _self.VmEvent);
    _self.VmRenamedEvent = merge({"type":"VmRenamedEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.VmEvent);
    _self.VmResettingEvent = merge({"type":"VmResettingEvent"}, _self.VmEvent);
    _self.VmResourcePoolMovedEvent = merge({"type":"VmResourcePoolMovedEvent","properties":{"newParent":_self.ResourcePoolEventArgument,"oldParent":_self.ResourcePoolEventArgument}}, _self.VmEvent);
    _self.VmResourceReallocatedEvent = merge({"type":"VmResourceReallocatedEvent"}, _self.VmEvent);
    _self.VmRestartedOnAlternateHostEvent = merge({"type":"VmRestartedOnAlternateHostEvent","properties":{"sourceHost":_self.HostEventArgument}}, _self.VmPoweredOnEvent);
    _self.VmResumingEvent = merge({"type":"VmResumingEvent"}, _self.VmEvent);
    _self.VmStartingEvent = merge({"type":"VmStartingEvent"}, _self.VmEvent);
    _self.VmStaticMacConflictEvent = merge({"type":"VmStaticMacConflictEvent","properties":{"conflictedVm":_self.VmEventArgument,"mac":"xsd:string"}}, _self.VmEvent);
    _self.VmStoppingEvent = merge({"type":"VmStoppingEvent"}, _self.VmEvent);
    _self.VmSuspendedEvent = merge({"type":"VmSuspendedEvent"}, _self.VmEvent);
    _self.VmSuspendingEvent = merge({"type":"VmSuspendingEvent"}, _self.VmEvent);
    _self.VmUnsupportedStartingEvent = merge({"type":"VmUnsupportedStartingEvent","properties":{"guestId":"xsd:string"}}, _self.VmStartingEvent);
    _self.VmUpgradeCompleteEvent = merge({"type":"VmUpgradeCompleteEvent","properties":{"version":"xsd:string"}}, _self.VmEvent);
    _self.VmUpgradeFailedEvent = merge({"type":"VmUpgradeFailedEvent"}, _self.VmEvent);
    _self.VmUpgradingEvent = merge({"type":"VmUpgradingEvent","properties":{"version":"xsd:string"}}, _self.VmEvent);
    _self.VmUuidAssignedEvent = merge({"type":"VmUuidAssignedEvent","properties":{"uuid":"xsd:string"}}, _self.VmEvent);
    _self.VmUuidChangedEvent = merge({"type":"VmUuidChangedEvent","properties":{"newUuid":"xsd:string","oldUuid":"xsd:string"}}, _self.VmEvent);
    _self.VmUuidConflictEvent = merge({"type":"VmUuidConflictEvent","properties":{"conflictedVm":_self.VmEventArgument,"uuid":"xsd:string"}}, _self.VmEvent);
    _self.VmWwnAssignedEvent = merge({"type":"VmWwnAssignedEvent","properties":{"nodeWwns":"xsd:long[]","portWwns":"xsd:long[]"}}, _self.VmEvent);
    _self.VmWwnChangedEvent = merge({"type":"VmWwnChangedEvent","properties":{"newNodeWwns":"xsd:long[]","newPortWwns":"xsd:long[]","oldNodeWwns":"xsd:long[]","oldPortWwns":"xsd:long[]"}}, _self.VmEvent);
    _self.VmWwnConflictEvent = merge({"type":"VmWwnConflictEvent","properties":{"conflictedHosts":_self.HostEventArgument,"conflictedVms":_self.VmEventArgument,"wwn":"xsd:long"}}, _self.VmEvent);
    _self.WarningUpgradeEvent = merge({"type":"WarningUpgradeEvent"}, _self.UpgradeEvent);
    _self.AccountCreatedEvent = merge({"type":"AccountCreatedEvent","properties":{"group":"xsd:boolean","spec":_self.HostAccountSpec}}, _self.HostEvent);
    _self.AccountRemovedEvent = merge({"type":"AccountRemovedEvent","properties":{"account":"xsd:string","group":"xsd:boolean"}}, _self.HostEvent);
    _self.AccountUpdatedEvent = merge({"type":"AccountUpdatedEvent","properties":{"group":"xsd:boolean","spec":_self.HostAccountSpec}}, _self.HostEvent);
    _self.AdminPasswordNotChangedEvent = merge({"type":"AdminPasswordNotChangedEvent"}, _self.HostEvent);
    _self.Alarm = merge({"type":"Alarm","properties":{"info":_self.AlarmInfo},"methods":{"ReconfigureAlarm":{"params":{"_this":"ManagedObjectReference","spec":"AlarmSpec"},"returns":null},"RemoveAlarm":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.AlarmDescription = merge({"type":"AlarmDescription","properties":{"action":_self.TypeDescription,"entityStatus":_self.ElementDescription,"expr":_self.TypeDescription,"hostSystemConnectionState":_self.ElementDescription,"metricOperator":_self.ElementDescription,"stateOperator":_self.ElementDescription,"virtualMachinePowerState":_self.ElementDescription}}, _self.DynamicData);
    _self.AlarmEvent = merge({"type":"AlarmEvent","properties":{"alarm":_self.AlarmEventArgument}}, _self.Event);
    _self.AlarmManager = {"type":"AlarmManager","properties":{"defaultExpression":_self.AlarmExpression,"description":_self.AlarmDescription},"methods":{"CreateAlarm":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","spec":"AlarmSpec"},"returns":"ManagedObjectReference"},"GetAlarm":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"GetAlarmState":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity"},"returns":"AlarmState"}}};
    _self.AlarmReconfiguredEvent = merge({"type":"AlarmReconfiguredEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmRemovedEvent = merge({"type":"AlarmRemovedEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmScriptCompleteEvent = merge({"type":"AlarmScriptCompleteEvent","properties":{"entity":_self.ManagedEntityEventArgument,"script":"xsd:string"}}, _self.AlarmEvent);
    _self.AlarmScriptFailedEvent = merge({"type":"AlarmScriptFailedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"reason":_self.LocalizedMethodFault,"script":"xsd:string"}}, _self.AlarmEvent);
    _self.AlarmSnmpCompletedEvent = merge({"type":"AlarmSnmpCompletedEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmSnmpFailedEvent = merge({"type":"AlarmSnmpFailedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"reason":_self.LocalizedMethodFault}}, _self.AlarmEvent);
    _self.AlarmStatusChangedEvent = merge({"type":"AlarmStatusChangedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"from":"xsd:string","source":_self.ManagedEntityEventArgument,"to":"xsd:string"}}, _self.AlarmEvent);
    _self.AllVirtualMachinesLicensedEvent = merge({"type":"AllVirtualMachinesLicensedEvent"}, _self.LicenseEvent);
    _self.AlreadyAuthenticatedSessionEvent = merge({"type":"AlreadyAuthenticatedSessionEvent"}, _self.SessionEvent);
    _self.AuthorizationEvent = merge({"type":"AuthorizationEvent"}, _self.Event);
    _self.AuthorizationManager = {"type":"AuthorizationManager","properties":{"description":_self.AuthorizationDescription,"privilegeList":_self.AuthorizationPrivilege,"roleList":_self.AuthorizationRole},"methods":{"AddAuthorizationRole":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","privIds":"xsd:string"},"returns":"xsd:int"},"MergePermissions":{"params":{"_this":"ManagedObjectReference","srcRoleId":"xsd:int","dstRoleId":"xsd:int"},"returns":null},"RemoveAuthorizationRole":{"params":{"_this":"ManagedObjectReference","roleId":"xsd:int","failIfUsed":"xsd:boolean"},"returns":null},"RemoveEntityPermission":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","user":"xsd:string","isGroup":"xsd:boolean"},"returns":null},"ResetEntityPermissions":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","permission":"Permission"},"returns":null},"RetrieveAllPermissions":{"params":{"_this":"ManagedObjectReference"},"returns":"Permission"},"RetrieveEntityPermissions":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","inherited":"xsd:boolean"},"returns":"Permission"},"RetrieveRolePermissions":{"params":{"_this":"ManagedObjectReference","roleId":"xsd:int"},"returns":"Permission"},"SetEntityPermissions":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","permission":"Permission"},"returns":null},"UpdateAuthorizationRole":{"params":{"_this":"ManagedObjectReference","roleId":"xsd:int","newName":"xsd:string","privIds":"xsd:string"},"returns":null}}};
    _self.BadUsernameSessionEvent = merge({"type":"BadUsernameSessionEvent","properties":{"ipAddress":"xsd:string"}}, _self.SessionEvent);
    _self.CanceledHostOperationEvent = merge({"type":"CanceledHostOperationEvent"}, _self.HostEvent);
    _self.ClusterConfigInfo = merge({"type":"ClusterConfigInfo","properties":{"dasConfig":_self.ClusterDasConfigInfo,"dasVmConfig":_self.ClusterDasVmConfigInfo,"drsConfig":_self.ClusterDrsConfigInfo,"drsVmConfig":_self.ClusterDrsVmConfigInfo,"rule":_self.ClusterRuleInfo}}, _self.DynamicData);
    _self.ClusterConfigInfoEx = merge({"type":"ClusterConfigInfoEx","properties":{"dasConfig":_self.ClusterDasConfigInfo,"dasVmConfig":_self.ClusterDasVmConfigInfo,"dpmConfigInfo":_self.ClusterDpmConfigInfo,"dpmHostConfig":_self.ClusterDpmHostConfigInfo,"drsConfig":_self.ClusterDrsConfigInfo,"drsVmConfig":_self.ClusterDrsVmConfigInfo,"rule":_self.ClusterRuleInfo}}, _self.ComputeResourceConfigInfo);
    _self.ClusterConfigSpec = merge({"type":"ClusterConfigSpec","properties":{"dasConfig":_self.ClusterDasConfigInfo,"dasVmConfigSpec":_self.ClusterDasVmConfigSpec,"drsConfig":_self.ClusterDrsConfigInfo,"drsVmConfigSpec":_self.ClusterDrsVmConfigSpec,"rulesSpec":_self.ClusterRuleSpec}}, _self.DynamicData);
    _self.ClusterEvent = merge({"type":"ClusterEvent"}, _self.Event);
    _self.ClusterOvercommittedEvent = merge({"type":"ClusterOvercommittedEvent"}, _self.ClusterEvent);
    _self.ClusterReconfiguredEvent = merge({"type":"ClusterReconfiguredEvent"}, _self.ClusterEvent);
    _self.ClusterStatusChangedEvent = merge({"type":"ClusterStatusChangedEvent","properties":{"newStatus":"xsd:string","oldStatus":"xsd:string"}}, _self.ClusterEvent);
    _self.ComputeResource = merge({"type":"ComputeResource","properties":{"configurationEx":_self.ComputeResourceConfigInfo,"datastore":_self.ManagedObjectReference,"environmentBrowser":_self.ManagedObjectReference,"host":_self.ManagedObjectReference,"network":_self.ManagedObjectReference,"resourcePool":_self.ManagedObjectReference,"summary":_self.ComputeResourceSummary},"methods":{"ReconfigureComputeResource_Task":{"params":{"_this":"ManagedObjectReference","spec":"ComputeResourceConfigSpec","modify":"xsd:boolean"},"returns":"ManagedObjectReference"}}}, _self.ManagedEntity);
    _self.VirtualMachineScsiDiskDeviceInfo = merge({"type":"VirtualMachineScsiDiskDeviceInfo","properties":{"disk":_self.HostScsiDisk}}, _self.VirtualMachineDiskDeviceInfo);
    _self.CustomFieldEvent = merge({"type":"CustomFieldEvent"}, _self.Event);
    _self.CustomFieldValueChangedEvent = merge({"type":"CustomFieldValueChangedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"fieldKey":"xsd:int","name":"xsd:string","value":"xsd:string"}}, _self.CustomFieldEvent);
    _self.CustomizationAdapterMapping = merge({"type":"CustomizationAdapterMapping","properties":{"adapter":_self.CustomizationIPSettings,"macAddress":"xsd:string"}}, _self.DynamicData);
    _self.CustomizationEvent = merge({"type":"CustomizationEvent","properties":{"logLocation":"xsd:string"}}, _self.VmEvent);
    _self.CustomizationFailed = merge({"type":"CustomizationFailed"}, _self.CustomizationEvent);
    _self.CustomizationLinuxIdentityFailed = merge({"type":"CustomizationLinuxIdentityFailed"}, _self.CustomizationFailed);
    _self.CustomizationNetworkSetupFailed = merge({"type":"CustomizationNetworkSetupFailed"}, _self.CustomizationFailed);
    _self.CustomizationSpec = merge({"type":"CustomizationSpec","properties":{"encryptionKey":"xsd:byte[]","globalIPSettings":_self.CustomizationGlobalIPSettings,"identity":_self.CustomizationIdentitySettings,"nicSettingMap":_self.CustomizationAdapterMapping,"options":_self.CustomizationOptions}}, _self.DynamicData);
    _self.CustomizationSpecItem = merge({"type":"CustomizationSpecItem","properties":{"info":_self.CustomizationSpecInfo,"spec":_self.CustomizationSpec}}, _self.DynamicData);
    _self.CustomizationStartedEvent = merge({"type":"CustomizationStartedEvent"}, _self.CustomizationEvent);
    _self.CustomizationSucceeded = merge({"type":"CustomizationSucceeded"}, _self.CustomizationEvent);
    _self.CustomizationSysprepFailed = merge({"type":"CustomizationSysprepFailed","properties":{"sysprepVersion":"xsd:string","systemVersion":"xsd:string"}}, _self.CustomizationFailed);
    _self.CustomizationUnknownFailure = merge({"type":"CustomizationUnknownFailure"}, _self.CustomizationFailed);
    _self.DailyTaskScheduler = merge({"type":"DailyTaskScheduler","properties":{"hour":"xsd:int"}}, _self.HourlyTaskScheduler);
    _self.DasAdmissionControlDisabledEvent = merge({"type":"DasAdmissionControlDisabledEvent"}, _self.ClusterEvent);
    _self.DasAdmissionControlEnabledEvent = merge({"type":"DasAdmissionControlEnabledEvent"}, _self.ClusterEvent);
    _self.DasAgentFoundEvent = merge({"type":"DasAgentFoundEvent"}, _self.ClusterEvent);
    _self.DasAgentUnavailableEvent = merge({"type":"DasAgentUnavailableEvent"}, _self.ClusterEvent);
    _self.DasDisabledEvent = merge({"type":"DasDisabledEvent"}, _self.ClusterEvent);
    _self.DasEnabledEvent = merge({"type":"DasEnabledEvent"}, _self.ClusterEvent);
    _self.DasHostFailedEvent = merge({"type":"DasHostFailedEvent","properties":{"failedHost":_self.HostEventArgument}}, _self.ClusterEvent);
    _self.DasHostIsolatedEvent = merge({"type":"DasHostIsolatedEvent","properties":{"isolatedHost":_self.HostEventArgument}}, _self.ClusterEvent);
    _self.Datacenter = merge({"type":"Datacenter","properties":{"datastore":_self.ManagedObjectReference,"hostFolder":_self.ManagedObjectReference,"network":_self.ManagedObjectReference,"vmFolder":_self.ManagedObjectReference},"methods":{"PowerOnMultiVM_Task":{"params":{"_this":"ManagedObjectReference","vmP":"ManagedObjectReferencetoaVirtualMachine"},"returns":"ManagedObjectReference"},"QueryConnectionInfo":{"params":{"_this":"ManagedObjectReference","hostname":"xsd:string","port":"xsd:int","username":"xsd:string","password":"xsd:string","sslThumbprint":"xsd:string"},"returns":"HostConnectInfo"}}}, _self.ManagedEntity);
    _self.DatacenterEvent = merge({"type":"DatacenterEvent"}, _self.Event);
    _self.DatacenterRenamedEvent = merge({"type":"DatacenterRenamedEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.DatacenterEvent);
    _self.Datastore = merge({"type":"Datastore","properties":{"browser":_self.ManagedObjectReference,"capability":_self.DatastoreCapability,"host":_self.DatastoreHostMount,"info":_self.DatastoreInfo,"summary":_self.DatastoreSummary,"vm":_self.ManagedObjectReference},"methods":{"DestroyDatastore":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RefreshDatastore":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RenameDatastore":{"params":{"_this":"ManagedObjectReference","newName":"xsd:string"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.DatastoreDiscoveredEvent = merge({"type":"DatastoreDiscoveredEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.DatastoreEvent = merge({"type":"DatastoreEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.Event);
    _self.DatastorePrincipalConfigured = merge({"type":"DatastorePrincipalConfigured","properties":{"datastorePrincipal":"xsd:string"}}, _self.HostEvent);
    _self.DatastoreRemovedOnHostEvent = merge({"type":"DatastoreRemovedOnHostEvent","properties":{"datastore":_self.DatastoreEventArgument}}, _self.HostEvent);
    _self.DatastoreRenamedEvent = merge({"type":"DatastoreRenamedEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.DatastoreEvent);
    _self.DatastoreRenamedOnHostEvent = merge({"type":"DatastoreRenamedOnHostEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.HostEvent);
    _self.DrsDisabledEvent = merge({"type":"DrsDisabledEvent"}, _self.ClusterEvent);
    _self.DrsEnabledEvent = merge({"type":"DrsEnabledEvent","properties":{"behavior":"xsd:string"}}, _self.ClusterEvent);
    _self.DrsResourceConfigureFailedEvent = merge({"type":"DrsResourceConfigureFailedEvent","properties":{"reason":_self.LocalizedMethodFault}}, _self.HostEvent);
    _self.DrsResourceConfigureSyncedEvent = merge({"type":"DrsResourceConfigureSyncedEvent"}, _self.HostEvent);
    _self.DrsVmMigratedEvent = merge({"type":"DrsVmMigratedEvent"}, _self.VmMigratedEvent);
    _self.DrsVmPoweredOnEvent = merge({"type":"DrsVmPoweredOnEvent"}, _self.VmPoweredOnEvent);
    _self.DuplicateIpDetectedEvent = merge({"type":"DuplicateIpDetectedEvent","properties":{"duplicateIP":"xsd:string","macAddress":"xsd:string"}}, _self.HostEvent);
    _self.EnteredMaintenanceModeEvent = merge({"type":"EnteredMaintenanceModeEvent"}, _self.HostEvent);
    _self.EnteredStandbyModeEvent = merge({"type":"EnteredStandbyModeEvent"}, _self.HostEvent);
    _self.EnteringMaintenanceModeEvent = merge({"type":"EnteringMaintenanceModeEvent"}, _self.HostEvent);
    _self.EnteringStandbyModeEvent = merge({"type":"EnteringStandbyModeEvent"}, _self.HostEvent);
    _self.ErrorUpgradeEvent = merge({"type":"ErrorUpgradeEvent"}, _self.UpgradeEvent);
    _self.ExitedStandbyModeEvent = merge({"type":"ExitedStandbyModeEvent"}, _self.HostEvent);
    _self.ExitMaintenanceModeEvent = merge({"type":"ExitMaintenanceModeEvent"}, _self.HostEvent);
    _self.ExtendedEvent = merge({"type":"ExtendedEvent","properties":{"data":_self.ExtendedEventPair,"eventTypeId":"xsd:string","managedObject":_self.ManagedObjectReference}}, _self.GeneralEvent);
    _self.FailoverLevelRestored = merge({"type":"FailoverLevelRestored"}, _self.ClusterEvent);
    _self.Folder = merge({"type":"Folder","properties":{"childEntity":_self.ManagedObjectReference,"childType":"xsd:string[]"},"methods":{"AddStandaloneHost_Task":{"params":{"_this":"ManagedObjectReference","spec":"HostConnectSpec","compResSpec":"ComputeResourceConfigSpec","addConnected":"xsd:boolean"},"returns":"ManagedObjectReference"},"CreateCluster":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","spec":"ClusterConfigSpec"},"returns":"ManagedObjectReference"},"CreateClusterEx":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","spec":"ClusterConfigSpecEx"},"returns":"ManagedObjectReference"},"CreateDatacenter":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"ManagedObjectReference"},"CreateFolder":{"params":{"_this":"ManagedObjectReference","name":"xsd:string"},"returns":"ManagedObjectReference"},"CreateVM_Task":{"params":{"_this":"ManagedObjectReference","config":"VirtualMachineConfigSpec","poolP":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"MoveIntoFolder_Task":{"params":{"_this":"ManagedObjectReference","list":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"},"RegisterVM_Task":{"params":{"_this":"ManagedObjectReference","path":"xsd:string","name":"xsd:string","asTemplate":"xsd:boolean","poolP":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"UnregisterAndDestroy_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"}}}, _self.ManagedEntity);
    _self.GlobalMessageChangedEvent = merge({"type":"GlobalMessageChangedEvent","properties":{"message":"xsd:string"}}, _self.SessionEvent);
    _self.HostHardwareStatusInfo = merge({"type":"HostHardwareStatusInfo","properties":{"cpuStatusInfo":_self.HostHardwareElementInfo,"memoryStatusInfo":_self.HostHardwareElementInfo,"storageStatusInfo":_self.HostStorageElementInfo}}, _self.DynamicData);
    _self.HostSystemHealthInfo = merge({"type":"HostSystemHealthInfo","properties":{"numericSensorInfo":_self.HostNumericSensorInfo}}, _self.DynamicData);
    _self.HostAddedEvent = merge({"type":"HostAddedEvent"}, _self.HostEvent);
    _self.HostAddFailedEvent = merge({"type":"HostAddFailedEvent","properties":{"hostname":"xsd:string"}}, _self.HostEvent);
    _self.HostAdminDisableEvent = merge({"type":"HostAdminDisableEvent"}, _self.HostEvent);
    _self.HostAdminEnableEvent = merge({"type":"HostAdminEnableEvent"}, _self.HostEvent);
    _self.HostCnxFailedAccountFailedEvent = merge({"type":"HostCnxFailedAccountFailedEvent"}, _self.HostEvent);
    _self.HostCnxFailedAlreadyManagedEvent = merge({"type":"HostCnxFailedAlreadyManagedEvent","properties":{"serverName":"xsd:string"}}, _self.HostEvent);
    _self.HostCnxFailedBadCcagentEvent = merge({"type":"HostCnxFailedBadCcagentEvent"}, _self.HostEvent);
    _self.HostCnxFailedBadUsernameEvent = merge({"type":"HostCnxFailedBadUsernameEvent"}, _self.HostEvent);
    _self.HostCnxFailedBadVersionEvent = merge({"type":"HostCnxFailedBadVersionEvent"}, _self.HostEvent);
    _self.HostCnxFailedCcagentUpgradeEvent = merge({"type":"HostCnxFailedCcagentUpgradeEvent"}, _self.HostEvent);
    _self.HostCnxFailedEvent = merge({"type":"HostCnxFailedEvent"}, _self.HostEvent);
    _self.HostCnxFailedNetworkErrorEvent = merge({"type":"HostCnxFailedNetworkErrorEvent"}, _self.HostEvent);
    _self.HostCnxFailedNoAccessEvent = merge({"type":"HostCnxFailedNoAccessEvent"}, _self.HostEvent);
    _self.HostCnxFailedNoConnectionEvent = merge({"type":"HostCnxFailedNoConnectionEvent"}, _self.HostEvent);
    _self.HostCnxFailedNoLicenseEvent = merge({"type":"HostCnxFailedNoLicenseEvent"}, _self.HostEvent);
    _self.HostCnxFailedNotFoundEvent = merge({"type":"HostCnxFailedNotFoundEvent"}, _self.HostEvent);
    _self.HostCnxFailedTimeoutEvent = merge({"type":"HostCnxFailedTimeoutEvent"}, _self.HostEvent);
    _self.HostConnectedEvent = merge({"type":"HostConnectedEvent"}, _self.HostEvent);
    _self.HostConnectionLostEvent = merge({"type":"HostConnectionLostEvent"}, _self.HostEvent);
    _self.HostDasDisabledEvent = merge({"type":"HostDasDisabledEvent"}, _self.HostEvent);
    _self.HostDasDisablingEvent = merge({"type":"HostDasDisablingEvent"}, _self.HostEvent);
    _self.HostDasEnabledEvent = merge({"type":"HostDasEnabledEvent"}, _self.HostEvent);
    _self.HostDasEnablingEvent = merge({"type":"HostDasEnablingEvent"}, _self.HostEvent);
    _self.HostDasErrorEvent = merge({"type":"HostDasErrorEvent","properties":{"message":"xsd:string"}}, _self.HostEvent);
    _self.HostDasEvent = merge({"type":"HostDasEvent"}, _self.HostEvent);
    _self.HostDasOkEvent = merge({"type":"HostDasOkEvent"}, _self.HostEvent);
    _self.HostDiagnosticPartitionCreateDescription = merge({"type":"HostDiagnosticPartitionCreateDescription","properties":{"diskUuid":"xsd:string","layout":_self.HostDiskPartitionLayout,"spec":_self.HostDiagnosticPartitionCreateSpec}}, _self.DynamicData);
    _self.HostDiagnosticPartitionCreateOption = merge({"type":"HostDiagnosticPartitionCreateOption","properties":{"diagnosticType":"xsd:string","disk":_self.HostScsiDisk,"storageType":"xsd:string"}}, _self.DynamicData);
    _self.HostDisconnectedEvent = merge({"type":"HostDisconnectedEvent"}, _self.HostEvent);
    _self.HostEnableAdminFailedEvent = merge({"type":"HostEnableAdminFailedEvent","properties":{"permissions":_self.Permission}}, _self.HostEvent);
    _self.HostSystemInfo = merge({"type":"HostSystemInfo","properties":{"model":"xsd:string","otherIdentifyingInfo":_self.HostSystemIdentificationInfo,"uuid":"xsd:string","vendor":"xsd:string"}}, _self.DynamicData);
    _self.HostHardwareSummary = merge({"type":"HostHardwareSummary","properties":{"cpuMhz":"xsd:int","cpuModel":"xsd:string","memorySize":"xsd:long","model":"xsd:string","numCpuCores":"xsd:short","numCpuPkgs":"xsd:short","numCpuThreads":"xsd:short","numHBAs":"xsd:int","numNics":"xsd:int","otherIdentifyingInfo":_self.HostSystemIdentificationInfo,"uuid":"xsd:string","vendor":"xsd:string"}}, _self.DynamicData);
    _self.HostInventoryFullEvent = merge({"type":"HostInventoryFullEvent","properties":{"capacity":"xsd:int"}}, _self.LicenseEvent);
    _self.HostIsolationIpPingFailedEvent = merge({"type":"HostIsolationIpPingFailedEvent","properties":{"isolationIp":"xsd:string"}}, _self.HostDasEvent);
    _self.HostLicenseExpiredEvent = merge({"type":"HostLicenseExpiredEvent"}, _self.LicenseEvent);
    _self.HostMultipathInfo = merge({"type":"HostMultipathInfo","properties":{"lun":_self.HostMultipathInfoLogicalUnit}}, _self.DynamicData);
    _self.HostPortGroupConfig = merge({"type":"HostPortGroupConfig","properties":{"changeOperation":"xsd:string","spec":_self.HostPortGroupSpec}}, _self.DynamicData);
    _self.HostVirtualSwitchConfig = merge({"type":"HostVirtualSwitchConfig","properties":{"changeOperation":"xsd:string","name":"xsd:string","spec":_self.HostVirtualSwitchSpec}}, _self.DynamicData);
    _self.HostPortGroup = merge({"type":"HostPortGroup","properties":{"computedPolicy":_self.HostNetworkPolicy,"key":"xsd:string","port":_self.HostPortGroupPort,"spec":_self.HostPortGroupSpec,"vswitch":"xsd:string"}}, _self.DynamicData);
    _self.HostVirtualSwitch = merge({"type":"HostVirtualSwitch","properties":{"key":"xsd:string","mtu":"xsd:int","name":"xsd:string","numPorts":"xsd:int","numPortsAvailable":"xsd:int","pnic":"xsd:string[]","portgroup":"xsd:string[]","spec":_self.HostVirtualSwitchSpec}}, _self.DynamicData);
    _self.HostNoRedundantManagementNetworkEvent = merge({"type":"HostNoRedundantManagementNetworkEvent"}, _self.HostDasEvent);
    _self.HostNotInClusterEvent = merge({"type":"HostNotInClusterEvent"}, _self.HostDasEvent);
    _self.HostPrimaryAgentNotShortNameEvent = merge({"type":"HostPrimaryAgentNotShortNameEvent","properties":{"primaryAgent":"xsd:string"}}, _self.HostDasEvent);
    _self.HostScsiTopology = merge({"type":"HostScsiTopology","properties":{"adapter":_self.HostScsiTopologyInterface}}, _self.DynamicData);
    _self.HostShortNameInconsistentEvent = merge({"type":"HostShortNameInconsistentEvent","properties":{"shortName":"xsd:string","shortName2":"xsd:string"}}, _self.HostDasEvent);
    _self.IncorrectHostInformationEvent = merge({"type":"IncorrectHostInformationEvent"}, _self.LicenseEvent);
    _self.InfoUpgradeEvent = merge({"type":"InfoUpgradeEvent"}, _self.UpgradeEvent);
    _self.InsufficientFailoverResourcesEvent = merge({"type":"InsufficientFailoverResourcesEvent"}, _self.ClusterEvent);
    _self.InvalidEditionEvent = merge({"type":"InvalidEditionEvent","properties":{"feature":"xsd:string"}}, _self.LicenseEvent);
    _self.MigrationEvent = merge({"type":"MigrationEvent","properties":{"fault":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.MigrationHostErrorEvent = merge({"type":"MigrationHostErrorEvent","properties":{"dstHost":_self.HostEventArgument}}, _self.MigrationEvent);
    _self.MigrationHostWarningEvent = merge({"type":"MigrationHostWarningEvent","properties":{"dstHost":_self.HostEventArgument}}, _self.MigrationEvent);
    _self.MigrationResourceErrorEvent = merge({"type":"MigrationResourceErrorEvent","properties":{"dstHost":_self.HostEventArgument,"dstPool":_self.ResourcePoolEventArgument}}, _self.MigrationEvent);
    _self.MigrationResourceWarningEvent = merge({"type":"MigrationResourceWarningEvent","properties":{"dstHost":_self.HostEventArgument,"dstPool":_self.ResourcePoolEventArgument}}, _self.MigrationEvent);
    _self.MigrationWarningEvent = merge({"type":"MigrationWarningEvent"}, _self.MigrationEvent);
    _self.MonthlyTaskScheduler = merge({"type":"MonthlyTaskScheduler"}, _self.DailyTaskScheduler);
    _self.NoAccessUserEvent = merge({"type":"NoAccessUserEvent","properties":{"ipAddress":"xsd:string"}}, _self.SessionEvent);
    _self.NoMaintenanceModeDrsRecommendationForVM = merge({"type":"NoMaintenanceModeDrsRecommendationForVM"}, _self.VmEvent);
    _self.NotEnoughResourcesToStartVmEvent = merge({"type":"NotEnoughResourcesToStartVmEvent"}, _self.VmEvent);
    _self.PermissionEvent = merge({"type":"PermissionEvent","properties":{"entity":_self.ManagedEntityEventArgument,"group":"xsd:boolean","principal":"xsd:string"}}, _self.AuthorizationEvent);
    _self.PermissionRemovedEvent = merge({"type":"PermissionRemovedEvent"}, _self.PermissionEvent);
    _self.PermissionUpdatedEvent = merge({"type":"PermissionUpdatedEvent","properties":{"propagate":"xsd:boolean","role":_self.RoleEventArgument}}, _self.PermissionEvent);
    _self.ResourcePool = merge({"type":"ResourcePool","properties":{"childConfiguration":_self.ResourceConfigSpec,"config":_self.ResourceConfigSpec,"owner":_self.ManagedObjectReference,"resourcePool":_self.ManagedObjectReference,"runtime":_self.ResourcePoolRuntimeInfo,"summary":_self.ResourcePoolSummary,"vm":_self.ManagedObjectReference},"methods":{"CreateResourcePool":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","spec":"ResourceConfigSpec"},"returns":"ManagedObjectReference"},"DestroyChildren":{"params":{"_this":"ManagedObjectReference"},"returns":null},"MoveIntoResourcePool":{"params":{"_this":"ManagedObjectReference","list":"ManagedObjectReferencetoaManagedEntity"},"returns":null},"UpdateChildResourceConfiguration":{"params":{"_this":"ManagedObjectReference","spec":"ResourceConfigSpec"},"returns":null},"UpdateConfig":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","config":"ResourceConfigSpec"},"returns":null}}}, _self.ManagedEntity);
    _self.ResourcePoolCreatedEvent = merge({"type":"ResourcePoolCreatedEvent","properties":{"parent":_self.ResourcePoolEventArgument}}, _self.ResourcePoolEvent);
    _self.ResourcePoolDestroyedEvent = merge({"type":"ResourcePoolDestroyedEvent"}, _self.ResourcePoolEvent);
    _self.RoleEvent = merge({"type":"RoleEvent","properties":{"role":_self.RoleEventArgument}}, _self.AuthorizationEvent);
    _self.RoleRemovedEvent = merge({"type":"RoleRemovedEvent"}, _self.RoleEvent);
    _self.RoleUpdatedEvent = merge({"type":"RoleUpdatedEvent","properties":{"privilegeList":"xsd:string[]"}}, _self.RoleEvent);
    _self.ScheduledTask = merge({"type":"ScheduledTask","properties":{"info":_self.ScheduledTaskInfo},"methods":{"ReconfigureScheduledTask":{"params":{"_this":"ManagedObjectReference","spec":"ScheduledTaskSpec"},"returns":null},"RemoveScheduledTask":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RunScheduledTask":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.ScheduledTaskCompletedEvent = merge({"type":"ScheduledTaskCompletedEvent"}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskCreatedEvent = merge({"type":"ScheduledTaskCreatedEvent"}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskDescription = merge({"type":"ScheduledTaskDescription","properties":{"action":_self.TypeDescription,"dayOfWeek":_self.ElementDescription,"schedulerInfo":_self.ScheduledTaskDetail,"state":_self.ElementDescription,"weekOfMonth":_self.ElementDescription}}, _self.DynamicData);
    _self.ScheduledTaskEmailCompletedEvent = merge({"type":"ScheduledTaskEmailCompletedEvent","properties":{"to":"xsd:string"}}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskEmailFailedEvent = merge({"type":"ScheduledTaskEmailFailedEvent","properties":{"reason":_self.LocalizedMethodFault,"to":"xsd:string"}}, _self.ScheduledTaskEvent);
    _self.ScheduledTaskManager = {"type":"ScheduledTaskManager","properties":{"description":_self.ScheduledTaskDescription,"scheduledTask":_self.ManagedObjectReference},"methods":{"CreateScheduledTask":{"params":{"_this":"ManagedObjectReference","entityP":"ManagedObjectReferencetoaManagedEntity","spec":"ScheduledTaskSpec"},"returns":"ManagedObjectReference"},"RetrieveEntityScheduledTask":{"params":{"_this":"ManagedObjectReference","entity":"ManagedObjectReferencetoaManagedEntity"},"returns":"ManagedObjectReference"}}};
    _self.ServerStartedSessionEvent = merge({"type":"ServerStartedSessionEvent"}, _self.SessionEvent);
    _self.TemplateBeingUpgradedEvent = merge({"type":"TemplateBeingUpgradedEvent"}, _self.TemplateUpgradeEvent);
    _self.TemplateUpgradedEvent = merge({"type":"TemplateUpgradedEvent"}, _self.TemplateUpgradeEvent);
    _self.VirtualBusLogicController = merge({"type":"VirtualBusLogicController"}, _self.VirtualSCSIController);
    _self.VirtualBusLogicControllerOption = merge({"type":"VirtualBusLogicControllerOption"}, _self.VirtualSCSIControllerOption);
    _self.VirtualCdromIsoBackingOption = merge({"type":"VirtualCdromIsoBackingOption"}, _self.VirtualDeviceFileBackingOption);
    _self.VirtualDiskPartitionedRawDiskVer2BackingOption = merge({"type":"VirtualDiskPartitionedRawDiskVer2BackingOption"}, _self.VirtualDiskRawDiskVer2BackingOption);
    _self.VirtualE1000Option = merge({"type":"VirtualE1000Option"}, _self.VirtualEthernetCardOption);
    _self.VirtualLsiLogicController = merge({"type":"VirtualLsiLogicController"}, _self.VirtualSCSIController);
    _self.VirtualLsiLogicControllerOption = merge({"type":"VirtualLsiLogicControllerOption"}, _self.VirtualSCSIControllerOption);
    _self.VirtualMachineRuntimeInfo = merge({"type":"VirtualMachineRuntimeInfo","properties":{"bootTime":"xsd:dateTime","connectionState":_self.VirtualMachineConnectionState,"host":_self.ManagedObjectReference,"maxCpuUsage":"xsd:int","maxMemoryUsage":"xsd:int","memoryOverhead":"xsd:long","numMksConnections":"xsd:int","powerState":_self.VirtualMachinePowerState,"question":_self.VirtualMachineQuestionInfo,"suspendInterval":"xsd:long","suspendTime":"xsd:dateTime","toolsInstallerMounted":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineCloneSpec = merge({"type":"VirtualMachineCloneSpec","properties":{"config":_self.VirtualMachineConfigSpec,"customization":_self.CustomizationSpec,"location":_self.VirtualMachineRelocateSpec,"powerOn":"xsd:boolean","template":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualVmxnet2Option = merge({"type":"VirtualVmxnet2Option"}, _self.VirtualVmxnetOption);
    _self.VmAcquiredMksTicketEvent = merge({"type":"VmAcquiredMksTicketEvent"}, _self.VmEvent);
    _self.VmAutoRenameEvent = merge({"type":"VmAutoRenameEvent","properties":{"newName":"xsd:string","oldName":"xsd:string"}}, _self.VmEvent);
    _self.VmBeingCreatedEvent = merge({"type":"VmBeingCreatedEvent","properties":{"configSpec":_self.VirtualMachineConfigSpec}}, _self.VmEvent);
    _self.VmBeingDeployedEvent = merge({"type":"VmBeingDeployedEvent","properties":{"srcTemplate":_self.VmEventArgument}}, _self.VmEvent);
    _self.VmBeingHotMigratedEvent = merge({"type":"VmBeingHotMigratedEvent","properties":{"destHost":_self.HostEventArgument}}, _self.VmEvent);
    _self.VmBeingMigratedEvent = merge({"type":"VmBeingMigratedEvent","properties":{"destHost":_self.HostEventArgument}}, _self.VmEvent);
    _self.VmBeingRelocatedEvent = merge({"type":"VmBeingRelocatedEvent","properties":{"destHost":_self.HostEventArgument}}, _self.VmRelocateSpecEvent);
    _self.VmCloneEvent = merge({"type":"VmCloneEvent"}, _self.VmEvent);
    _self.VmCloneFailedEvent = merge({"type":"VmCloneFailedEvent","properties":{"destFolder":_self.FolderEventArgument,"destHost":_self.HostEventArgument,"destName":"xsd:string","reason":_self.LocalizedMethodFault}}, _self.VmCloneEvent);
    _self.VmConfigMissingEvent = merge({"type":"VmConfigMissingEvent"}, _self.VmEvent);
    _self.VmConnectedEvent = merge({"type":"VmConnectedEvent"}, _self.VmEvent);
    _self.VmCreatedEvent = merge({"type":"VmCreatedEvent"}, _self.VmEvent);
    _self.VmDasUpdateErrorEvent = merge({"type":"VmDasUpdateErrorEvent"}, _self.VmEvent);
    _self.VmDasUpdateOkEvent = merge({"type":"VmDasUpdateOkEvent"}, _self.VmEvent);
    _self.VmDateRolledBackEvent = merge({"type":"VmDateRolledBackEvent"}, _self.VmEvent);
    _self.VmDeployedEvent = merge({"type":"VmDeployedEvent","properties":{"srcTemplate":_self.VmEventArgument}}, _self.VmEvent);
    _self.VmDeployFailedEvent = merge({"type":"VmDeployFailedEvent","properties":{"destDatastore":_self.EntityEventArgument,"reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmDisconnectedEvent = merge({"type":"VmDisconnectedEvent"}, _self.VmEvent);
    _self.VmDiscoveredEvent = merge({"type":"VmDiscoveredEvent"}, _self.VmEvent);
    _self.VmDiskFailedEvent = merge({"type":"VmDiskFailedEvent","properties":{"disk":"xsd:string","reason":_self.LocalizedMethodFault}}, _self.VmEvent);
    _self.VmEmigratingEvent = merge({"type":"VmEmigratingEvent"}, _self.VmEvent);
    _self.VmRelocatedEvent = merge({"type":"VmRelocatedEvent","properties":{"sourceHost":_self.HostEventArgument}}, _self.VmRelocateSpecEvent);
    _self.VmRelocateFailedEvent = merge({"type":"VmRelocateFailedEvent","properties":{"destHost":_self.HostEventArgument,"reason":_self.LocalizedMethodFault}}, _self.VmRelocateSpecEvent);
    _self.WeeklyTaskScheduler = merge({"type":"WeeklyTaskScheduler","properties":{"friday":"xsd:boolean","monday":"xsd:boolean","saturday":"xsd:boolean","sunday":"xsd:boolean","thursday":"xsd:boolean","tuesday":"xsd:boolean","wednesday":"xsd:boolean"}}, _self.DailyTaskScheduler);
    _self.AlarmActionTriggeredEvent = merge({"type":"AlarmActionTriggeredEvent","properties":{"entity":_self.ManagedEntityEventArgument,"source":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmCreatedEvent = merge({"type":"AlarmCreatedEvent","properties":{"entity":_self.ManagedEntityEventArgument}}, _self.AlarmEvent);
    _self.AlarmEmailCompletedEvent = merge({"type":"AlarmEmailCompletedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"to":"xsd:string"}}, _self.AlarmEvent);
    _self.AlarmEmailFailedEvent = merge({"type":"AlarmEmailFailedEvent","properties":{"entity":_self.ManagedEntityEventArgument,"reason":_self.LocalizedMethodFault,"to":"xsd:string"}}, _self.AlarmEvent);
    _self.ClusterComputeResource = merge({"type":"ClusterComputeResource","properties":{"actionHistory":_self.ClusterActionHistory,"configuration":_self.ClusterConfigInfo,"drsRecommendation":_self.ClusterDrsRecommendation,"migrationHistory":_self.ClusterDrsMigration,"recommendation":_self.ClusterRecommendation},"methods":{"AddHost_Task":{"params":{"_this":"ManagedObjectReference","spec":"HostConnectSpec","asConnected":"xsd:boolean","resourcePool":"ManagedObjectReferencetoaResourcePool"},"returns":"ManagedObjectReference"},"ApplyRecommendation":{"params":{"_this":"ManagedObjectReference","key":"xsd:string"},"returns":null},"MoveHostInto_Task":{"params":{"_this":"ManagedObjectReference","hostP":"ManagedObjectReferencetoaHostSystem","resourcePool":"ManagedObjectReferencetoaResourcePool"},"returns":"ManagedObjectReference"},"MoveInto_Task":{"params":{"_this":"ManagedObjectReference","hostP":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"RecommendHostsForVm":{"params":{"_this":"ManagedObjectReference","vm":"ManagedObjectReferencetoaVirtualMachine","pool":"ManagedObjectReferencetoaResourcePool"},"returns":"ClusterHostRecommendation"},"ReconfigureCluster_Task":{"params":{"_this":"ManagedObjectReference","spec":"ClusterConfigSpec","modify":"xsd:boolean"},"returns":"ManagedObjectReference"},"RefreshRecommendation":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ComputeResource);
    _self.ClusterCreatedEvent = merge({"type":"ClusterCreatedEvent","properties":{"parent":_self.FolderEventArgument}}, _self.ClusterEvent);
    _self.ClusterDestroyedEvent = merge({"type":"ClusterDestroyedEvent"}, _self.ClusterEvent);
    _self.CustomFieldDefEvent = merge({"type":"CustomFieldDefEvent","properties":{"fieldKey":"xsd:int","name":"xsd:string"}}, _self.CustomFieldEvent);
    _self.CustomFieldDefRemovedEvent = merge({"type":"CustomFieldDefRemovedEvent"}, _self.CustomFieldDefEvent);
    _self.CustomFieldDefRenamedEvent = merge({"type":"CustomFieldDefRenamedEvent","properties":{"newName":"xsd:string"}}, _self.CustomFieldDefEvent);
    _self.DatacenterCreatedEvent = merge({"type":"DatacenterCreatedEvent","properties":{"parent":_self.FolderEventArgument}}, _self.DatacenterEvent);
    _self.DatastoreDestroyedEvent = merge({"type":"DatastoreDestroyedEvent"}, _self.DatastoreEvent);
    _self.DatastoreDuplicatedEvent = merge({"type":"DatastoreDuplicatedEvent"}, _self.DatastoreEvent);
    _self.DrsEnteredStandbyModeEvent = merge({"type":"DrsEnteredStandbyModeEvent"}, _self.EnteredStandbyModeEvent);
    _self.DrsExitedStandbyModeEvent = merge({"type":"DrsExitedStandbyModeEvent"}, _self.ExitedStandbyModeEvent);
    _self.HealthSystemRuntime = merge({"type":"HealthSystemRuntime","properties":{"hardwareStatusInfo":_self.HostHardwareStatusInfo,"systemHealthInfo":_self.HostSystemHealthInfo}}, _self.DynamicData);
    _self.HostNetworkInfo = merge({"type":"HostNetworkInfo","properties":{"consoleIpRouteConfig":_self.HostIpRouteConfig,"consoleVnic":_self.HostVirtualNic,"dhcp":_self.HostDhcpService,"dnsConfig":_self.HostDnsConfig,"ipRouteConfig":_self.HostIpRouteConfig,"nat":_self.HostNatService,"pnic":_self.PhysicalNic,"portgroup":_self.HostPortGroup,"vnic":_self.HostVirtualNic,"vswitch":_self.HostVirtualSwitch}}, _self.DynamicData);
    _self.HostStorageDeviceInfo = merge({"type":"HostStorageDeviceInfo","properties":{"hostBusAdapter":_self.HostHostBusAdapter,"multipathInfo":_self.HostMultipathInfo,"scsiLun":_self.ScsiLun,"scsiTopology":_self.HostScsiTopology,"softwareInternetScsiEnabled":"xsd:boolean"}}, _self.DynamicData);
    _self.VirtualMachineSummary = merge({"type":"VirtualMachineSummary","properties":{"config":_self.VirtualMachineConfigSummary,"customValue":_self.CustomFieldValue,"guest":_self.VirtualMachineGuestSummary,"overallStatus":_self.ManagedEntityStatus,"quickStats":_self.VirtualMachineQuickStats,"runtime":_self.VirtualMachineRuntimeInfo,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.HostHardwareInfo = merge({"type":"HostHardwareInfo","properties":{"biosInfo":_self.HostBIOSInfo,"cpuFeature":_self.HostCpuIdInfo,"cpuInfo":_self.HostCpuInfo,"cpuPkg":_self.HostCpuPackage,"memorySize":"xsd:long","numaInfo":_self.HostNumaInfo,"pciDevice":_self.HostPciDevice,"systemInfo":_self.HostSystemInfo}}, _self.DynamicData);
    _self.HostHealthStatusSystem = {"type":"HostHealthStatusSystem","properties":{"runtime":_self.HealthSystemRuntime},"methods":{"RefreshHealthStatusSystem":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ResetSystemHealthInfo":{"params":{"_this":"ManagedObjectReference"},"returns":null}}};
    _self.HostRuntimeInfo = merge({"type":"HostRuntimeInfo","properties":{"bootTime":"xsd:dateTime","connectionState":_self.HostSystemConnectionState,"healthSystemRuntime":_self.HealthSystemRuntime,"inMaintenanceMode":"xsd:boolean","powerState":_self.HostSystemPowerState}}, _self.DynamicData);
    _self.HostNetworkConfig = merge({"type":"HostNetworkConfig","properties":{"consoleIpRouteConfig":_self.HostIpRouteConfig,"consoleVnic":_self.HostVirtualNicConfig,"dhcp":_self.HostDhcpServiceConfig,"dnsConfig":_self.HostDnsConfig,"ipRouteConfig":_self.HostIpRouteConfig,"nat":_self.HostNatServiceConfig,"pnic":_self.PhysicalNicConfig,"portgroup":_self.HostPortGroupConfig,"vnic":_self.HostVirtualNicConfig,"vswitch":_self.HostVirtualSwitchConfig}}, _self.DynamicData);
    _self.HostNetworkSystem = merge({"type":"HostNetworkSystem","properties":{"capabilities":_self.HostNetCapabilities,"consoleIpRouteConfig":_self.HostIpRouteConfig,"dnsConfig":_self.HostDnsConfig,"ipRouteConfig":_self.HostIpRouteConfig,"networkConfig":_self.HostNetworkConfig,"networkInfo":_self.HostNetworkInfo,"offloadCapabilities":_self.HostNetOffloadCapabilities},"methods":{"AddPortGroup":{"params":{"_this":"ManagedObjectReference","portgrp":"HostPortGroupSpec"},"returns":null},"AddServiceConsoleVirtualNic":{"params":{"_this":"ManagedObjectReference","portgroup":"xsd:string","nic":"HostVirtualNicSpec"},"returns":"xsd:string"},"AddVirtualNic":{"params":{"_this":"ManagedObjectReference","portgroup":"xsd:string","nic":"HostVirtualNicSpec"},"returns":"xsd:string"},"AddVirtualSwitch":{"params":{"_this":"ManagedObjectReference","vswitchName":"xsd:string","spec":"HostVirtualSwitchSpec"},"returns":null},"QueryNetworkHint":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":"PhysicalNicHintInfo"},"RefreshNetworkSystem":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RemovePortGroup":{"params":{"_this":"ManagedObjectReference","pgName":"xsd:string"},"returns":null},"RemoveServiceConsoleVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":null},"RemoveVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":null},"RemoveVirtualSwitch":{"params":{"_this":"ManagedObjectReference","vswitchName":"xsd:string"},"returns":null},"RestartServiceConsoleVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string"},"returns":null},"UpdateConsoleIpRouteConfig":{"params":{"_this":"ManagedObjectReference","config":"HostIpRouteConfig"},"returns":null},"UpdateDnsConfig":{"params":{"_this":"ManagedObjectReference","config":"HostDnsConfig"},"returns":null},"UpdateIpRouteConfig":{"params":{"_this":"ManagedObjectReference","config":"HostIpRouteConfig"},"returns":null},"UpdateNetworkConfig":{"params":{"_this":"ManagedObjectReference","config":"HostNetworkConfig","changeMode":"xsd:string"},"returns":"HostNetworkConfigResult"},"UpdatePhysicalNicLinkSpeed":{"params":{"_this":"ManagedObjectReference","device":"xsd:string","linkSpeed":"PhysicalNicLinkInfo"},"returns":null},"UpdatePortGroup":{"params":{"_this":"ManagedObjectReference","pgName":"xsd:string","portgrp":"HostPortGroupSpec"},"returns":null},"UpdateServiceConsoleVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string","nic":"HostVirtualNicSpec"},"returns":null},"UpdateVirtualNic":{"params":{"_this":"ManagedObjectReference","device":"xsd:string","nic":"HostVirtualNicSpec"},"returns":null},"UpdateVirtualSwitch":{"params":{"_this":"ManagedObjectReference","vswitchName":"xsd:string","spec":"HostVirtualSwitchSpec"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.HostStorageSystem = merge({"type":"HostStorageSystem","properties":{"fileSystemVolumeInfo":_self.HostFileSystemVolumeInfo,"storageDeviceInfo":_self.HostStorageDeviceInfo},"methods":{"AddInternetScsiSendTargets":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targets":"HostInternetScsiHbaSendTarget"},"returns":null},"AddInternetScsiStaticTargets":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targets":"HostInternetScsiHbaStaticTarget"},"returns":null},"AttachVmfsExtent":{"params":{"_this":"ManagedObjectReference","vmfsPath":"xsd:string","extent":"HostScsiDiskPartition"},"returns":null},"ComputeDiskPartitionInfo":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string","layout":"HostDiskPartitionLayout"},"returns":"HostDiskPartitionInfo"},"DisableMultipathPath":{"params":{"_this":"ManagedObjectReference","pathName":"xsd:string"},"returns":null},"EnableMultipathPath":{"params":{"_this":"ManagedObjectReference","pathName":"xsd:string"},"returns":null},"FormatVmfs":{"params":{"_this":"ManagedObjectReference","createSpec":"HostVmfsSpec"},"returns":"HostVmfsVolume"},"RefreshStorageSystem":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RemoveInternetScsiSendTargets":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targets":"HostInternetScsiHbaSendTarget"},"returns":null},"RemoveInternetScsiStaticTargets":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","targets":"HostInternetScsiHbaStaticTarget"},"returns":null},"RescanAllHba":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RescanHba":{"params":{"_this":"ManagedObjectReference","hbaDevice":"xsd:string"},"returns":null},"RescanVmfs":{"params":{"_this":"ManagedObjectReference"},"returns":null},"RetrieveDiskPartitionInfo":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string"},"returns":"HostDiskPartitionInfo"},"SetMultipathLunPolicy":{"params":{"_this":"ManagedObjectReference","lunId":"xsd:string","policy":"HostMultipathInfoLogicalUnitPolicy"},"returns":null},"UpdateDiskPartitions":{"params":{"_this":"ManagedObjectReference","devicePath":"xsd:string","spec":"HostDiskPartitionSpec"},"returns":null},"UpdateInternetScsiAlias":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","iScsiAlias":"xsd:string"},"returns":null},"UpdateInternetScsiAuthenticationProperties":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","authenticationProperties":"HostInternetScsiHbaAuthenticationProperties"},"returns":null},"UpdateInternetScsiDiscoveryProperties":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","discoveryProperties":"HostInternetScsiHbaDiscoveryProperties"},"returns":null},"UpdateInternetScsiIPProperties":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","ipProperties":"HostInternetScsiHbaIPProperties"},"returns":null},"UpdateInternetScsiName":{"params":{"_this":"ManagedObjectReference","iScsiHbaDevice":"xsd:string","iScsiName":"xsd:string"},"returns":null},"UpdateSoftwareInternetScsiEnabled":{"params":{"_this":"ManagedObjectReference","enabled":"xsd:boolean"},"returns":null},"UpgradeVmfs":{"params":{"_this":"ManagedObjectReference","vmfsPath":"xsd:string"},"returns":null},"UpgradeVmLayout":{"params":{"_this":"ManagedObjectReference"},"returns":null}}}, _self.ExtensibleManagedObject);
    _self.MigrationErrorEvent = merge({"type":"MigrationErrorEvent"}, _self.MigrationEvent);
    _self.MonthlyByDayTaskScheduler = merge({"type":"MonthlyByDayTaskScheduler","properties":{"day":"xsd:int"}}, _self.MonthlyTaskScheduler);
    _self.MonthlyByWeekdayTaskScheduler = merge({"type":"MonthlyByWeekdayTaskScheduler","properties":{"offset":_self.WeekOfMonth,"weekday":_self.DayOfWeek}}, _self.MonthlyTaskScheduler);
    _self.PermissionAddedEvent = merge({"type":"PermissionAddedEvent","properties":{"propagate":"xsd:boolean","role":_self.RoleEventArgument}}, _self.PermissionEvent);
    _self.RoleAddedEvent = merge({"type":"RoleAddedEvent","properties":{"privilegeList":"xsd:string[]"}}, _self.RoleEvent);
    _self.VmBeingClonedEvent = merge({"type":"VmBeingClonedEvent","properties":{"destFolder":_self.FolderEventArgument,"destHost":_self.HostEventArgument,"destName":"xsd:string"}}, _self.VmCloneEvent);
    _self.VmClonedEvent = merge({"type":"VmClonedEvent","properties":{"sourceVm":_self.VmEventArgument}}, _self.VmCloneEvent);
    _self.VirtualMachineUsbInfo = merge({"type":"VirtualMachineUsbInfo","properties":{"description":"xsd:string","family":"xsd:string[]","physicalPath":"xsd:string","product":"xsd:int","speed":"xsd:string[]","summary":_self.VirtualMachineSummary,"vendor":"xsd:int"}}, _self.VirtualMachineTargetInfo);
    _self.CustomFieldDefAddedEvent = merge({"type":"CustomFieldDefAddedEvent"}, _self.CustomFieldDefEvent);
    _self.HostListSummary = merge({"type":"HostListSummary","properties":{"config":_self.HostConfigSummary,"customValue":_self.CustomFieldValue,"hardware":_self.HostHardwareSummary,"host":_self.ManagedObjectReference,"managementServerIp":"xsd:string","overallStatus":_self.ManagedEntityStatus,"quickStats":_self.HostListSummaryQuickStats,"rebootRequired":"xsd:boolean","runtime":_self.HostRuntimeInfo}}, _self.DynamicData);
    _self.ConfigTarget = merge({"type":"ConfigTarget","properties":{"autoVmotion":"xsd:boolean","cdRom":_self.VirtualMachineCdromInfo,"datastore":_self.VirtualMachineDatastoreInfo,"floppy":_self.VirtualMachineFloppyInfo,"ideDisk":_self.VirtualMachineIdeDiskDeviceInfo,"legacyNetworkInfo":_self.VirtualMachineLegacyNetworkSwitchInfo,"maxMemMBOptimalPerf":"xsd:int","network":_self.VirtualMachineNetworkInfo,"numCpuCores":"xsd:int","numCpus":"xsd:int","numNumaNodes":"xsd:int","parallel":_self.VirtualMachineParallelInfo,"resourcePool":_self.ResourcePoolRuntimeInfo,"scsiDisk":_self.VirtualMachineScsiDiskDeviceInfo,"scsiPassthrough":_self.VirtualMachineScsiPassthroughInfo,"serial":_self.VirtualMachineSerialInfo,"sound":_self.VirtualMachineSoundInfo,"usb":_self.VirtualMachineUsbInfo}}, _self.DynamicData);
    _self.HostConnectInfo = merge({"type":"HostConnectInfo","properties":{"clusterSupported":"xsd:boolean","datastore":_self.HostDatastoreConnectInfo,"host":_self.HostListSummary,"network":_self.HostConnectInfoNetworkInfo,"serverIp":"xsd:string","vimAccountNameRequired":"xsd:boolean","vm":_self.VirtualMachineSummary}}, _self.DynamicData);
    _self.VirtualMachineSnapshotTree = merge({"type":"VirtualMachineSnapshotTree","properties":{"childSnapshotList":_self.VirtualMachineSnapshotTree,"createTime":"xsd:dateTime","description":"xsd:string","name":"xsd:string","quiesced":"xsd:boolean","snapshot":_self.ManagedObjectReference,"state":_self.VirtualMachinePowerState,"vm":_self.ManagedObjectReference}}, _self.DynamicData);
    _self.VirtualMachineSnapshotInfo = merge({"type":"VirtualMachineSnapshotInfo","properties":{"currentSnapshot":_self.ManagedObjectReference,"rootSnapshotList":_self.VirtualMachineSnapshotTree}}, _self.DynamicData);
    _self.VirtualMachine = merge({"type":"VirtualMachine","properties":{"capability":_self.VirtualMachineCapability,"config":_self.VirtualMachineConfigInfo,"datastore":_self.ManagedObjectReference,"environmentBrowser":_self.ManagedObjectReference,"guest":_self.GuestInfo,"guestHeartbeatStatus":_self.ManagedEntityStatus,"layout":_self.VirtualMachineFileLayout,"network":_self.ManagedObjectReference,"resourceConfig":_self.ResourceConfigSpec,"resourcePool":_self.ManagedObjectReference,"runtime":_self.VirtualMachineRuntimeInfo,"snapshot":_self.VirtualMachineSnapshotInfo,"summary":_self.VirtualMachineSummary},"methods":{"AcquireMksTicket":{"params":{"_this":"ManagedObjectReference"},"returns":"VirtualMachineMksTicket"},"AnswerVM":{"params":{"_this":"ManagedObjectReference","questionId":"xsd:string","answerChoice":"xsd:string"},"returns":null},"CheckCustomizationSpec":{"params":{"_this":"ManagedObjectReference","spec":"CustomizationSpec"},"returns":null},"CloneVM_Task":{"params":{"_this":"ManagedObjectReference","folderP":"ManagedObjectReferencetoaFolder","name":"xsd:string","spec":"VirtualMachineCloneSpec"},"returns":"ManagedObjectReference"},"CreateSnapshot_Task":{"params":{"_this":"ManagedObjectReference","name":"xsd:string","description":"xsd:string","memory":"xsd:boolean","quiesce":"xsd:boolean"},"returns":"ManagedObjectReference"},"CustomizeVM_Task":{"params":{"_this":"ManagedObjectReference","spec":"CustomizationSpec"},"returns":"ManagedObjectReference"},"DefragmentAllDisks":{"params":{"_this":"ManagedObjectReference"},"returns":null},"MarkAsTemplate":{"params":{"_this":"ManagedObjectReference"},"returns":null},"MarkAsVirtualMachine":{"params":{"_this":"ManagedObjectReference","poolP":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem"},"returns":null},"MigrateVM_Task":{"params":{"_this":"ManagedObjectReference","poolP":"ManagedObjectReferencetoaResourcePool","host":"ManagedObjectReferencetoaHostSystem","priority":"VirtualMachineMovePriority","state":"VirtualMachinePowerState"},"returns":"ManagedObjectReference"},"MountToolsInstaller":{"params":{"_this":"ManagedObjectReference"},"returns":null},"PowerOffVM_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"PowerOnVM_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"RebootGuest":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ReconfigVM_Task":{"params":{"_this":"ManagedObjectReference","spec":"VirtualMachineConfigSpec"},"returns":"ManagedObjectReference"},"RelocateVM_Task":{"params":{"_this":"ManagedObjectReference","spec":"VirtualMachineRelocateSpec"},"returns":"ManagedObjectReference"},"RemoveAllSnapshots_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ResetGuestInformation":{"params":{"_this":"ManagedObjectReference"},"returns":null},"ResetVM_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"RevertToCurrentSnapshot_Task":{"params":{"_this":"ManagedObjectReference","host":"ManagedObjectReferencetoaHostSystem"},"returns":"ManagedObjectReference"},"SetScreenResolution":{"params":{"_this":"ManagedObjectReference","width":"xsd:int","height":"xsd:int"},"returns":null},"ShutdownGuest":{"params":{"_this":"ManagedObjectReference"},"returns":null},"StandbyGuest":{"params":{"_this":"ManagedObjectReference"},"returns":null},"SuspendVM_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"UnmountToolsInstaller":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UnregisterVM":{"params":{"_this":"ManagedObjectReference"},"returns":null},"UpgradeTools_Task":{"params":{"_this":"ManagedObjectReference","installerOptions":"xsd:string"},"returns":"ManagedObjectReference"},"UpgradeVM_Task":{"params":{"_this":"ManagedObjectReference","version":"xsd:string"},"returns":"ManagedObjectReference"}}}, _self.ManagedEntity);
    _self.HostSystemResourceInfo = merge({"type":"HostSystemResourceInfo","properties":{"child":_self.HostSystemResourceInfo,"config":_self.ResourceConfigSpec,"key":"xsd:string"}}, _self.DynamicData);
    _self.HostConfigInfo = merge({"type":"HostConfigInfo","properties":{"activeDiagnosticPartition":_self.HostDiagnosticPartition,"adminDisabled":"xsd:boolean","autoStart":_self.HostAutoStartManagerConfig,"capabilities":_self.HostNetCapabilities,"consoleReservation":_self.ServiceConsoleReservationInfo,"datastoreCapabilities":_self.HostDatastoreSystemCapabilities,"datastorePrincipal":"xsd:string","dateTimeInfo":_self.HostDateTimeInfo,"fileSystemVolume":_self.HostFileSystemVolumeInfo,"firewall":_self.HostFirewallInfo,"flags":_self.HostFlagInfo,"host":_self.ManagedObjectReference,"hyperThread":_self.HostHyperThreadScheduleInfo,"localSwapDatastore":_self.ManagedObjectReference,"network":_self.HostNetworkInfo,"offloadCapabilities":_self.HostNetOffloadCapabilities,"option":_self.OptionValue,"optionDef":_self.OptionDef,"product":_self.AboutInfo,"service":_self.HostServiceInfo,"storageDevice":_self.HostStorageDeviceInfo,"systemResources":_self.HostSystemResourceInfo,"virtualMachineReservation":_self.VirtualMachineMemoryReservationInfo,"vmotion":_self.HostVMotionInfo}}, _self.DynamicData);
    _self.HostSystem = merge({"type":"HostSystem","properties":{"capability":_self.HostCapability,"config":_self.HostConfigInfo,"configManager":_self.HostConfigManager,"datastore":_self.ManagedObjectReference,"datastoreBrowser":_self.ManagedObjectReference,"hardware":_self.HostHardwareInfo,"network":_self.ManagedObjectReference,"runtime":_self.HostRuntimeInfo,"summary":_self.HostListSummary,"systemResources":_self.HostSystemResourceInfo,"vm":_self.ManagedObjectReference},"methods":{"AcquireCimServicesTicket":{"params":{"_this":"ManagedObjectReference"},"returns":"HostServiceTicket"},"DisconnectHost_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"EnterMaintenanceMode_Task":{"params":{"_this":"ManagedObjectReference","timeout":"xsd:int","evacuatePoweredOffVms":"xsd:boolean"},"returns":"ManagedObjectReference"},"ExitMaintenanceMode_Task":{"params":{"_this":"ManagedObjectReference","timeout":"xsd:int"},"returns":"ManagedObjectReference"},"PowerDownHostToStandBy_Task":{"params":{"_this":"ManagedObjectReference","timeoutSec":"xsd:int","evacuatePoweredOffVms":"xsd:boolean"},"returns":"ManagedObjectReference"},"PowerUpHostFromStandBy_Task":{"params":{"_this":"ManagedObjectReference","timeoutSec":"xsd:int"},"returns":"ManagedObjectReference"},"QueryHostConnectionInfo":{"params":{"_this":"ManagedObjectReference"},"returns":"HostConnectInfo"},"QueryMemoryOverhead":{"params":{"_this":"ManagedObjectReference","memorySize":"xsd:long","videoRamSize":"xsd:int","numVcpus":"xsd:int"},"returns":"xsd:long"},"QueryMemoryOverheadEx":{"params":{"_this":"ManagedObjectReference","vmConfigInfo":"VirtualMachineConfigInfo"},"returns":"xsd:long"},"RebootHost_Task":{"params":{"_this":"ManagedObjectReference","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"ReconfigureHostForDAS_Task":{"params":{"_this":"ManagedObjectReference"},"returns":"ManagedObjectReference"},"ReconnectHost_Task":{"params":{"_this":"ManagedObjectReference","cnxSpec":"HostConnectSpec"},"returns":"ManagedObjectReference"},"ShutdownHost_Task":{"params":{"_this":"ManagedObjectReference","force":"xsd:boolean"},"returns":"ManagedObjectReference"},"UpdateFlags":{"params":{"_this":"ManagedObjectReference","flagInfo":"HostFlagInfo"},"returns":null},"UpdateSystemResources":{"params":{"_this":"ManagedObjectReference","resourceInfo":"HostSystemResourceInfo"},"returns":null}}}, _self.ManagedEntity);


    return _self;

};